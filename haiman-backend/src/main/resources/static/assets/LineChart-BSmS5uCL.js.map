{"version":3,"file":"LineChart-BSmS5uCL.js","sources":["../../src/components/va-charts/chart-types/LineChart.vue"],"sourcesContent":["<template>\n  <Line ref=\"chart\" :data=\"computedChartData\" :options=\"options\" />\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from 'vue'\nimport { Line } from 'vue-chartjs'\nimport type { ChartOptions } from 'chart.js'\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  LineElement,\n  LinearScale,\n  PointElement,\n  CategoryScale,\n  Filler,\n} from 'chart.js'\nimport { TLineChartData } from '../../../data/types'\nimport { computed } from 'vue'\nimport { useColors } from 'vuestic-ui'\n\nChartJS.register(Title, Tooltip, Legend, LineElement, LinearScale, PointElement, CategoryScale, Filler)\n\nconst chart = ref<typeof Line>()\n\nconst props = defineProps<{\n  data: TLineChartData\n  options?: ChartOptions<'line'>\n}>()\n\nconst ctx = computed(() => {\n  if (!chart.value) {\n    return null\n  }\n\n  return chart.value.chart?.ctx ?? null\n})\n\nconst { setHSLAColor, getColor } = useColors()\n\nconst colors = ['primary', 'success', 'danger', 'warning']\n\nconst computedChartData = computed<TLineChartData>(() => {\n  if (!ctx.value) {\n    return props.data\n  }\n\n  const makeGradient = (bg: string) => {\n    const gradient = ctx.value!.createLinearGradient(0, 0, 0, 90)\n    gradient.addColorStop(0, setHSLAColor(bg, { a: 0.4 }))\n    gradient.addColorStop(1, setHSLAColor(bg, { a: 0.0 }))\n    return gradient\n  }\n\n  const datasets = props.data.datasets.map((dataset, index) => {\n    const color = getColor(colors[index % colors.length])\n\n    return {\n      ...dataset,\n      fill: true,\n      backgroundColor: makeGradient(color),\n      borderColor: color,\n      pointRadius: 0,\n      borderWidth: 2,\n    }\n  })\n\n  return { ...props.data, datasets }\n})\n</script>\n"],"names":["ChartJS","Title","Tooltip","Legend","LineElement","LinearScale","PointElement","CategoryScale","Filler","chart","ref","props","__props","ctx","computed","_a","setHSLAColor","getColor","useColors","colors","computedChartData","makeGradient","bg","gradient","datasets","dataset","index","color"],"mappings":"uWAuBQA,EAAA,SAASC,EAAOC,EAASC,EAAQC,EAAaC,EAAaC,EAAcC,EAAeC,CAAM,EAEtG,MAAMC,EAAQC,IAERC,EAAQC,EAKRC,EAAMC,EAAS,IAAM,OACrB,OAACL,EAAM,QAIJM,EAAAN,EAAM,MAAM,QAAZ,YAAAM,EAAmB,MAAO,KAHxB,IAGwB,CAClC,EAEK,CAAE,aAAAC,EAAc,SAAAC,CAAS,EAAIC,EAAU,EAEvCC,EAAS,CAAC,UAAW,UAAW,SAAU,SAAS,EAEnDC,EAAoBN,EAAyB,IAAM,CACnD,GAAA,CAACD,EAAI,MACP,OAAOF,EAAM,KAGT,MAAAU,EAAgBC,GAAe,CACnC,MAAMC,EAAWV,EAAI,MAAO,qBAAqB,EAAG,EAAG,EAAG,EAAE,EACnD,OAAAU,EAAA,aAAa,EAAGP,EAAaM,EAAI,CAAE,EAAG,EAAK,CAAA,CAAC,EAC5CC,EAAA,aAAa,EAAGP,EAAaM,EAAI,CAAE,EAAG,CAAK,CAAA,CAAC,EAC9CC,CAAA,EAGHC,EAAWb,EAAM,KAAK,SAAS,IAAI,CAACc,EAASC,IAAU,CAC3D,MAAMC,EAAQV,EAASE,EAAOO,EAAQP,EAAO,MAAM,CAAC,EAE7C,MAAA,CACL,GAAGM,EACH,KAAM,GACN,gBAAiBJ,EAAaM,CAAK,EACnC,YAAaA,EACb,YAAa,EACb,YAAa,CAAA,CACf,CACD,EAED,MAAO,CAAE,GAAGhB,EAAM,KAAM,SAAAa,CAAS,CAAA,CAClC"}