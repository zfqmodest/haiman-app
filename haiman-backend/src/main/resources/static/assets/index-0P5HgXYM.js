const __vite__mapDeps = (
  i,
  m = __vite__mapDeps,
  d = m.f ||
    (m.f = [
      'assets/Login-Bdo3PIOR.js',
      'assets/utils-CXsEiNOM.js',
      'assets/useToast-BC5rw6nA.js',
      'assets/RecoverPassword-B1tPpkPu.js',
      'assets/Dashboard-DVRfWaeA.js',
      'assets/fabrics-ICBww9Ht.js',
      'assets/useUsers-CVVRekrF.js',
      'assets/v4-Ch9TGLTe.js',
      'assets/Dashboard-CxR4vr5Y.css',
      'assets/UsersPage-BM4tyEGw.js',
      'assets/index-BSHr1LGa.js',
      'assets/UsersPage-BS0l0dYe.css',
      'assets/ProjectsPage-DaFgbvAI.js',
      'assets/ProjectsPage-DZf-O5_G.css',
      'assets/TestingItemsPage-Co-6TqXW.js',
      'assets/TestingItemsPage-BY7JMFcV.css',
    ]),
) => i.map((i) => d[i])
;(function () {
  const t = document.createElement('link').relList
  if (t && t.supports && t.supports('modulepreload')) return
  for (const r of document.querySelectorAll('link[rel="modulepreload"]')) o(r)
  new MutationObserver((r) => {
    for (const a of r)
      if (a.type === 'childList')
        for (const l of a.addedNodes) l.tagName === 'LINK' && l.rel === 'modulepreload' && o(l)
  }).observe(document, { childList: !0, subtree: !0 })
  function n(r) {
    const a = {}
    return (
      r.integrity && (a.integrity = r.integrity),
      r.referrerPolicy && (a.referrerPolicy = r.referrerPolicy),
      r.crossOrigin === 'use-credentials'
        ? (a.credentials = 'include')
        : r.crossOrigin === 'anonymous'
          ? (a.credentials = 'omit')
          : (a.credentials = 'same-origin'),
      a
    )
  }
  function o(r) {
    if (r.ep) return
    r.ep = !0
    const a = n(r)
    fetch(r.href, a)
  }
})()
/**
 * @vue/shared v3.5.8
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/ /*! #__NO_SIDE_EFFECTS__ */ function Jy(e) {
  const t = Object.create(null)
  for (const n of e.split(',')) t[n] = 1
  return (n) => n in t
}
const Qy = {},
  Zy = () => {}
const e_ = (e, t) => {
    const n = e.indexOf(t)
    n > -1 && e.splice(n, 1)
  },
  t_ = Object.prototype.hasOwnProperty,
  Nl = (e, t) => t_.call(e, t),
  Xn = Array.isArray,
  ua = (e) => rs(e) === '[object Map]',
  n_ = (e) => rs(e) === '[object Set]',
  Rl = (e) => typeof e == 'function',
  o_ = (e) => typeof e == 'string',
  Fa = (e) => typeof e == 'symbol',
  Wr = (e) => e !== null && typeof e == 'object',
  r_ = Object.prototype.toString,
  rs = (e) => r_.call(e),
  a_ = (e) => rs(e).slice(8, -1),
  l_ = (e) => rs(e) === '[object Object]',
  zu = (e) => o_(e) && e !== 'NaN' && e[0] !== '-' && '' + parseInt(e, 10) === e,
  So = (e, t) => !Object.is(e, t),
  s_ = (e, t, n, o = !1) => {
    Object.defineProperty(e, t, { configurable: !0, enumerable: !1, writable: o, value: n })
  }
/**
 * @vue/reactivity v3.5.8
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/ let Jt
class op {
  constructor(t = !1) {
    ;(this.detached = t),
      (this._active = !0),
      (this.effects = []),
      (this.cleanups = []),
      (this._isPaused = !1),
      (this.parent = Jt),
      !t && Jt && (this.index = (Jt.scopes || (Jt.scopes = [])).push(this) - 1)
  }
  get active() {
    return this._active
  }
  pause() {
    if (this._active) {
      this._isPaused = !0
      let t, n
      if (this.scopes) for (t = 0, n = this.scopes.length; t < n; t++) this.scopes[t].pause()
      for (t = 0, n = this.effects.length; t < n; t++) this.effects[t].pause()
    }
  }
  resume() {
    if (this._active && this._isPaused) {
      this._isPaused = !1
      let t, n
      if (this.scopes) for (t = 0, n = this.scopes.length; t < n; t++) this.scopes[t].resume()
      for (t = 0, n = this.effects.length; t < n; t++) this.effects[t].resume()
    }
  }
  run(t) {
    if (this._active) {
      const n = Jt
      try {
        return (Jt = this), t()
      } finally {
        Jt = n
      }
    }
  }
  on() {
    Jt = this
  }
  off() {
    Jt = this.parent
  }
  stop(t) {
    if (this._active) {
      let n, o
      for (n = 0, o = this.effects.length; n < o; n++) this.effects[n].stop()
      for (n = 0, o = this.cleanups.length; n < o; n++) this.cleanups[n]()
      if (this.scopes) for (n = 0, o = this.scopes.length; n < o; n++) this.scopes[n].stop(!0)
      if (!this.detached && this.parent && !t) {
        const r = this.parent.scopes.pop()
        r && r !== this && ((this.parent.scopes[this.index] = r), (r.index = this.index))
      }
      ;(this.parent = void 0), (this._active = !1)
    }
  }
}
function Cu(e) {
  return new op(e)
}
function Su() {
  return Jt
}
function rp(e, t = !1) {
  Jt && Jt.cleanups.push(e)
}
let bt
const qs = new WeakSet()
class ap {
  constructor(t) {
    ;(this.fn = t),
      (this.deps = void 0),
      (this.depsTail = void 0),
      (this.flags = 5),
      (this.next = void 0),
      (this.cleanup = void 0),
      (this.scheduler = void 0),
      Jt && Jt.active && Jt.effects.push(this)
  }
  pause() {
    this.flags |= 64
  }
  resume() {
    this.flags & 64 && ((this.flags &= -65), qs.has(this) && (qs.delete(this), this.trigger()))
  }
  notify() {
    ;(this.flags & 2 && !(this.flags & 32)) || this.flags & 8 || sp(this)
  }
  run() {
    if (!(this.flags & 1)) return this.fn()
    ;(this.flags |= 2), Dc(this), ip(this)
    const t = bt,
      n = kn
    ;(bt = this), (kn = !0)
    try {
      return this.fn()
    } finally {
      up(this), (bt = t), (kn = n), (this.flags &= -3)
    }
  }
  stop() {
    if (this.flags & 1) {
      for (let t = this.deps; t; t = t.nextDep) ku(t)
      ;(this.deps = this.depsTail = void 0), Dc(this), this.onStop && this.onStop(), (this.flags &= -2)
    }
  }
  trigger() {
    this.flags & 64 ? qs.add(this) : this.scheduler ? this.scheduler() : this.runIfDirty()
  }
  runIfDirty() {
    Vi(this) && this.run()
  }
  get dirty() {
    return Vi(this)
  }
}
let lp = 0,
  ca
function sp(e) {
  ;(e.flags |= 8), (e.next = ca), (ca = e)
}
function wu() {
  lp++
}
function $u() {
  if (--lp > 0) return
  let e
  for (; ca; ) {
    let t = ca
    for (ca = void 0; t; ) {
      const n = t.next
      if (((t.next = void 0), (t.flags &= -9), t.flags & 1))
        try {
          t.trigger()
        } catch (o) {
          e || (e = o)
        }
      t = n
    }
  }
  if (e) throw e
}
function ip(e) {
  for (let t = e.deps; t; t = t.nextDep) (t.version = -1), (t.prevActiveLink = t.dep.activeLink), (t.dep.activeLink = t)
}
function up(e, t = !1) {
  let n,
    o = e.depsTail,
    r = o
  for (; r; ) {
    const a = r.prevDep
    r.version === -1 ? (r === o && (o = a), ku(r, t), i_(r)) : (n = r),
      (r.dep.activeLink = r.prevActiveLink),
      (r.prevActiveLink = void 0),
      (r = a)
  }
  ;(e.deps = n), (e.depsTail = o)
}
function Vi(e) {
  for (let t = e.deps; t; t = t.nextDep)
    if (t.dep.version !== t.version || (t.dep.computed && (cp(t.dep.computed) || t.dep.version !== t.version)))
      return !0
  return !!e._dirty
}
function cp(e) {
  if ((e.flags & 4 && !(e.flags & 16)) || ((e.flags &= -17), e.globalVersion === Ca)) return
  e.globalVersion = Ca
  const t = e.dep
  if (((e.flags |= 2), t.version > 0 && !e.isSSR && e.deps && !Vi(e))) {
    e.flags &= -3
    return
  }
  const n = bt,
    o = kn
  ;(bt = e), (kn = !0)
  try {
    ip(e)
    const r = e.fn(e._value)
    ;(t.version === 0 || So(r, e._value)) && ((e._value = r), t.version++)
  } catch (r) {
    throw (t.version++, r)
  } finally {
    ;(bt = n), (kn = o), up(e, !0), (e.flags &= -3)
  }
}
function ku(e, t = !1) {
  const { dep: n, prevSub: o, nextSub: r } = e
  if (
    (o && ((o.nextSub = r), (e.prevSub = void 0)),
    r && ((r.prevSub = o), (e.nextSub = void 0)),
    n.subs === e && (n.subs = o),
    !n.subs)
  )
    if (n.computed) {
      n.computed.flags &= -5
      for (let a = n.computed.deps; a; a = a.nextDep) ku(a, !0)
    } else n.map && !t && (n.map.delete(n.key), n.map.size || Sa.delete(n.target))
}
function i_(e) {
  const { prevDep: t, nextDep: n } = e
  t && ((t.nextDep = n), (e.prevDep = void 0)), n && ((n.prevDep = t), (e.nextDep = void 0))
}
let kn = !0
const dp = []
function Ao() {
  dp.push(kn), (kn = !1)
}
function Eo() {
  const e = dp.pop()
  kn = e === void 0 ? !0 : e
}
function Dc(e) {
  const { cleanup: t } = e
  if (((e.cleanup = void 0), t)) {
    const n = bt
    bt = void 0
    try {
      t()
    } finally {
      bt = n
    }
  }
}
let Ca = 0
class u_ {
  constructor(t, n) {
    ;(this.sub = t),
      (this.dep = n),
      (this.version = n.version),
      (this.nextDep = this.prevDep = this.nextSub = this.prevSub = this.prevActiveLink = void 0)
  }
}
class as {
  constructor(t) {
    ;(this.computed = t),
      (this.version = 0),
      (this.activeLink = void 0),
      (this.subs = void 0),
      (this.target = void 0),
      (this.map = void 0),
      (this.key = void 0)
  }
  track(t) {
    if (!bt || !kn || bt === this.computed) return
    let n = this.activeLink
    if (n === void 0 || n.sub !== bt)
      (n = this.activeLink = new u_(bt, this)),
        bt.deps
          ? ((n.prevDep = bt.depsTail), (bt.depsTail.nextDep = n), (bt.depsTail = n))
          : (bt.deps = bt.depsTail = n),
        bt.flags & 4 && mp(n)
    else if (n.version === -1 && ((n.version = this.version), n.nextDep)) {
      const o = n.nextDep
      ;(o.prevDep = n.prevDep),
        n.prevDep && (n.prevDep.nextDep = o),
        (n.prevDep = bt.depsTail),
        (n.nextDep = void 0),
        (bt.depsTail.nextDep = n),
        (bt.depsTail = n),
        bt.deps === n && (bt.deps = o)
    }
    return n
  }
  trigger(t) {
    this.version++, Ca++, this.notify(t)
  }
  notify(t) {
    wu()
    try {
      for (let n = this.subs; n; n = n.prevSub) n.sub.notify() && n.sub.dep.notify()
    } finally {
      $u()
    }
  }
}
function mp(e) {
  const t = e.dep.computed
  if (t && !e.dep.subs) {
    t.flags |= 20
    for (let o = t.deps; o; o = o.nextDep) mp(o)
  }
  const n = e.dep.subs
  n !== e && ((e.prevSub = n), n && (n.nextSub = e)), (e.dep.subs = e)
}
const Sa = new WeakMap(),
  Xo = Symbol(''),
  Pi = Symbol(''),
  wa = Symbol('')
function Kt(e, t, n) {
  if (kn && bt) {
    let o = Sa.get(e)
    o || Sa.set(e, (o = new Map()))
    let r = o.get(n)
    r || (o.set(n, (r = new as())), (r.target = e), (r.map = o), (r.key = n)), r.track()
  }
}
function Jn(e, t, n, o, r, a) {
  const l = Sa.get(e)
  if (!l) {
    Ca++
    return
  }
  const s = (i) => {
    i && i.trigger()
  }
  if ((wu(), t === 'clear')) l.forEach(s)
  else {
    const i = Xn(e),
      u = i && zu(n)
    if (i && n === 'length') {
      const c = Number(o)
      l.forEach((d, m) => {
        ;(m === 'length' || m === wa || (!Fa(m) && m >= c)) && s(d)
      })
    } else
      switch ((n !== void 0 && s(l.get(n)), u && s(l.get(wa)), t)) {
        case 'add':
          i ? u && s(l.get('length')) : (s(l.get(Xo)), ua(e) && s(l.get(Pi)))
          break
        case 'delete':
          i || (s(l.get(Xo)), ua(e) && s(l.get(Pi)))
          break
        case 'set':
          ua(e) && s(l.get(Xo))
          break
      }
  }
  $u()
}
function c_(e, t) {
  var n
  return (n = Sa.get(e)) == null ? void 0 : n.get(t)
}
function _r(e) {
  const t = at(e)
  return t === e ? t : (Kt(t, 'iterate', wa), _n(e) ? t : t.map(Wt))
}
function ls(e) {
  return Kt((e = at(e)), 'iterate', wa), e
}
const d_ = {
  __proto__: null,
  [Symbol.iterator]() {
    return Ys(this, Symbol.iterator, Wt)
  },
  concat(...e) {
    return _r(this).concat(...e.map((t) => (Xn(t) ? _r(t) : t)))
  },
  entries() {
    return Ys(this, 'entries', (e) => ((e[1] = Wt(e[1])), e))
  },
  every(e, t) {
    return jn(this, 'every', e, t, void 0, arguments)
  },
  filter(e, t) {
    return jn(this, 'filter', e, t, (n) => n.map(Wt), arguments)
  },
  find(e, t) {
    return jn(this, 'find', e, t, Wt, arguments)
  },
  findIndex(e, t) {
    return jn(this, 'findIndex', e, t, void 0, arguments)
  },
  findLast(e, t) {
    return jn(this, 'findLast', e, t, Wt, arguments)
  },
  findLastIndex(e, t) {
    return jn(this, 'findLastIndex', e, t, void 0, arguments)
  },
  forEach(e, t) {
    return jn(this, 'forEach', e, t, void 0, arguments)
  },
  includes(...e) {
    return Xs(this, 'includes', e)
  },
  indexOf(...e) {
    return Xs(this, 'indexOf', e)
  },
  join(e) {
    return _r(this).join(e)
  },
  lastIndexOf(...e) {
    return Xs(this, 'lastIndexOf', e)
  },
  map(e, t) {
    return jn(this, 'map', e, t, void 0, arguments)
  },
  pop() {
    return ea(this, 'pop')
  },
  push(...e) {
    return ea(this, 'push', e)
  },
  reduce(e, ...t) {
    return Mc(this, 'reduce', e, t)
  },
  reduceRight(e, ...t) {
    return Mc(this, 'reduceRight', e, t)
  },
  shift() {
    return ea(this, 'shift')
  },
  some(e, t) {
    return jn(this, 'some', e, t, void 0, arguments)
  },
  splice(...e) {
    return ea(this, 'splice', e)
  },
  toReversed() {
    return _r(this).toReversed()
  },
  toSorted(e) {
    return _r(this).toSorted(e)
  },
  toSpliced(...e) {
    return _r(this).toSpliced(...e)
  },
  unshift(...e) {
    return ea(this, 'unshift', e)
  },
  values() {
    return Ys(this, 'values', Wt)
  },
}
function Ys(e, t, n) {
  const o = ls(e),
    r = o[t]()
  return (
    o !== e &&
      !_n(e) &&
      ((r._next = r.next),
      (r.next = () => {
        const a = r._next()
        return a.value && (a.value = n(a.value)), a
      })),
    r
  )
}
const m_ = Array.prototype
function jn(e, t, n, o, r, a) {
  const l = ls(e),
    s = l !== e && !_n(e),
    i = l[t]
  if (i !== m_[t]) {
    const d = i.apply(e, a)
    return s ? Wt(d) : d
  }
  let u = n
  l !== e &&
    (s
      ? (u = function (d, m) {
          return n.call(this, Wt(d), m, e)
        })
      : n.length > 2 &&
        (u = function (d, m) {
          return n.call(this, d, m, e)
        }))
  const c = i.call(l, u, o)
  return s && r ? r(c) : c
}
function Mc(e, t, n, o) {
  const r = ls(e)
  let a = n
  return (
    r !== e &&
      (_n(e)
        ? n.length > 3 &&
          (a = function (l, s, i) {
            return n.call(this, l, s, i, e)
          })
        : (a = function (l, s, i) {
            return n.call(this, l, Wt(s), i, e)
          })),
    r[t](a, ...o)
  )
}
function Xs(e, t, n) {
  const o = at(e)
  Kt(o, 'iterate', wa)
  const r = o[t](...n)
  return (r === -1 || r === !1) && Vu(n[0]) ? ((n[0] = at(n[0])), o[t](...n)) : r
}
function ea(e, t, n = []) {
  Ao(), wu()
  const o = at(e)[t].apply(e, n)
  return $u(), Eo(), o
}
const f_ = Jy('__proto__,__v_isRef,__isVue'),
  fp = new Set(
    Object.getOwnPropertyNames(Symbol)
      .filter((e) => e !== 'arguments' && e !== 'caller')
      .map((e) => Symbol[e])
      .filter(Fa),
  )
function p_(e) {
  Fa(e) || (e = String(e))
  const t = at(this)
  return Kt(t, 'has', e), t.hasOwnProperty(e)
}
class pp {
  constructor(t = !1, n = !1) {
    ;(this._isReadonly = t), (this._isShallow = n)
  }
  get(t, n, o) {
    const r = this._isReadonly,
      a = this._isShallow
    if (n === '__v_isReactive') return !r
    if (n === '__v_isReadonly') return r
    if (n === '__v_isShallow') return a
    if (n === '__v_raw')
      return o === (r ? (a ? bp : _p) : a ? yp : hp).get(t) || Object.getPrototypeOf(t) === Object.getPrototypeOf(o)
        ? t
        : void 0
    const l = Xn(t)
    if (!r) {
      let i
      if (l && (i = d_[n])) return i
      if (n === 'hasOwnProperty') return p_
    }
    const s = Reflect.get(t, n, nt(t) ? t : o)
    return (Fa(n) ? fp.has(n) : f_(n)) || (r || Kt(t, 'get', n), a)
      ? s
      : nt(s)
        ? l && zu(n)
          ? s
          : s.value
        : Wr(s)
          ? r
            ? zp(s)
            : on(s)
          : s
  }
}
class vp extends pp {
  constructor(t = !1) {
    super(!1, t)
  }
  set(t, n, o, r) {
    let a = t[n]
    if (!this._isShallow) {
      const i = Zo(a)
      if ((!_n(o) && !Zo(o) && ((a = at(a)), (o = at(o))), !Xn(t) && nt(a) && !nt(o)))
        return i ? !1 : ((a.value = o), !0)
    }
    const l = Xn(t) && zu(n) ? Number(n) < t.length : Nl(t, n),
      s = Reflect.set(t, n, o, nt(t) ? t : r)
    return t === at(r) && (l ? So(o, a) && Jn(t, 'set', n, o) : Jn(t, 'add', n, o)), s
  }
  deleteProperty(t, n) {
    const o = Nl(t, n)
    t[n]
    const r = Reflect.deleteProperty(t, n)
    return r && o && Jn(t, 'delete', n, void 0), r
  }
  has(t, n) {
    const o = Reflect.has(t, n)
    return (!Fa(n) || !fp.has(n)) && Kt(t, 'has', n), o
  }
  ownKeys(t) {
    return Kt(t, 'iterate', Xn(t) ? 'length' : Xo), Reflect.ownKeys(t)
  }
}
class gp extends pp {
  constructor(t = !1) {
    super(!0, t)
  }
  set(t, n) {
    return !0
  }
  deleteProperty(t, n) {
    return !0
  }
}
const v_ = new vp(),
  g_ = new gp(),
  h_ = new vp(!0),
  y_ = new gp(!0),
  Tu = (e) => e,
  ss = (e) => Reflect.getPrototypeOf(e)
function cl(e, t, n = !1, o = !1) {
  e = e.__v_raw
  const r = at(e),
    a = at(t)
  n || (So(t, a) && Kt(r, 'get', t), Kt(r, 'get', a))
  const { has: l } = ss(r),
    s = o ? Tu : n ? Au : Wt
  if (l.call(r, t)) return s(e.get(t))
  if (l.call(r, a)) return s(e.get(a))
  e !== r && e.get(t)
}
function dl(e, t = !1) {
  const n = this.__v_raw,
    o = at(n),
    r = at(e)
  return t || (So(e, r) && Kt(o, 'has', e), Kt(o, 'has', r)), e === r ? n.has(e) : n.has(e) || n.has(r)
}
function ml(e, t = !1) {
  return (e = e.__v_raw), !t && Kt(at(e), 'iterate', Xo), Reflect.get(e, 'size', e)
}
function Fc(e, t = !1) {
  !t && !_n(e) && !Zo(e) && (e = at(e))
  const n = at(this)
  return ss(n).has.call(n, e) || (n.add(e), Jn(n, 'add', e, e)), this
}
function jc(e, t, n = !1) {
  !n && !_n(t) && !Zo(t) && (t = at(t))
  const o = at(this),
    { has: r, get: a } = ss(o)
  let l = r.call(o, e)
  l || ((e = at(e)), (l = r.call(o, e)))
  const s = a.call(o, e)
  return o.set(e, t), l ? So(t, s) && Jn(o, 'set', e, t) : Jn(o, 'add', e, t), this
}
function Hc(e) {
  const t = at(this),
    { has: n, get: o } = ss(t)
  let r = n.call(t, e)
  r || ((e = at(e)), (r = n.call(t, e))), o && o.call(t, e)
  const a = t.delete(e)
  return r && Jn(t, 'delete', e, void 0), a
}
function Uc() {
  const e = at(this),
    t = e.size !== 0,
    n = e.clear()
  return t && Jn(e, 'clear', void 0, void 0), n
}
function fl(e, t) {
  return function (o, r) {
    const a = this,
      l = a.__v_raw,
      s = at(l),
      i = t ? Tu : e ? Au : Wt
    return !e && Kt(s, 'iterate', Xo), l.forEach((u, c) => o.call(r, i(u), i(c), a))
  }
}
function pl(e, t, n) {
  return function (...o) {
    const r = this.__v_raw,
      a = at(r),
      l = ua(a),
      s = e === 'entries' || (e === Symbol.iterator && l),
      i = e === 'keys' && l,
      u = r[e](...o),
      c = n ? Tu : t ? Au : Wt
    return (
      !t && Kt(a, 'iterate', i ? Pi : Xo),
      {
        next() {
          const { value: d, done: m } = u.next()
          return m ? { value: d, done: m } : { value: s ? [c(d[0]), c(d[1])] : c(d), done: m }
        },
        [Symbol.iterator]() {
          return this
        },
      }
    )
  }
}
function co(e) {
  return function (...t) {
    return e === 'delete' ? !1 : e === 'clear' ? void 0 : this
  }
}
function __() {
  const e = {
      get(a) {
        return cl(this, a)
      },
      get size() {
        return ml(this)
      },
      has: dl,
      add: Fc,
      set: jc,
      delete: Hc,
      clear: Uc,
      forEach: fl(!1, !1),
    },
    t = {
      get(a) {
        return cl(this, a, !1, !0)
      },
      get size() {
        return ml(this)
      },
      has: dl,
      add(a) {
        return Fc.call(this, a, !0)
      },
      set(a, l) {
        return jc.call(this, a, l, !0)
      },
      delete: Hc,
      clear: Uc,
      forEach: fl(!1, !0),
    },
    n = {
      get(a) {
        return cl(this, a, !0)
      },
      get size() {
        return ml(this, !0)
      },
      has(a) {
        return dl.call(this, a, !0)
      },
      add: co('add'),
      set: co('set'),
      delete: co('delete'),
      clear: co('clear'),
      forEach: fl(!0, !1),
    },
    o = {
      get(a) {
        return cl(this, a, !0, !0)
      },
      get size() {
        return ml(this, !0)
      },
      has(a) {
        return dl.call(this, a, !0)
      },
      add: co('add'),
      set: co('set'),
      delete: co('delete'),
      clear: co('clear'),
      forEach: fl(!0, !0),
    }
  return (
    ['keys', 'values', 'entries', Symbol.iterator].forEach((a) => {
      ;(e[a] = pl(a, !1, !1)), (n[a] = pl(a, !0, !1)), (t[a] = pl(a, !1, !0)), (o[a] = pl(a, !0, !0))
    }),
    [e, n, t, o]
  )
}
const [b_, z_, C_, S_] = __()
function is(e, t) {
  const n = t ? (e ? S_ : C_) : e ? z_ : b_
  return (o, r, a) =>
    r === '__v_isReactive'
      ? !e
      : r === '__v_isReadonly'
        ? e
        : r === '__v_raw'
          ? o
          : Reflect.get(Nl(n, r) && r in o ? n : o, r, a)
}
const w_ = { get: is(!1, !1) },
  $_ = { get: is(!1, !0) },
  k_ = { get: is(!0, !1) },
  T_ = { get: is(!0, !0) },
  hp = new WeakMap(),
  yp = new WeakMap(),
  _p = new WeakMap(),
  bp = new WeakMap()
function V_(e) {
  switch (e) {
    case 'Object':
    case 'Array':
      return 1
    case 'Map':
    case 'Set':
    case 'WeakMap':
    case 'WeakSet':
      return 2
    default:
      return 0
  }
}
function P_(e) {
  return e.__v_skip || !Object.isExtensible(e) ? 0 : V_(a_(e))
}
function on(e) {
  return Zo(e) ? e : cs(e, !1, v_, w_, hp)
}
function us(e) {
  return cs(e, !1, h_, $_, yp)
}
function zp(e) {
  return cs(e, !0, g_, k_, _p)
}
function Uo(e) {
  return cs(e, !0, y_, T_, bp)
}
function cs(e, t, n, o, r) {
  if (!Wr(e) || (e.__v_raw && !(t && e.__v_isReactive))) return e
  const a = r.get(e)
  if (a) return a
  const l = P_(e)
  if (l === 0) return e
  const s = new Proxy(e, l === 2 ? o : n)
  return r.set(e, s), s
}
function Qn(e) {
  return Zo(e) ? Qn(e.__v_raw) : !!(e && e.__v_isReactive)
}
function Zo(e) {
  return !!(e && e.__v_isReadonly)
}
function _n(e) {
  return !!(e && e.__v_isShallow)
}
function Vu(e) {
  return e ? !!e.__v_raw : !1
}
function at(e) {
  const t = e && e.__v_raw
  return t ? at(t) : e
}
function Pu(e) {
  return !Nl(e, '__v_skip') && Object.isExtensible(e) && s_(e, '__v_skip', !0), e
}
const Wt = (e) => (Wr(e) ? on(e) : e),
  Au = (e) => (Wr(e) ? zp(e) : e)
function nt(e) {
  return e ? e.__v_isRef === !0 : !1
}
function H(e) {
  return Cp(e, !1)
}
function je(e) {
  return Cp(e, !0)
}
function Cp(e, t) {
  return nt(e) ? e : new A_(e, t)
}
class A_ {
  constructor(t, n) {
    ;(this.dep = new as()),
      (this.__v_isRef = !0),
      (this.__v_isShallow = !1),
      (this._rawValue = n ? t : at(t)),
      (this._value = n ? t : Wt(t)),
      (this.__v_isShallow = n)
  }
  get value() {
    return this.dep.track(), this._value
  }
  set value(t) {
    const n = this._rawValue,
      o = this.__v_isShallow || _n(t) || Zo(t)
    ;(t = o ? t : at(t)), So(t, n) && ((this._rawValue = t), (this._value = o ? t : Wt(t)), this.dep.trigger())
  }
}
function f(e) {
  return nt(e) ? e.value : e
}
const E_ = {
  get: (e, t, n) => (t === '__v_raw' ? e : f(Reflect.get(e, t, n))),
  set: (e, t, n, o) => {
    const r = e[t]
    return nt(r) && !nt(n) ? ((r.value = n), !0) : Reflect.set(e, t, n, o)
  },
}
function Sp(e) {
  return Qn(e) ? e : new Proxy(e, E_)
}
class I_ {
  constructor(t) {
    ;(this.__v_isRef = !0), (this._value = void 0)
    const n = (this.dep = new as()),
      { get: o, set: r } = t(n.track.bind(n), n.trigger.bind(n))
    ;(this._get = o), (this._set = r)
  }
  get value() {
    return (this._value = this._get())
  }
  set value(t) {
    this._set(t)
  }
}
function x_(e) {
  return new I_(e)
}
function Sn(e) {
  const t = Xn(e) ? new Array(e.length) : {}
  for (const n in e) t[n] = wp(e, n)
  return t
}
class O_ {
  constructor(t, n, o) {
    ;(this._object = t), (this._key = n), (this._defaultValue = o), (this.__v_isRef = !0), (this._value = void 0)
  }
  get value() {
    const t = this._object[this._key]
    return (this._value = t === void 0 ? this._defaultValue : t)
  }
  set value(t) {
    this._object[this._key] = t
  }
  get dep() {
    return c_(at(this._object), this._key)
  }
}
class L_ {
  constructor(t) {
    ;(this._getter = t), (this.__v_isRef = !0), (this.__v_isReadonly = !0), (this._value = void 0)
  }
  get value() {
    return (this._value = this._getter())
  }
}
function Ut(e, t, n) {
  return nt(e) ? e : Rl(e) ? new L_(e) : Wr(e) && arguments.length > 1 ? wp(e, t, n) : H(e)
}
function wp(e, t, n) {
  const o = e[t]
  return nt(o) ? o : new O_(e, t, n)
}
class B_ {
  constructor(t, n, o) {
    ;(this.fn = t),
      (this.setter = n),
      (this._value = void 0),
      (this.dep = new as(this)),
      (this.__v_isRef = !0),
      (this.deps = void 0),
      (this.depsTail = void 0),
      (this.flags = 16),
      (this.globalVersion = Ca - 1),
      (this.effect = this),
      (this.__v_isReadonly = !n),
      (this.isSSR = o)
  }
  notify() {
    if (((this.flags |= 16), !(this.flags & 8) && bt !== this)) return sp(this), !0
  }
  get value() {
    const t = this.dep.track()
    return cp(this), t && (t.version = this.dep.version), this._value
  }
  set value(t) {
    this.setter && this.setter(t)
  }
}
function N_(e, t, n = !1) {
  let o, r
  return Rl(e) ? (o = e) : ((o = e.get), (r = e.set)), new B_(o, r, n)
}
const vl = {},
  Dl = new WeakMap()
let Wo
function R_(e, t = !1, n = Wo) {
  if (n) {
    let o = Dl.get(n)
    o || Dl.set(n, (o = [])), o.push(e)
  }
}
function D_(e, t, n = Qy) {
  const { immediate: o, deep: r, once: a, scheduler: l, augmentJob: s, call: i } = n,
    u = (S) => (r ? S : _n(S) || r === !1 || r === 0 ? qn(S, 1) : qn(S))
  let c,
    d,
    m,
    v,
    g = !1,
    h = !1
  if (
    (nt(e)
      ? ((d = () => e.value), (g = _n(e)))
      : Qn(e)
        ? ((d = () => u(e)), (g = !0))
        : Xn(e)
          ? ((h = !0),
            (g = e.some((S) => Qn(S) || _n(S))),
            (d = () =>
              e.map((S) => {
                if (nt(S)) return S.value
                if (Qn(S)) return u(S)
                if (Rl(S)) return i ? i(S, 2) : S()
              })))
          : Rl(e)
            ? t
              ? (d = i ? () => i(e, 2) : e)
              : (d = () => {
                  if (m) {
                    Ao()
                    try {
                      m()
                    } finally {
                      Eo()
                    }
                  }
                  const S = Wo
                  Wo = c
                  try {
                    return i ? i(e, 3, [v]) : e(v)
                  } finally {
                    Wo = S
                  }
                })
            : (d = Zy),
    t && r)
  ) {
    const S = d,
      $ = r === !0 ? 1 / 0 : r
    d = () => qn(S(), $)
  }
  const _ = Su(),
    y = () => {
      c.stop(), _ && e_(_.effects, c)
    }
  if (a && t) {
    const S = t
    t = (...$) => {
      S(...$), y()
    }
  }
  let b = h ? new Array(e.length).fill(vl) : vl
  const w = (S) => {
    if (!(!(c.flags & 1) || (!c.dirty && !S)))
      if (t) {
        const $ = c.run()
        if (r || g || (h ? $.some((k, z) => So(k, b[z])) : So($, b))) {
          m && m()
          const k = Wo
          Wo = c
          try {
            const z = [$, b === vl ? void 0 : h && b[0] === vl ? [] : b, v]
            i ? i(t, 3, z) : t(...z), (b = $)
          } finally {
            Wo = k
          }
        }
      } else c.run()
  }
  return (
    s && s(w),
    (c = new ap(d)),
    (c.scheduler = l ? () => l(w, !1) : w),
    (v = (S) => R_(S, !1, c)),
    (m = c.onStop =
      () => {
        const S = Dl.get(c)
        if (S) {
          if (i) i(S, 4)
          else for (const $ of S) $()
          Dl.delete(c)
        }
      }),
    t ? (o ? w(!0) : (b = c.run())) : l ? l(w.bind(null, !0), !0) : c.run(),
    (y.pause = c.pause.bind(c)),
    (y.resume = c.resume.bind(c)),
    (y.stop = y),
    y
  )
}
function qn(e, t = 1 / 0, n) {
  if (t <= 0 || !Wr(e) || e.__v_skip || ((n = n || new Set()), n.has(e))) return e
  if ((n.add(e), t--, nt(e))) qn(e.value, t, n)
  else if (Xn(e)) for (let o = 0; o < e.length; o++) qn(e[o], t, n)
  else if (n_(e) || ua(e))
    e.forEach((o) => {
      qn(o, t, n)
    })
  else if (l_(e)) {
    for (const o in e) qn(e[o], t, n)
    for (const o of Object.getOwnPropertySymbols(e)) Object.prototype.propertyIsEnumerable.call(e, o) && qn(e[o], t, n)
  }
  return e
}
/**
 * @vue/shared v3.5.8
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/ /*! #__NO_SIDE_EFFECTS__ */ function M_(e) {
  const t = Object.create(null)
  for (const n of e.split(',')) t[n] = 1
  return (n) => n in t
}
const Ct = {},
  Tr = [],
  Zn = () => {},
  F_ = () => !1,
  Eu = (e) => e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && (e.charCodeAt(2) > 122 || e.charCodeAt(2) < 97),
  $p = (e) => e.startsWith('onUpdate:'),
  qt = Object.assign,
  kp = (e, t) => {
    const n = e.indexOf(t)
    n > -1 && e.splice(n, 1)
  },
  j_ = Object.prototype.hasOwnProperty,
  zt = (e, t) => j_.call(e, t),
  tt = Array.isArray,
  H_ = (e) => Iu(e) === '[object Map]',
  U_ = (e) => Iu(e) === '[object Set]',
  Ge = (e) => typeof e == 'function',
  Dt = (e) => typeof e == 'string',
  Tp = (e) => typeof e == 'symbol',
  Bt = (e) => e !== null && typeof e == 'object',
  Vp = (e) => (Bt(e) || Ge(e)) && Ge(e.then) && Ge(e.catch),
  Pp = Object.prototype.toString,
  Iu = (e) => Pp.call(e),
  W_ = (e) => Iu(e) === '[object Object]',
  da = M_(
    ',key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted',
  ),
  ds = (e) => {
    const t = Object.create(null)
    return (n) => t[n] || (t[n] = e(n))
  },
  G_ = /-(\w)/g,
  Tn = ds((e) => e.replace(G_, (t, n) => (n ? n.toUpperCase() : ''))),
  K_ = /\B([A-Z])/g,
  ja = ds((e) => e.replace(K_, '-$1').toLowerCase()),
  ms = ds((e) => e.charAt(0).toUpperCase() + e.slice(1)),
  Pl = ds((e) => (e ? `on${ms(e)}` : '')),
  Js = (e, ...t) => {
    for (let n = 0; n < e.length; n++) e[n](...t)
  },
  q_ = (e, t, n, o = !1) => {
    Object.defineProperty(e, t, { configurable: !0, enumerable: !1, writable: o, value: n })
  },
  Y_ = (e) => {
    const t = parseFloat(e)
    return isNaN(t) ? e : t
  },
  X_ = (e) => {
    const t = Dt(e) ? Number(e) : NaN
    return isNaN(t) ? e : t
  }
let Wc
const Ap = () =>
  Wc ||
  (Wc =
    typeof globalThis < 'u'
      ? globalThis
      : typeof self < 'u'
        ? self
        : typeof window < 'u'
          ? window
          : typeof global < 'u'
            ? global
            : {})
function me(e) {
  if (tt(e)) {
    const t = {}
    for (let n = 0; n < e.length; n++) {
      const o = e[n],
        r = Dt(o) ? eb(o) : me(o)
      if (r) for (const a in r) t[a] = r[a]
    }
    return t
  } else if (Dt(e) || Bt(e)) return e
}
const J_ = /;(?![^(]*\))/g,
  Q_ = /:([^]+)/,
  Z_ = /\/\*[^]*?\*\//g
function eb(e) {
  const t = {}
  return (
    e
      .replace(Z_, '')
      .split(J_)
      .forEach((n) => {
        if (n) {
          const o = n.split(Q_)
          o.length > 1 && (t[o[0].trim()] = o[1].trim())
        }
      }),
    t
  )
}
function Pe(e) {
  let t = ''
  if (Dt(e)) t = e
  else if (tt(e))
    for (let n = 0; n < e.length; n++) {
      const o = Pe(e[n])
      o && (t += o + ' ')
    }
  else if (Bt(e)) for (const n in e) e[n] && (t += n + ' ')
  return t.trim()
}
function pe(e) {
  if (!e) return null
  let { class: t, style: n } = e
  return t && !Dt(t) && (e.class = Pe(t)), n && (e.style = me(n)), e
}
const Ep = (e) => !!(e && e.__v_isRef === !0),
  Ae = (e) =>
    Dt(e)
      ? e
      : e == null
        ? ''
        : tt(e) || (Bt(e) && (e.toString === Pp || !Ge(e.toString)))
          ? Ep(e)
            ? Ae(e.value)
            : JSON.stringify(e, Ip, 2)
          : String(e),
  Ip = (e, t) =>
    Ep(t)
      ? Ip(e, t.value)
      : H_(t)
        ? { [`Map(${t.size})`]: [...t.entries()].reduce((n, [o, r], a) => ((n[Qs(o, a) + ' =>'] = r), n), {}) }
        : U_(t)
          ? { [`Set(${t.size})`]: [...t.values()].map((n) => Qs(n)) }
          : Tp(t)
            ? Qs(t)
            : Bt(t) && !tt(t) && !W_(t)
              ? String(t)
              : t,
  Qs = (e, t = '') => {
    var n
    return Tp(e) ? `Symbol(${(n = e.description) != null ? n : t})` : e
  }
/**
 * @vue/runtime-core v3.5.8
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/ function Ha(e, t, n, o) {
  try {
    return o ? e(...o) : e()
  } catch (r) {
    Gr(r, t, n)
  }
}
function Vn(e, t, n, o) {
  if (Ge(e)) {
    const r = Ha(e, t, n, o)
    return (
      r &&
        Vp(r) &&
        r.catch((a) => {
          Gr(a, t, n)
        }),
      r
    )
  }
  if (tt(e)) {
    const r = []
    for (let a = 0; a < e.length; a++) r.push(Vn(e[a], t, n, o))
    return r
  }
}
function Gr(e, t, n, o = !0) {
  const r = t ? t.vnode : null,
    { errorHandler: a, throwUnhandledErrorInProduction: l } = (t && t.appContext.config) || Ct
  if (t) {
    let s = t.parent
    const i = t.proxy,
      u = `https://vuejs.org/error-reference/#runtime-${n}`
    for (; s; ) {
      const c = s.ec
      if (c) {
        for (let d = 0; d < c.length; d++) if (c[d](e, i, u) === !1) return
      }
      s = s.parent
    }
    if (a) {
      Ao(), Ha(a, null, 10, [e, i, u]), Eo()
      return
    }
  }
  tb(e, n, r, o, l)
}
function tb(e, t, n, o = !0, r = !1) {
  if (r) throw e
  console.error(e)
}
let $a = !1,
  Ai = !1
const Qt = []
let xn = 0
const Vr = []
let _o = null,
  Sr = 0
const xp = Promise.resolve()
let xu = null
function dt(e) {
  const t = xu || xp
  return e ? t.then(this ? e.bind(this) : e) : t
}
function nb(e) {
  let t = $a ? xn + 1 : 0,
    n = Qt.length
  for (; t < n; ) {
    const o = (t + n) >>> 1,
      r = Qt[o],
      a = ka(r)
    a < e || (a === e && r.flags & 2) ? (t = o + 1) : (n = o)
  }
  return t
}
function Ou(e) {
  if (!(e.flags & 1)) {
    const t = ka(e),
      n = Qt[Qt.length - 1]
    !n || (!(e.flags & 2) && t >= ka(n)) ? Qt.push(e) : Qt.splice(nb(t), 0, e), (e.flags |= 1), Op()
  }
}
function Op() {
  !$a && !Ai && ((Ai = !0), (xu = xp.then(Bp)))
}
function Ei(e) {
  tt(e) ? Vr.push(...e) : _o && e.id === -1 ? _o.splice(Sr + 1, 0, e) : e.flags & 1 || (Vr.push(e), (e.flags |= 1)),
    Op()
}
function Gc(e, t, n = $a ? xn + 1 : 0) {
  for (; n < Qt.length; n++) {
    const o = Qt[n]
    if (o && o.flags & 2) {
      if (e && o.id !== e.uid) continue
      Qt.splice(n, 1), n--, o.flags & 4 && (o.flags &= -2), o(), o.flags & 4 || (o.flags &= -2)
    }
  }
}
function Lp(e) {
  if (Vr.length) {
    const t = [...new Set(Vr)].sort((n, o) => ka(n) - ka(o))
    if (((Vr.length = 0), _o)) {
      _o.push(...t)
      return
    }
    for (_o = t, Sr = 0; Sr < _o.length; Sr++) {
      const n = _o[Sr]
      n.flags & 4 && (n.flags &= -2), n.flags & 8 || n(), (n.flags &= -2)
    }
    ;(_o = null), (Sr = 0)
  }
}
const ka = (e) => (e.id == null ? (e.flags & 2 ? -1 : 1 / 0) : e.id)
function Bp(e) {
  ;(Ai = !1), ($a = !0)
  try {
    for (xn = 0; xn < Qt.length; xn++) {
      const t = Qt[xn]
      t && !(t.flags & 8) && (t.flags & 4 && (t.flags &= -2), Ha(t, t.i, t.i ? 15 : 14), t.flags & 4 || (t.flags &= -2))
    }
  } finally {
    for (; xn < Qt.length; xn++) {
      const t = Qt[xn]
      t && (t.flags &= -2)
    }
    ;(xn = 0), (Qt.length = 0), Lp(), ($a = !1), (xu = null), (Qt.length || Vr.length) && Bp()
  }
}
let Ot = null,
  Np = null
function Ml(e) {
  const t = Ot
  return (Ot = e), (Np = (e && e.type.__scopeId) || null), t
}
function G(e, t = Ot, n) {
  if (!t || e._n) return e
  const o = (...r) => {
    o._d && ad(-1)
    const a = Ml(t)
    let l
    try {
      l = e(...r)
    } finally {
      Ml(a), o._d && ad(1)
    }
    return l
  }
  return (o._n = !0), (o._c = !0), (o._d = !0), o
}
function Pn(e, t) {
  if (Ot === null) return e
  const n = hs(Ot),
    o = e.dirs || (e.dirs = [])
  for (let r = 0; r < t.length; r++) {
    let [a, l, s, i = Ct] = t[r]
    a &&
      (Ge(a) && (a = { mounted: a, updated: a }),
      a.deep && qn(l),
      o.push({ dir: a, instance: n, value: l, oldValue: void 0, arg: s, modifiers: i }))
  }
  return e
}
function Do(e, t, n, o) {
  const r = e.dirs,
    a = t && t.dirs
  for (let l = 0; l < r.length; l++) {
    const s = r[l]
    a && (s.oldValue = a[l].value)
    let i = s.dir[o]
    i && (Ao(), Vn(i, n, 8, [e.el, s, e, t]), Eo())
  }
}
const Rp = Symbol('_vte'),
  Dp = (e) => e.__isTeleport,
  ma = (e) => e && (e.disabled || e.disabled === ''),
  ob = (e) => e && (e.defer || e.defer === ''),
  Kc = (e) => typeof SVGElement < 'u' && e instanceof SVGElement,
  qc = (e) => typeof MathMLElement == 'function' && e instanceof MathMLElement,
  Ii = (e, t) => {
    const n = e && e.to
    return Dt(n) ? (t ? t(n) : null) : n
  },
  rb = {
    name: 'Teleport',
    __isTeleport: !0,
    process(e, t, n, o, r, a, l, s, i, u) {
      const {
          mc: c,
          pc: d,
          pbc: m,
          o: { insert: v, querySelector: g, createText: h, createComment: _ },
        } = u,
        y = ma(t.props)
      let { shapeFlag: b, children: w, dynamicChildren: S } = t
      if (e == null) {
        const $ = (t.el = h('')),
          k = (t.anchor = h(''))
        v($, n, o), v(k, n, o)
        const z = (T, B) => {
            b & 16 && (r && r.isCE && (r.ce._teleportTarget = T), c(w, T, B, r, a, l, s, i))
          },
          V = () => {
            const T = (t.target = Ii(t.props, g)),
              B = Mp(T, t, h, v)
            T && (l !== 'svg' && Kc(T) ? (l = 'svg') : l !== 'mathml' && qc(T) && (l = 'mathml'), y || (z(T, B), Al(t)))
          }
        y && (z(n, k), Al(t)), ob(t.props) ? nn(V, a) : V()
      } else {
        ;(t.el = e.el), (t.targetStart = e.targetStart)
        const $ = (t.anchor = e.anchor),
          k = (t.target = e.target),
          z = (t.targetAnchor = e.targetAnchor),
          V = ma(e.props),
          T = V ? n : k,
          B = V ? $ : z
        if (
          (l === 'svg' || Kc(k) ? (l = 'svg') : (l === 'mathml' || qc(k)) && (l = 'mathml'),
          S ? (m(e.dynamicChildren, S, T, r, a, l, s), Fu(e, t, !0)) : i || d(e, t, T, B, r, a, l, s, !1),
          y)
        )
          V ? t.props && e.props && t.props.to !== e.props.to && (t.props.to = e.props.to) : gl(t, n, $, u, 1)
        else if ((t.props && t.props.to) !== (e.props && e.props.to)) {
          const K = (t.target = Ii(t.props, g))
          K && gl(t, K, null, u, 0)
        } else V && gl(t, k, z, u, 1)
        Al(t)
      }
    },
    remove(e, t, n, { um: o, o: { remove: r } }, a) {
      const { shapeFlag: l, children: s, anchor: i, targetStart: u, targetAnchor: c, target: d, props: m } = e
      if ((d && (r(u), r(c)), a && r(i), l & 16)) {
        const v = a || !ma(m)
        for (let g = 0; g < s.length; g++) {
          const h = s[g]
          o(h, t, n, v, !!h.dynamicChildren)
        }
      }
    },
    move: gl,
    hydrate: ab,
  }
function gl(e, t, n, { o: { insert: o }, m: r }, a = 2) {
  a === 0 && o(e.targetAnchor, t, n)
  const { el: l, anchor: s, shapeFlag: i, children: u, props: c } = e,
    d = a === 2
  if ((d && o(l, t, n), (!d || ma(c)) && i & 16)) for (let m = 0; m < u.length; m++) r(u[m], t, n, 2)
  d && o(s, t, n)
}
function ab(e, t, n, o, r, a, { o: { nextSibling: l, parentNode: s, querySelector: i, insert: u, createText: c } }, d) {
  const m = (t.target = Ii(t.props, i))
  if (m) {
    const v = m._lpa || m.firstChild
    if (t.shapeFlag & 16)
      if (ma(t.props)) (t.anchor = d(l(e), t, s(e), n, o, r, a)), (t.targetStart = v), (t.targetAnchor = v && l(v))
      else {
        t.anchor = l(e)
        let g = v
        for (; g; ) {
          if (g && g.nodeType === 8) {
            if (g.data === 'teleport start anchor') t.targetStart = g
            else if (g.data === 'teleport anchor') {
              ;(t.targetAnchor = g), (m._lpa = t.targetAnchor && l(t.targetAnchor))
              break
            }
          }
          g = l(g)
        }
        t.targetAnchor || Mp(m, t, c, u), d(v && l(v), t, m, n, o, r, a)
      }
    Al(t)
  }
  return t.anchor && l(t.anchor)
}
const Ta = rb
function Al(e) {
  const t = e.ctx
  if (t && t.ut) {
    let n = e.targetStart
    for (; n && n !== e.targetAnchor; ) n.nodeType === 1 && n.setAttribute('data-v-owner', t.uid), (n = n.nextSibling)
    t.ut()
  }
}
function Mp(e, t, n, o) {
  const r = (t.targetStart = n('')),
    a = (t.targetAnchor = n(''))
  return (r[Rp] = a), e && (o(r, e), o(a, e)), a
}
const bo = Symbol('_leaveCb'),
  hl = Symbol('_enterCb')
function Fp() {
  const e = { isMounted: !1, isLeaving: !1, isUnmounting: !1, leavingVNodes: new Map() }
  return (
    et(() => {
      e.isMounted = !0
    }),
    wt(() => {
      e.isUnmounting = !0
    }),
    e
  )
}
const gn = [Function, Array],
  jp = {
    mode: String,
    appear: Boolean,
    persisted: Boolean,
    onBeforeEnter: gn,
    onEnter: gn,
    onAfterEnter: gn,
    onEnterCancelled: gn,
    onBeforeLeave: gn,
    onLeave: gn,
    onAfterLeave: gn,
    onLeaveCancelled: gn,
    onBeforeAppear: gn,
    onAppear: gn,
    onAfterAppear: gn,
    onAppearCancelled: gn,
  },
  Hp = (e) => {
    const t = e.subTree
    return t.component ? Hp(t.component) : t
  },
  lb = {
    name: 'BaseTransition',
    props: jp,
    setup(e, { slots: t }) {
      const n = ct(),
        o = Fp()
      return () => {
        const r = t.default && Lu(t.default(), !0)
        if (!r || !r.length) return
        const a = Up(r),
          l = at(e),
          { mode: s } = l
        if (o.isLeaving) return Zs(a)
        const i = Yc(a)
        if (!i) return Zs(a)
        let u = Va(i, l, o, n, (m) => (u = m))
        i.type !== It && er(i, u)
        const c = n.subTree,
          d = c && Yc(c)
        if (d && d.type !== It && !On(i, d) && Hp(n).type !== It) {
          const m = Va(d, l, o, n)
          if ((er(d, m), s === 'out-in' && i.type !== It))
            return (
              (o.isLeaving = !0),
              (m.afterLeave = () => {
                ;(o.isLeaving = !1), n.job.flags & 8 || n.update(), delete m.afterLeave
              }),
              Zs(a)
            )
          s === 'in-out' &&
            i.type !== It &&
            (m.delayLeave = (v, g, h) => {
              const _ = Wp(o, d)
              ;(_[String(d.key)] = d),
                (v[bo] = () => {
                  g(), (v[bo] = void 0), delete u.delayedLeave
                }),
                (u.delayedLeave = h)
            })
        }
        return a
      }
    },
  }
function Up(e) {
  let t = e[0]
  if (e.length > 1) {
    for (const n of e)
      if (n.type !== It) {
        t = n
        break
      }
  }
  return t
}
const sb = lb
function Wp(e, t) {
  const { leavingVNodes: n } = e
  let o = n.get(t.type)
  return o || ((o = Object.create(null)), n.set(t.type, o)), o
}
function Va(e, t, n, o, r) {
  const {
      appear: a,
      mode: l,
      persisted: s = !1,
      onBeforeEnter: i,
      onEnter: u,
      onAfterEnter: c,
      onEnterCancelled: d,
      onBeforeLeave: m,
      onLeave: v,
      onAfterLeave: g,
      onLeaveCancelled: h,
      onBeforeAppear: _,
      onAppear: y,
      onAfterAppear: b,
      onAppearCancelled: w,
    } = t,
    S = String(e.key),
    $ = Wp(n, e),
    k = (T, B) => {
      T && Vn(T, o, 9, B)
    },
    z = (T, B) => {
      const K = B[1]
      k(T, B), tt(T) ? T.every((j) => j.length <= 1) && K() : T.length <= 1 && K()
    },
    V = {
      mode: l,
      persisted: s,
      beforeEnter(T) {
        let B = i
        if (!n.isMounted)
          if (a) B = _ || i
          else return
        T[bo] && T[bo](!0)
        const K = $[S]
        K && On(e, K) && K.el[bo] && K.el[bo](), k(B, [T])
      },
      enter(T) {
        let B = u,
          K = c,
          j = d
        if (!n.isMounted)
          if (a) (B = y || u), (K = b || c), (j = w || d)
          else return
        let U = !1
        const D = (T[hl] = (O) => {
          U || ((U = !0), O ? k(j, [T]) : k(K, [T]), V.delayedLeave && V.delayedLeave(), (T[hl] = void 0))
        })
        B ? z(B, [T, D]) : D()
      },
      leave(T, B) {
        const K = String(e.key)
        if ((T[hl] && T[hl](!0), n.isUnmounting)) return B()
        k(m, [T])
        let j = !1
        const U = (T[bo] = (D) => {
          j || ((j = !0), B(), D ? k(h, [T]) : k(g, [T]), (T[bo] = void 0), $[K] === e && delete $[K])
        })
        ;($[K] = e), v ? z(v, [T, U]) : U()
      },
      clone(T) {
        const B = Va(T, t, n, o, r)
        return r && r(B), B
      },
    }
  return V
}
function Zs(e) {
  if (Ua(e)) return (e = wo(e)), (e.children = null), e
}
function Yc(e) {
  if (!Ua(e)) return Dp(e.type) && e.children ? Up(e.children) : e
  const { shapeFlag: t, children: n } = e
  if (n) {
    if (t & 16) return n[0]
    if (t & 32 && Ge(n.default)) return n.default()
  }
}
function er(e, t) {
  e.shapeFlag & 6 && e.component
    ? ((e.transition = t), er(e.component.subTree, t))
    : e.shapeFlag & 128
      ? ((e.ssContent.transition = t.clone(e.ssContent)), (e.ssFallback.transition = t.clone(e.ssFallback)))
      : (e.transition = t)
}
function Lu(e, t = !1, n) {
  let o = [],
    r = 0
  for (let a = 0; a < e.length; a++) {
    let l = e[a]
    const s = n == null ? l.key : String(n) + String(l.key != null ? l.key : a)
    l.type === Te
      ? (l.patchFlag & 128 && r++, (o = o.concat(Lu(l.children, t, s))))
      : (t || l.type !== It) && o.push(s != null ? wo(l, { key: s }) : l)
  }
  if (r > 1) for (let a = 0; a < o.length; a++) o[a].patchFlag = -2
  return o
}
/*! #__NO_SIDE_EFFECTS__ */ function re(e, t) {
  return Ge(e) ? qt({ name: e.name }, t, { setup: e }) : e
}
function Bu(e) {
  e.ids = [e.ids[0] + e.ids[2]++ + '-', 0, 0]
}
function xi(e, t, n, o, r = !1) {
  if (tt(e)) {
    e.forEach((g, h) => xi(g, t && (tt(t) ? t[h] : t), n, o, r))
    return
  }
  if (Pr(o) && !r) return
  const a = o.shapeFlag & 4 ? hs(o.component) : o.el,
    l = r ? null : a,
    { i: s, r: i } = e,
    u = t && t.r,
    c = s.refs === Ct ? (s.refs = {}) : s.refs,
    d = s.setupState,
    m = at(d),
    v = d === Ct ? () => !1 : (g) => zt(m, g)
  if ((u != null && u !== i && (Dt(u) ? ((c[u] = null), v(u) && (d[u] = null)) : nt(u) && (u.value = null)), Ge(i)))
    Ha(i, s, 12, [l, c])
  else {
    const g = Dt(i),
      h = nt(i)
    if (g || h) {
      const _ = () => {
        if (e.f) {
          const y = g ? (v(i) ? d[i] : c[i]) : i.value
          r
            ? tt(y) && kp(y, a)
            : tt(y)
              ? y.includes(a) || y.push(a)
              : g
                ? ((c[i] = [a]), v(i) && (d[i] = c[i]))
                : ((i.value = [a]), e.k && (c[e.k] = i.value))
        } else g ? ((c[i] = l), v(i) && (d[i] = l)) : h && ((i.value = l), e.k && (c[e.k] = l))
      }
      l ? ((_.id = -1), nn(_, n)) : _()
    }
  }
}
const Xc = (e) => e.nodeType === 8
function ib(e, t) {
  if (Xc(e) && e.data === '[') {
    let n = 1,
      o = e.nextSibling
    for (; o; ) {
      if (o.nodeType === 1) {
        if (t(o) === !1) break
      } else if (Xc(o))
        if (o.data === ']') {
          if (--n === 0) break
        } else o.data === '[' && n++
      o = o.nextSibling
    }
  } else t(e)
}
const Pr = (e) => !!e.type.__asyncLoader
/*! #__NO_SIDE_EFFECTS__ */ function hN(e) {
  Ge(e) && (e = { loader: e })
  const {
    loader: t,
    loadingComponent: n,
    errorComponent: o,
    delay: r = 200,
    hydrate: a,
    timeout: l,
    suspensible: s = !0,
    onError: i,
  } = e
  let u = null,
    c,
    d = 0
  const m = () => (d++, (u = null), v()),
    v = () => {
      let g
      return (
        u ||
        (g = u =
          t()
            .catch((h) => {
              if (((h = h instanceof Error ? h : new Error(String(h))), i))
                return new Promise((_, y) => {
                  i(
                    h,
                    () => _(m()),
                    () => y(h),
                    d + 1,
                  )
                })
              throw h
            })
            .then((h) =>
              g !== u && u
                ? u
                : (h && (h.__esModule || h[Symbol.toStringTag] === 'Module') && (h = h.default), (c = h), h),
            ))
      )
    }
  return re({
    name: 'AsyncComponentWrapper',
    __asyncLoader: v,
    __asyncHydrate(g, h, _) {
      const y = a
        ? () => {
            const b = a(_, (w) => ib(g, w))
            b && (h.bum || (h.bum = [])).push(b)
          }
        : _
      c ? y() : v().then(() => !h.isUnmounted && y())
    },
    get __asyncResolved() {
      return c
    },
    setup() {
      const g = xt
      if ((Bu(g), c)) return () => ei(c, g)
      const h = (w) => {
        ;(u = null), Gr(w, g, 13, !o)
      }
      if ((s && g.suspense) || Ga)
        return v()
          .then((w) => () => ei(w, g))
          .catch((w) => (h(w), () => (o ? ne(o, { error: w }) : null)))
      const _ = H(!1),
        y = H(),
        b = H(!!r)
      return (
        r &&
          setTimeout(() => {
            b.value = !1
          }, r),
        l != null &&
          setTimeout(() => {
            if (!_.value && !y.value) {
              const w = new Error(`Async component timed out after ${l}ms.`)
              h(w), (y.value = w)
            }
          }, l),
        v()
          .then(() => {
            ;(_.value = !0), g.parent && Ua(g.parent.vnode) && g.parent.update()
          })
          .catch((w) => {
            h(w), (y.value = w)
          }),
        () => {
          if (_.value && c) return ei(c, g)
          if (y.value && o) return ne(o, { error: y.value })
          if (n && !b.value) return ne(n)
        }
      )
    },
  })
}
function ei(e, t) {
  const { ref: n, props: o, children: r, ce: a } = t.vnode,
    l = ne(e, o, r)
  return (l.ref = n), (l.ce = a), delete t.vnode.ce, l
}
const Ua = (e) => e.type.__isKeepAlive
function Gp(e, t) {
  qp(e, 'a', t)
}
function Kp(e, t) {
  qp(e, 'da', t)
}
function qp(e, t, n = xt) {
  const o =
    e.__wdc ||
    (e.__wdc = () => {
      let r = n
      for (; r; ) {
        if (r.isDeactivated) return
        r = r.parent
      }
      return e()
    })
  if ((fs(t, o, n), n)) {
    let r = n.parent
    for (; r && r.parent; ) Ua(r.parent.vnode) && ub(o, t, n, r), (r = r.parent)
  }
}
function ub(e, t, n, o) {
  const r = fs(t, e, o, !0)
  vs(() => {
    kp(o[t], r)
  }, n)
}
function fs(e, t, n = xt, o = !1) {
  if (n) {
    const r = n[e] || (n[e] = []),
      a =
        t.__weh ||
        (t.__weh = (...l) => {
          Ao()
          const s = Wa(n),
            i = Vn(t, n, e, l)
          return s(), Eo(), i
        })
    return o ? r.unshift(a) : r.push(a), a
  }
}
const to =
    (e) =>
    (t, n = xt) => {
      ;(!Ga || e === 'sp') && fs(e, (...o) => t(...o), n)
    },
  Nu = to('bm'),
  et = to('m'),
  Ru = to('bu'),
  ps = to('u'),
  wt = to('bum'),
  vs = to('um'),
  cb = to('sp'),
  db = to('rtg'),
  mb = to('rtc')
function fb(e, t = xt) {
  fs('ec', e, t)
}
const Yp = 'components'
function Je(e, t) {
  return Jp(Yp, e, !0, t) || e
}
const Xp = Symbol.for('v-ndc')
function an(e) {
  return Dt(e) ? Jp(Yp, e, !1) || e : e || Xp
}
function Jp(e, t, n = !0, o = !1) {
  const r = Ot || xt
  if (r) {
    const a = r.type
    {
      const s = rz(a, !1)
      if (s && (s === t || s === Tn(t) || s === ms(Tn(t)))) return a
    }
    const l = Jc(r[e] || a[e], t) || Jc(r.appContext[e], t)
    return !l && o ? a : l
  }
}
function Jc(e, t) {
  return e && (e[t] || e[Tn(t)] || e[ms(Tn(t))])
}
function Ue(e, t, n, o) {
  let r
  const a = n,
    l = tt(e)
  if (l || Dt(e)) {
    const s = l && Qn(e)
    let i = !1
    s && ((i = !_n(e)), (e = ls(e))), (r = new Array(e.length))
    for (let u = 0, c = e.length; u < c; u++) r[u] = t(i ? Wt(e[u]) : e[u], u, void 0, a)
  } else if (typeof e == 'number') {
    r = new Array(e)
    for (let s = 0; s < e; s++) r[s] = t(s + 1, s, void 0, a)
  } else if (Bt(e))
    if (e[Symbol.iterator]) r = Array.from(e, (s, i) => t(s, i, void 0, a))
    else {
      const s = Object.keys(e)
      r = new Array(s.length)
      for (let i = 0, u = s.length; i < u; i++) {
        const c = s[i]
        r[i] = t(e[c], c, i, a)
      }
    }
  else r = []
  return r
}
function Ht(e, t) {
  for (let n = 0; n < t.length; n++) {
    const o = t[n]
    if (tt(o)) for (let r = 0; r < o.length; r++) e[o[r].name] = o[r].fn
    else
      o &&
        (e[o.name] = o.key
          ? (...r) => {
              const a = o.fn(...r)
              return a && (a.key = o.key), a
            }
          : o.fn)
  }
  return e
}
function L(e, t, n = {}, o, r) {
  if (Ot.ce || (Ot.parent && Pr(Ot.parent) && Ot.parent.ce))
    return t !== 'default' && (n.name = t), C(), ee(Te, null, [ne('slot', n, o && o())], 64)
  let a = e[t]
  a && a._c && (a._d = !1), C()
  const l = a && Qp(a(n)),
    s = ee(
      Te,
      { key: (n.key || (l && l.key) || `_${t}`) + (!l && o ? '_fb' : '') },
      l || (o ? o() : []),
      l && e._ === 1 ? 64 : -2,
    )
  return !r && s.scopeId && (s.slotScopeIds = [s.scopeId + '-s']), a && a._c && (a._d = !0), s
}
function Qp(e) {
  return e.some((t) => (tr(t) ? !(t.type === It || (t.type === Te && !Qp(t.children))) : !0)) ? e : null
}
function yn(e, t) {
  const n = {}
  for (const o in e) n[t && /[A-Z]/.test(o) ? `on:${o}` : Pl(o)] = e[o]
  return n
}
const Oi = (e) => (e ? (_v(e) ? hs(e) : Oi(e.parent)) : null),
  fa = qt(Object.create(null), {
    $: (e) => e,
    $el: (e) => e.vnode.el,
    $data: (e) => e.data,
    $props: (e) => e.props,
    $attrs: (e) => e.attrs,
    $slots: (e) => e.slots,
    $refs: (e) => e.refs,
    $parent: (e) => Oi(e.parent),
    $root: (e) => Oi(e.root),
    $host: (e) => e.ce,
    $emit: (e) => e.emit,
    $options: (e) => Du(e),
    $forceUpdate: (e) =>
      e.f ||
      (e.f = () => {
        Ou(e.update)
      }),
    $nextTick: (e) => e.n || (e.n = dt.bind(e.proxy)),
    $watch: (e) => Bb.bind(e),
  }),
  ti = (e, t) => e !== Ct && !e.__isScriptSetup && zt(e, t),
  pb = {
    get({ _: e }, t) {
      if (t === '__v_skip') return !0
      const { ctx: n, setupState: o, data: r, props: a, accessCache: l, type: s, appContext: i } = e
      let u
      if (t[0] !== '$') {
        const v = l[t]
        if (v !== void 0)
          switch (v) {
            case 1:
              return o[t]
            case 2:
              return r[t]
            case 4:
              return n[t]
            case 3:
              return a[t]
          }
        else {
          if (ti(o, t)) return (l[t] = 1), o[t]
          if (r !== Ct && zt(r, t)) return (l[t] = 2), r[t]
          if ((u = e.propsOptions[0]) && zt(u, t)) return (l[t] = 3), a[t]
          if (n !== Ct && zt(n, t)) return (l[t] = 4), n[t]
          Bi && (l[t] = 0)
        }
      }
      const c = fa[t]
      let d, m
      if (c) return t === '$attrs' && Kt(e.attrs, 'get', ''), c(e)
      if ((d = s.__cssModules) && (d = d[t])) return d
      if (n !== Ct && zt(n, t)) return (l[t] = 4), n[t]
      if (((m = i.config.globalProperties), zt(m, t))) return m[t]
    },
    set({ _: e }, t, n) {
      const { data: o, setupState: r, ctx: a } = e
      return ti(r, t)
        ? ((r[t] = n), !0)
        : o !== Ct && zt(o, t)
          ? ((o[t] = n), !0)
          : zt(e.props, t) || (t[0] === '$' && t.slice(1) in e)
            ? !1
            : ((a[t] = n), !0)
    },
    has({ _: { data: e, setupState: t, accessCache: n, ctx: o, appContext: r, propsOptions: a } }, l) {
      let s
      return (
        !!n[l] ||
        (e !== Ct && zt(e, l)) ||
        ti(t, l) ||
        ((s = a[0]) && zt(s, l)) ||
        zt(o, l) ||
        zt(fa, l) ||
        zt(r.config.globalProperties, l)
      )
    },
    defineProperty(e, t, n) {
      return (
        n.get != null ? (e._.accessCache[t] = 0) : zt(n, 'value') && this.set(e, t, n.value, null),
        Reflect.defineProperty(e, t, n)
      )
    },
  }
function Zt() {
  return Zp().slots
}
function Io() {
  return Zp().attrs
}
function Zp() {
  const e = ct()
  return e.setupContext || (e.setupContext = zv(e))
}
function Li(e) {
  return tt(e) ? e.reduce((t, n) => ((t[n] = null), t), {}) : e
}
function vb(e, t) {
  const n = Li(e)
  for (const o in t) {
    if (o.startsWith('__skip')) continue
    let r = n[o]
    r
      ? tt(r) || Ge(r)
        ? (r = n[o] = { type: r, default: t[o] })
        : (r.default = t[o])
      : r === null && (r = n[o] = { default: t[o] }),
      r && t[`__skip_${o}`] && (r.skipFactory = !0)
  }
  return n
}
let Bi = !0
function gb(e) {
  const t = Du(e),
    n = e.proxy,
    o = e.ctx
  ;(Bi = !1), t.beforeCreate && Qc(t.beforeCreate, e, 'bc')
  const {
    data: r,
    computed: a,
    methods: l,
    watch: s,
    provide: i,
    inject: u,
    created: c,
    beforeMount: d,
    mounted: m,
    beforeUpdate: v,
    updated: g,
    activated: h,
    deactivated: _,
    beforeDestroy: y,
    beforeUnmount: b,
    destroyed: w,
    unmounted: S,
    render: $,
    renderTracked: k,
    renderTriggered: z,
    errorCaptured: V,
    serverPrefetch: T,
    expose: B,
    inheritAttrs: K,
    components: j,
    directives: U,
    filters: D,
  } = t
  if ((u && hb(u, o, null), l))
    for (const N in l) {
      const x = l[N]
      Ge(x) && (o[N] = x.bind(n))
    }
  if (r) {
    const N = r.call(n, n)
    Bt(N) && (e.data = on(N))
  }
  if (((Bi = !0), a))
    for (const N in a) {
      const x = a[N],
        ce = Ge(x) ? x.bind(n, n) : Ge(x.get) ? x.get.bind(n, n) : Zn,
        ue = !Ge(x) && Ge(x.set) ? x.set.bind(n) : Zn,
        be = p({ get: ce, set: ue })
      Object.defineProperty(o, N, {
        enumerable: !0,
        configurable: !0,
        get: () => be.value,
        set: (xe) => (be.value = xe),
      })
    }
  if (s) for (const N in s) ev(s[N], o, n, N)
  if (i) {
    const N = Ge(i) ? i.call(n) : i
    Reflect.ownKeys(N).forEach((x) => {
      ln(x, N[x])
    })
  }
  c && Qc(c, e, 'c')
  function R(N, x) {
    tt(x) ? x.forEach((ce) => N(ce.bind(n))) : x && N(x.bind(n))
  }
  if (
    (R(Nu, d),
    R(et, m),
    R(Ru, v),
    R(ps, g),
    R(Gp, h),
    R(Kp, _),
    R(fb, V),
    R(mb, k),
    R(db, z),
    R(wt, b),
    R(vs, S),
    R(cb, T),
    tt(B))
  )
    if (B.length) {
      const N = e.exposed || (e.exposed = {})
      B.forEach((x) => {
        Object.defineProperty(N, x, { get: () => n[x], set: (ce) => (n[x] = ce) })
      })
    } else e.exposed || (e.exposed = {})
  $ && e.render === Zn && (e.render = $),
    K != null && (e.inheritAttrs = K),
    j && (e.components = j),
    U && (e.directives = U),
    T && Bu(e)
}
function hb(e, t, n = Zn) {
  tt(e) && (e = Ni(e))
  for (const o in e) {
    const r = e[o]
    let a
    Bt(r) ? ('default' in r ? (a = kt(r.from || o, r.default, !0)) : (a = kt(r.from || o))) : (a = kt(r)),
      nt(a)
        ? Object.defineProperty(t, o, {
            enumerable: !0,
            configurable: !0,
            get: () => a.value,
            set: (l) => (a.value = l),
          })
        : (t[o] = a)
  }
}
function Qc(e, t, n) {
  Vn(tt(e) ? e.map((o) => o.bind(t.proxy)) : e.bind(t.proxy), t, n)
}
function ev(e, t, n, o) {
  let r = o.includes('.') ? mv(n, o) : () => n[o]
  if (Dt(e)) {
    const a = t[e]
    Ge(a) && ge(r, a)
  } else if (Ge(e)) ge(r, e.bind(n))
  else if (Bt(e))
    if (tt(e)) e.forEach((a) => ev(a, t, n, o))
    else {
      const a = Ge(e.handler) ? e.handler.bind(n) : t[e.handler]
      Ge(a) && ge(r, a, e)
    }
}
function Du(e) {
  const t = e.type,
    { mixins: n, extends: o } = t,
    {
      mixins: r,
      optionsCache: a,
      config: { optionMergeStrategies: l },
    } = e.appContext,
    s = a.get(t)
  let i
  return (
    s
      ? (i = s)
      : !r.length && !n && !o
        ? (i = t)
        : ((i = {}), r.length && r.forEach((u) => Fl(i, u, l, !0)), Fl(i, t, l)),
    Bt(t) && a.set(t, i),
    i
  )
}
function Fl(e, t, n, o = !1) {
  const { mixins: r, extends: a } = t
  a && Fl(e, a, n, !0), r && r.forEach((l) => Fl(e, l, n, !0))
  for (const l in t)
    if (!(o && l === 'expose')) {
      const s = yb[l] || (n && n[l])
      e[l] = s ? s(e[l], t[l]) : t[l]
    }
  return e
}
const yb = {
  data: Zc,
  props: ed,
  emits: ed,
  methods: ia,
  computed: ia,
  beforeCreate: Xt,
  created: Xt,
  beforeMount: Xt,
  mounted: Xt,
  beforeUpdate: Xt,
  updated: Xt,
  beforeDestroy: Xt,
  beforeUnmount: Xt,
  destroyed: Xt,
  unmounted: Xt,
  activated: Xt,
  deactivated: Xt,
  errorCaptured: Xt,
  serverPrefetch: Xt,
  components: ia,
  directives: ia,
  watch: bb,
  provide: Zc,
  inject: _b,
}
function Zc(e, t) {
  return t
    ? e
      ? function () {
          return qt(Ge(e) ? e.call(this, this) : e, Ge(t) ? t.call(this, this) : t)
        }
      : t
    : e
}
function _b(e, t) {
  return ia(Ni(e), Ni(t))
}
function Ni(e) {
  if (tt(e)) {
    const t = {}
    for (let n = 0; n < e.length; n++) t[e[n]] = e[n]
    return t
  }
  return e
}
function Xt(e, t) {
  return e ? [...new Set([].concat(e, t))] : t
}
function ia(e, t) {
  return e ? qt(Object.create(null), e, t) : t
}
function ed(e, t) {
  return e ? (tt(e) && tt(t) ? [...new Set([...e, ...t])] : qt(Object.create(null), Li(e), Li(t ?? {}))) : t
}
function bb(e, t) {
  if (!e) return t
  if (!t) return e
  const n = qt(Object.create(null), e)
  for (const o in t) n[o] = Xt(e[o], t[o])
  return n
}
function tv() {
  return {
    app: null,
    config: {
      isNativeTag: F_,
      performance: !1,
      globalProperties: {},
      optionMergeStrategies: {},
      errorHandler: void 0,
      warnHandler: void 0,
      compilerOptions: {},
    },
    mixins: [],
    components: {},
    directives: {},
    provides: Object.create(null),
    optionsCache: new WeakMap(),
    propsCache: new WeakMap(),
    emitsCache: new WeakMap(),
  }
}
let zb = 0
function Cb(e, t) {
  return function (o, r = null) {
    Ge(o) || (o = qt({}, o)), r != null && !Bt(r) && (r = null)
    const a = tv(),
      l = new WeakSet(),
      s = []
    let i = !1
    const u = (a.app = {
      _uid: zb++,
      _component: o,
      _props: r,
      _container: null,
      _context: a,
      _instance: null,
      version: lz,
      get config() {
        return a.config
      },
      set config(c) {},
      use(c, ...d) {
        return l.has(c) || (c && Ge(c.install) ? (l.add(c), c.install(u, ...d)) : Ge(c) && (l.add(c), c(u, ...d))), u
      },
      mixin(c) {
        return a.mixins.includes(c) || a.mixins.push(c), u
      },
      component(c, d) {
        return d ? ((a.components[c] = d), u) : a.components[c]
      },
      directive(c, d) {
        return d ? ((a.directives[c] = d), u) : a.directives[c]
      },
      mount(c, d, m) {
        if (!i) {
          const v = u._ceVNode || ne(o, r)
          return (
            (v.appContext = a),
            m === !0 ? (m = 'svg') : m === !1 && (m = void 0),
            d && t ? t(v, c) : e(v, c, m),
            (i = !0),
            (u._container = c),
            (c.__vue_app__ = u),
            hs(v.component)
          )
        }
      },
      onUnmount(c) {
        s.push(c)
      },
      unmount() {
        i && (Vn(s, u._instance, 16), e(null, u._container), delete u._container.__vue_app__)
      },
      provide(c, d) {
        return (a.provides[c] = d), u
      },
      runWithContext(c) {
        const d = Jo
        Jo = u
        try {
          return c()
        } finally {
          Jo = d
        }
      },
    })
    return u
  }
}
let Jo = null
function ln(e, t) {
  if (xt) {
    let n = xt.provides
    const o = xt.parent && xt.parent.provides
    o === n && (n = xt.provides = Object.create(o)), (n[e] = t)
  }
}
function kt(e, t, n = !1) {
  const o = xt || Ot
  if (o || Jo) {
    const r = Jo
      ? Jo._context.provides
      : o
        ? o.parent == null
          ? o.vnode.appContext && o.vnode.appContext.provides
          : o.parent.provides
        : void 0
    if (r && e in r) return r[e]
    if (arguments.length > 1) return n && Ge(t) ? t.call(o && o.proxy) : t
  }
}
function Sb() {
  return !!(xt || Ot || Jo)
}
const nv = {},
  ov = () => Object.create(nv),
  rv = (e) => Object.getPrototypeOf(e) === nv
function wb(e, t, n, o = !1) {
  const r = {},
    a = ov()
  ;(e.propsDefaults = Object.create(null)), av(e, t, r, a)
  for (const l in e.propsOptions[0]) l in r || (r[l] = void 0)
  n ? (e.props = o ? r : us(r)) : e.type.props ? (e.props = r) : (e.props = a), (e.attrs = a)
}
function $b(e, t, n, o) {
  const {
      props: r,
      attrs: a,
      vnode: { patchFlag: l },
    } = e,
    s = at(r),
    [i] = e.propsOptions
  let u = !1
  if ((o || l > 0) && !(l & 16)) {
    if (l & 8) {
      const c = e.vnode.dynamicProps
      for (let d = 0; d < c.length; d++) {
        let m = c[d]
        if (gs(e.emitsOptions, m)) continue
        const v = t[m]
        if (i)
          if (zt(a, m)) v !== a[m] && ((a[m] = v), (u = !0))
          else {
            const g = Tn(m)
            r[g] = Ri(i, s, g, v, e, !1)
          }
        else v !== a[m] && ((a[m] = v), (u = !0))
      }
    }
  } else {
    av(e, t, r, a) && (u = !0)
    let c
    for (const d in s)
      (!t || (!zt(t, d) && ((c = ja(d)) === d || !zt(t, c)))) &&
        (i ? n && (n[d] !== void 0 || n[c] !== void 0) && (r[d] = Ri(i, s, d, void 0, e, !0)) : delete r[d])
    if (a !== s) for (const d in a) (!t || !zt(t, d)) && (delete a[d], (u = !0))
  }
  u && Jn(e.attrs, 'set', '')
}
function av(e, t, n, o) {
  const [r, a] = e.propsOptions
  let l = !1,
    s
  if (t)
    for (let i in t) {
      if (da(i)) continue
      const u = t[i]
      let c
      r && zt(r, (c = Tn(i)))
        ? !a || !a.includes(c)
          ? (n[c] = u)
          : ((s || (s = {}))[c] = u)
        : gs(e.emitsOptions, i) || ((!(i in o) || u !== o[i]) && ((o[i] = u), (l = !0)))
    }
  if (a) {
    const i = at(n),
      u = s || Ct
    for (let c = 0; c < a.length; c++) {
      const d = a[c]
      n[d] = Ri(r, i, d, u[d], e, !zt(u, d))
    }
  }
  return l
}
function Ri(e, t, n, o, r, a) {
  const l = e[n]
  if (l != null) {
    const s = zt(l, 'default')
    if (s && o === void 0) {
      const i = l.default
      if (l.type !== Function && !l.skipFactory && Ge(i)) {
        const { propsDefaults: u } = r
        if (n in u) o = u[n]
        else {
          const c = Wa(r)
          ;(o = u[n] = i.call(null, t)), c()
        }
      } else o = i
      r.ce && r.ce._setProp(n, o)
    }
    l[0] && (a && !s ? (o = !1) : l[1] && (o === '' || o === ja(n)) && (o = !0))
  }
  return o
}
const kb = new WeakMap()
function lv(e, t, n = !1) {
  const o = n ? kb : t.propsCache,
    r = o.get(e)
  if (r) return r
  const a = e.props,
    l = {},
    s = []
  let i = !1
  if (!Ge(e)) {
    const c = (d) => {
      i = !0
      const [m, v] = lv(d, t, !0)
      qt(l, m), v && s.push(...v)
    }
    !n && t.mixins.length && t.mixins.forEach(c), e.extends && c(e.extends), e.mixins && e.mixins.forEach(c)
  }
  if (!a && !i) return Bt(e) && o.set(e, Tr), Tr
  if (tt(a))
    for (let c = 0; c < a.length; c++) {
      const d = Tn(a[c])
      td(d) && (l[d] = Ct)
    }
  else if (a)
    for (const c in a) {
      const d = Tn(c)
      if (td(d)) {
        const m = a[c],
          v = (l[d] = tt(m) || Ge(m) ? { type: m } : qt({}, m)),
          g = v.type
        let h = !1,
          _ = !0
        if (tt(g))
          for (let y = 0; y < g.length; ++y) {
            const b = g[y],
              w = Ge(b) && b.name
            if (w === 'Boolean') {
              h = !0
              break
            } else w === 'String' && (_ = !1)
          }
        else h = Ge(g) && g.name === 'Boolean'
        ;(v[0] = h), (v[1] = _), (h || zt(v, 'default')) && s.push(d)
      }
    }
  const u = [l, s]
  return Bt(e) && o.set(e, u), u
}
function td(e) {
  return e[0] !== '$' && !da(e)
}
const sv = (e) => e[0] === '_' || e === '$stable',
  Mu = (e) => (tt(e) ? e.map(wn) : [wn(e)]),
  Tb = (e, t, n) => {
    if (t._n) return t
    const o = G((...r) => Mu(t(...r)), n)
    return (o._c = !1), o
  },
  iv = (e, t, n) => {
    const o = e._ctx
    for (const r in e) {
      if (sv(r)) continue
      const a = e[r]
      if (Ge(a)) t[r] = Tb(r, a, o)
      else if (a != null) {
        const l = Mu(a)
        t[r] = () => l
      }
    }
  },
  uv = (e, t) => {
    const n = Mu(t)
    e.slots.default = () => n
  },
  cv = (e, t, n) => {
    for (const o in t) (n || o !== '_') && (e[o] = t[o])
  },
  Vb = (e, t, n) => {
    const o = (e.slots = ov())
    if (e.vnode.shapeFlag & 32) {
      const r = t._
      r ? (cv(o, t, n), n && q_(o, '_', r, !0)) : iv(t, o)
    } else t && uv(e, t)
  },
  Pb = (e, t, n) => {
    const { vnode: o, slots: r } = e
    let a = !0,
      l = Ct
    if (o.shapeFlag & 32) {
      const s = t._
      s ? (n && s === 1 ? (a = !1) : cv(r, t, n)) : ((a = !t.$stable), iv(t, r)), (l = t)
    } else t && (uv(e, t), (l = { default: 1 }))
    if (a) for (const s in r) !sv(s) && l[s] == null && delete r[s]
  },
  nn = Yb
function Ab(e) {
  return Eb(e)
}
function Eb(e, t) {
  const n = Ap()
  n.__VUE__ = !0
  const {
      insert: o,
      remove: r,
      patchProp: a,
      createElement: l,
      createText: s,
      createComment: i,
      setText: u,
      setElementText: c,
      parentNode: d,
      nextSibling: m,
      setScopeId: v = Zn,
      insertStaticContent: g,
    } = e,
    h = (P, E, X, te = null, q = null, Q = null, ie = void 0, ve = null, he = !!E.dynamicChildren) => {
      if (P === E) return
      P && !On(P, E) && ((te = I(P)), xe(P, q, Q, !0), (P = null)),
        E.patchFlag === -2 && ((he = !1), (E.dynamicChildren = null))
      const { type: fe, ref: Ie, shapeFlag: F } = E
      switch (fe) {
        case ur:
          _(P, E, X, te)
          break
        case It:
          y(P, E, X, te)
          break
        case ri:
          P == null && b(E, X, te, ie)
          break
        case Te:
          j(P, E, X, te, q, Q, ie, ve, he)
          break
        default:
          F & 1
            ? $(P, E, X, te, q, Q, ie, ve, he)
            : F & 6
              ? U(P, E, X, te, q, Q, ie, ve, he)
              : (F & 64 || F & 128) && fe.process(P, E, X, te, q, Q, ie, ve, he, se)
      }
      Ie != null && q && xi(Ie, P && P.ref, Q, E || P, !E)
    },
    _ = (P, E, X, te) => {
      if (P == null) o((E.el = s(E.children)), X, te)
      else {
        const q = (E.el = P.el)
        E.children !== P.children && u(q, E.children)
      }
    },
    y = (P, E, X, te) => {
      P == null ? o((E.el = i(E.children || '')), X, te) : (E.el = P.el)
    },
    b = (P, E, X, te) => {
      ;[P.el, P.anchor] = g(P.children, E, X, te, P.el, P.anchor)
    },
    w = ({ el: P, anchor: E }, X, te) => {
      let q
      for (; P && P !== E; ) (q = m(P)), o(P, X, te), (P = q)
      o(E, X, te)
    },
    S = ({ el: P, anchor: E }) => {
      let X
      for (; P && P !== E; ) (X = m(P)), r(P), (P = X)
      r(E)
    },
    $ = (P, E, X, te, q, Q, ie, ve, he) => {
      E.type === 'svg' ? (ie = 'svg') : E.type === 'math' && (ie = 'mathml'),
        P == null ? k(E, X, te, q, Q, ie, ve, he) : T(P, E, q, Q, ie, ve, he)
    },
    k = (P, E, X, te, q, Q, ie, ve) => {
      let he, fe
      const { props: Ie, shapeFlag: F, transition: Z, dirs: Ve } = P
      if (
        ((he = P.el = l(P.type, Q, Ie && Ie.is, Ie)),
        F & 8 ? c(he, P.children) : F & 16 && V(P.children, he, null, te, q, ni(P, Q), ie, ve),
        Ve && Do(P, null, te, 'created'),
        z(he, P, P.scopeId, ie, te),
        Ie)
      ) {
        for (const qe in Ie) qe !== 'value' && !da(qe) && a(he, qe, null, Ie[qe], Q, te)
        'value' in Ie && a(he, 'value', null, Ie.value, Q), (fe = Ie.onVnodeBeforeMount) && En(fe, te, P)
      }
      Ve && Do(P, null, te, 'beforeMount')
      const De = Ib(q, Z)
      De && Z.beforeEnter(he),
        o(he, E, X),
        ((fe = Ie && Ie.onVnodeMounted) || De || Ve) &&
          nn(() => {
            fe && En(fe, te, P), De && Z.enter(he), Ve && Do(P, null, te, 'mounted')
          }, q)
    },
    z = (P, E, X, te, q) => {
      if ((X && v(P, X), te)) for (let Q = 0; Q < te.length; Q++) v(P, te[Q])
      if (q) {
        let Q = q.subTree
        if (E === Q || (pv(Q.type) && (Q.ssContent === E || Q.ssFallback === E))) {
          const ie = q.vnode
          z(P, ie, ie.scopeId, ie.slotScopeIds, q.parent)
        }
      }
    },
    V = (P, E, X, te, q, Q, ie, ve, he = 0) => {
      for (let fe = he; fe < P.length; fe++) {
        const Ie = (P[fe] = ve ? zo(P[fe]) : wn(P[fe]))
        h(null, Ie, E, X, te, q, Q, ie, ve)
      }
    },
    T = (P, E, X, te, q, Q, ie) => {
      const ve = (E.el = P.el)
      let { patchFlag: he, dynamicChildren: fe, dirs: Ie } = E
      he |= P.patchFlag & 16
      const F = P.props || Ct,
        Z = E.props || Ct
      let Ve
      if (
        (X && Mo(X, !1),
        (Ve = Z.onVnodeBeforeUpdate) && En(Ve, X, E, P),
        Ie && Do(E, P, X, 'beforeUpdate'),
        X && Mo(X, !0),
        ((F.innerHTML && Z.innerHTML == null) || (F.textContent && Z.textContent == null)) && c(ve, ''),
        fe ? B(P.dynamicChildren, fe, ve, X, te, ni(E, q), Q) : ie || x(P, E, ve, null, X, te, ni(E, q), Q, !1),
        he > 0)
      ) {
        if (he & 16) K(ve, F, Z, X, q)
        else if (
          (he & 2 && F.class !== Z.class && a(ve, 'class', null, Z.class, q),
          he & 4 && a(ve, 'style', F.style, Z.style, q),
          he & 8)
        ) {
          const De = E.dynamicProps
          for (let qe = 0; qe < De.length; qe++) {
            const Ye = De[qe],
              oe = F[Ye],
              de = Z[Ye]
            ;(de !== oe || Ye === 'value') && a(ve, Ye, oe, de, q, X)
          }
        }
        he & 1 && P.children !== E.children && c(ve, E.children)
      } else !ie && fe == null && K(ve, F, Z, X, q)
      ;((Ve = Z.onVnodeUpdated) || Ie) &&
        nn(() => {
          Ve && En(Ve, X, E, P), Ie && Do(E, P, X, 'updated')
        }, te)
    },
    B = (P, E, X, te, q, Q, ie) => {
      for (let ve = 0; ve < E.length; ve++) {
        const he = P[ve],
          fe = E[ve],
          Ie = he.el && (he.type === Te || !On(he, fe) || he.shapeFlag & 70) ? d(he.el) : X
        h(he, fe, Ie, null, te, q, Q, ie, !0)
      }
    },
    K = (P, E, X, te, q) => {
      if (E !== X) {
        if (E !== Ct) for (const Q in E) !da(Q) && !(Q in X) && a(P, Q, E[Q], null, q, te)
        for (const Q in X) {
          if (da(Q)) continue
          const ie = X[Q],
            ve = E[Q]
          ie !== ve && Q !== 'value' && a(P, Q, ve, ie, q, te)
        }
        'value' in X && a(P, 'value', E.value, X.value, q)
      }
    },
    j = (P, E, X, te, q, Q, ie, ve, he) => {
      const fe = (E.el = P ? P.el : s('')),
        Ie = (E.anchor = P ? P.anchor : s(''))
      let { patchFlag: F, dynamicChildren: Z, slotScopeIds: Ve } = E
      Ve && (ve = ve ? ve.concat(Ve) : Ve),
        P == null
          ? (o(fe, X, te), o(Ie, X, te), V(E.children || [], X, Ie, q, Q, ie, ve, he))
          : F > 0 && F & 64 && Z && P.dynamicChildren
            ? (B(P.dynamicChildren, Z, X, q, Q, ie, ve), (E.key != null || (q && E === q.subTree)) && Fu(P, E, !0))
            : x(P, E, X, Ie, q, Q, ie, ve, he)
    },
    U = (P, E, X, te, q, Q, ie, ve, he) => {
      ;(E.slotScopeIds = ve),
        P == null ? (E.shapeFlag & 512 ? q.ctx.activate(E, X, te, ie, he) : D(E, X, te, q, Q, ie, he)) : O(P, E, he)
    },
    D = (P, E, X, te, q, Q, ie) => {
      const ve = (P.component = ez(P, te, q))
      if ((Ua(P) && (ve.ctx.renderer = se), tz(ve, !1, ie), ve.asyncDep)) {
        if ((q && q.registerDep(ve, R, ie), !P.el)) {
          const he = (ve.subTree = ne(It))
          y(null, he, E, X)
        }
      } else R(ve, P, E, X, q, Q, ie)
    },
    O = (P, E, X) => {
      const te = (E.component = P.component)
      if (jb(P, E, X))
        if (te.asyncDep && !te.asyncResolved) {
          N(te, E, X)
          return
        } else (te.next = E), te.update()
      else (E.el = P.el), (te.vnode = E)
    },
    R = (P, E, X, te, q, Q, ie) => {
      const ve = () => {
        if (P.isMounted) {
          let { next: F, bu: Z, u: Ve, parent: De, vnode: qe } = P
          {
            const Ne = dv(P)
            if (Ne) {
              F && ((F.el = qe.el), N(P, F, ie)),
                Ne.asyncDep.then(() => {
                  P.isUnmounted || ve()
                })
              return
            }
          }
          let Ye = F,
            oe
          Mo(P, !1),
            F ? ((F.el = qe.el), N(P, F, ie)) : (F = qe),
            Z && Js(Z),
            (oe = F.props && F.props.onVnodeBeforeUpdate) && En(oe, De, F, qe),
            Mo(P, !0)
          const de = oi(P),
            Oe = P.subTree
          ;(P.subTree = de),
            h(Oe, de, d(Oe.el), I(Oe), P, q, Q),
            (F.el = de.el),
            Ye === null && Hu(P, de.el),
            Ve && nn(Ve, q),
            (oe = F.props && F.props.onVnodeUpdated) && nn(() => En(oe, De, F, qe), q)
        } else {
          let F
          const { el: Z, props: Ve } = E,
            { bm: De, m: qe, parent: Ye, root: oe, type: de } = P,
            Oe = Pr(E)
          if ((Mo(P, !1), De && Js(De), !Oe && (F = Ve && Ve.onVnodeBeforeMount) && En(F, Ye, E), Mo(P, !0), Z && He)) {
            const Ne = () => {
              ;(P.subTree = oi(P)), He(Z, P.subTree, P, q, null)
            }
            Oe && de.__asyncHydrate ? de.__asyncHydrate(Z, P, Ne) : Ne()
          } else {
            oe.ce && oe.ce._injectChildStyle(de)
            const Ne = (P.subTree = oi(P))
            h(null, Ne, X, te, P, q, Q), (E.el = Ne.el)
          }
          if ((qe && nn(qe, q), !Oe && (F = Ve && Ve.onVnodeMounted))) {
            const Ne = E
            nn(() => En(F, Ye, Ne), q)
          }
          ;(E.shapeFlag & 256 || (Ye && Pr(Ye.vnode) && Ye.vnode.shapeFlag & 256)) && P.a && nn(P.a, q),
            (P.isMounted = !0),
            (E = X = te = null)
        }
      }
      P.scope.on()
      const he = (P.effect = new ap(ve))
      P.scope.off()
      const fe = (P.update = he.run.bind(he)),
        Ie = (P.job = he.runIfDirty.bind(he))
      ;(Ie.i = P), (Ie.id = P.uid), (he.scheduler = () => Ou(Ie)), Mo(P, !0), fe()
    },
    N = (P, E, X) => {
      E.component = P
      const te = P.vnode.props
      ;(P.vnode = E), (P.next = null), $b(P, E.props, te, X), Pb(P, E.children, X), Ao(), Gc(P), Eo()
    },
    x = (P, E, X, te, q, Q, ie, ve, he = !1) => {
      const fe = P && P.children,
        Ie = P ? P.shapeFlag : 0,
        F = E.children,
        { patchFlag: Z, shapeFlag: Ve } = E
      if (Z > 0) {
        if (Z & 128) {
          ue(fe, F, X, te, q, Q, ie, ve, he)
          return
        } else if (Z & 256) {
          ce(fe, F, X, te, q, Q, ie, ve, he)
          return
        }
      }
      Ve & 8
        ? (Ie & 16 && Ce(fe, q, Q), F !== fe && c(X, F))
        : Ie & 16
          ? Ve & 16
            ? ue(fe, F, X, te, q, Q, ie, ve, he)
            : Ce(fe, q, Q, !0)
          : (Ie & 8 && c(X, ''), Ve & 16 && V(F, X, te, q, Q, ie, ve, he))
    },
    ce = (P, E, X, te, q, Q, ie, ve, he) => {
      ;(P = P || Tr), (E = E || Tr)
      const fe = P.length,
        Ie = E.length,
        F = Math.min(fe, Ie)
      let Z
      for (Z = 0; Z < F; Z++) {
        const Ve = (E[Z] = he ? zo(E[Z]) : wn(E[Z]))
        h(P[Z], Ve, X, null, q, Q, ie, ve, he)
      }
      fe > Ie ? Ce(P, q, Q, !0, !1, F) : V(E, X, te, q, Q, ie, ve, he, F)
    },
    ue = (P, E, X, te, q, Q, ie, ve, he) => {
      let fe = 0
      const Ie = E.length
      let F = P.length - 1,
        Z = Ie - 1
      for (; fe <= F && fe <= Z; ) {
        const Ve = P[fe],
          De = (E[fe] = he ? zo(E[fe]) : wn(E[fe]))
        if (On(Ve, De)) h(Ve, De, X, null, q, Q, ie, ve, he)
        else break
        fe++
      }
      for (; fe <= F && fe <= Z; ) {
        const Ve = P[F],
          De = (E[Z] = he ? zo(E[Z]) : wn(E[Z]))
        if (On(Ve, De)) h(Ve, De, X, null, q, Q, ie, ve, he)
        else break
        F--, Z--
      }
      if (fe > F) {
        if (fe <= Z) {
          const Ve = Z + 1,
            De = Ve < Ie ? E[Ve].el : te
          for (; fe <= Z; ) h(null, (E[fe] = he ? zo(E[fe]) : wn(E[fe])), X, De, q, Q, ie, ve, he), fe++
        }
      } else if (fe > Z) for (; fe <= F; ) xe(P[fe], q, Q, !0), fe++
      else {
        const Ve = fe,
          De = fe,
          qe = new Map()
        for (fe = De; fe <= Z; fe++) {
          const _t = (E[fe] = he ? zo(E[fe]) : wn(E[fe]))
          _t.key != null && qe.set(_t.key, fe)
        }
        let Ye,
          oe = 0
        const de = Z - De + 1
        let Oe = !1,
          Ne = 0
        const pt = new Array(de)
        for (fe = 0; fe < de; fe++) pt[fe] = 0
        for (fe = Ve; fe <= F; fe++) {
          const _t = P[fe]
          if (oe >= de) {
            xe(_t, q, Q, !0)
            continue
          }
          let Nt
          if (_t.key != null) Nt = qe.get(_t.key)
          else
            for (Ye = De; Ye <= Z; Ye++)
              if (pt[Ye - De] === 0 && On(_t, E[Ye])) {
                Nt = Ye
                break
              }
          Nt === void 0
            ? xe(_t, q, Q, !0)
            : ((pt[Nt - De] = fe + 1), Nt >= Ne ? (Ne = Nt) : (Oe = !0), h(_t, E[Nt], X, null, q, Q, ie, ve, he), oe++)
        }
        const Yt = Oe ? xb(pt) : Tr
        for (Ye = Yt.length - 1, fe = de - 1; fe >= 0; fe--) {
          const _t = De + fe,
            Nt = E[_t],
            en = _t + 1 < Ie ? E[_t + 1].el : te
          pt[fe] === 0
            ? h(null, Nt, X, en, q, Q, ie, ve, he)
            : Oe && (Ye < 0 || fe !== Yt[Ye] ? be(Nt, X, en, 2) : Ye--)
        }
      }
    },
    be = (P, E, X, te, q = null) => {
      const { el: Q, type: ie, transition: ve, children: he, shapeFlag: fe } = P
      if (fe & 6) {
        be(P.component.subTree, E, X, te)
        return
      }
      if (fe & 128) {
        P.suspense.move(E, X, te)
        return
      }
      if (fe & 64) {
        ie.move(P, E, X, se)
        return
      }
      if (ie === Te) {
        o(Q, E, X)
        for (let F = 0; F < he.length; F++) be(he[F], E, X, te)
        o(P.anchor, E, X)
        return
      }
      if (ie === ri) {
        w(P, E, X)
        return
      }
      if (te !== 2 && fe & 1 && ve)
        if (te === 0) ve.beforeEnter(Q), o(Q, E, X), nn(() => ve.enter(Q), q)
        else {
          const { leave: F, delayLeave: Z, afterLeave: Ve } = ve,
            De = () => o(Q, E, X),
            qe = () => {
              F(Q, () => {
                De(), Ve && Ve()
              })
            }
          Z ? Z(Q, De, qe) : qe()
        }
      else o(Q, E, X)
    },
    xe = (P, E, X, te = !1, q = !1) => {
      const {
        type: Q,
        props: ie,
        ref: ve,
        children: he,
        dynamicChildren: fe,
        shapeFlag: Ie,
        patchFlag: F,
        dirs: Z,
        cacheIndex: Ve,
      } = P
      if (
        (F === -2 && (q = !1),
        ve != null && xi(ve, null, X, P, !0),
        Ve != null && (E.renderCache[Ve] = void 0),
        Ie & 256)
      ) {
        E.ctx.deactivate(P)
        return
      }
      const De = Ie & 1 && Z,
        qe = !Pr(P)
      let Ye
      if ((qe && (Ye = ie && ie.onVnodeBeforeUnmount) && En(Ye, E, P), Ie & 6)) _e(P.component, X, te)
      else {
        if (Ie & 128) {
          P.suspense.unmount(X, te)
          return
        }
        De && Do(P, null, E, 'beforeUnmount'),
          Ie & 64
            ? P.type.remove(P, E, X, se, te)
            : fe && !fe.hasOnce && (Q !== Te || (F > 0 && F & 64))
              ? Ce(fe, E, X, !1, !0)
              : ((Q === Te && F & 384) || (!q && Ie & 16)) && Ce(he, E, X),
          te && we(P)
      }
      ;((qe && (Ye = ie && ie.onVnodeUnmounted)) || De) &&
        nn(() => {
          Ye && En(Ye, E, P), De && Do(P, null, E, 'unmounted')
        }, X)
    },
    we = (P) => {
      const { type: E, el: X, anchor: te, transition: q } = P
      if (E === Te) {
        J(X, te)
        return
      }
      if (E === ri) {
        S(P)
        return
      }
      const Q = () => {
        r(X), q && !q.persisted && q.afterLeave && q.afterLeave()
      }
      if (P.shapeFlag & 1 && q && !q.persisted) {
        const { leave: ie, delayLeave: ve } = q,
          he = () => ie(X, Q)
        ve ? ve(P.el, Q, he) : he()
      } else Q()
    },
    J = (P, E) => {
      let X
      for (; P !== E; ) (X = m(P)), r(P), (P = X)
      r(E)
    },
    _e = (P, E, X) => {
      const { bum: te, scope: q, job: Q, subTree: ie, um: ve, m: he, a: fe } = P
      nd(he),
        nd(fe),
        te && Js(te),
        q.stop(),
        Q && ((Q.flags |= 8), xe(ie, P, E, X)),
        ve && nn(ve, E),
        nn(() => {
          P.isUnmounted = !0
        }, E),
        E &&
          E.pendingBranch &&
          !E.isUnmounted &&
          P.asyncDep &&
          !P.asyncResolved &&
          P.suspenseId === E.pendingId &&
          (E.deps--, E.deps === 0 && E.resolve())
    },
    Ce = (P, E, X, te = !1, q = !1, Q = 0) => {
      for (let ie = Q; ie < P.length; ie++) xe(P[ie], E, X, te, q)
    },
    I = (P) => {
      if (P.shapeFlag & 6) return I(P.component.subTree)
      if (P.shapeFlag & 128) return P.suspense.next()
      const E = m(P.anchor || P.el),
        X = E && E[Rp]
      return X ? m(X) : E
    }
  let M = !1
  const ae = (P, E, X) => {
      P == null ? E._vnode && xe(E._vnode, null, null, !0) : h(E._vnode || null, P, E, null, null, null, X),
        (E._vnode = P),
        M || ((M = !0), Gc(), Lp(), (M = !1))
    },
    se = { p: h, um: xe, m: be, r: we, mt: D, mc: V, pc: x, pbc: B, n: I, o: e }
  let Ee, He
  return { render: ae, hydrate: Ee, createApp: Cb(ae, Ee) }
}
function ni({ type: e, props: t }, n) {
  return (n === 'svg' && e === 'foreignObject') ||
    (n === 'mathml' && e === 'annotation-xml' && t && t.encoding && t.encoding.includes('html'))
    ? void 0
    : n
}
function Mo({ effect: e, job: t }, n) {
  n ? ((e.flags |= 32), (t.flags |= 4)) : ((e.flags &= -33), (t.flags &= -5))
}
function Ib(e, t) {
  return (!e || (e && !e.pendingBranch)) && t && !t.persisted
}
function Fu(e, t, n = !1) {
  const o = e.children,
    r = t.children
  if (tt(o) && tt(r))
    for (let a = 0; a < o.length; a++) {
      const l = o[a]
      let s = r[a]
      s.shapeFlag & 1 &&
        !s.dynamicChildren &&
        ((s.patchFlag <= 0 || s.patchFlag === 32) && ((s = r[a] = zo(r[a])), (s.el = l.el)),
        !n && s.patchFlag !== -2 && Fu(l, s)),
        s.type === ur && (s.el = l.el)
    }
}
function xb(e) {
  const t = e.slice(),
    n = [0]
  let o, r, a, l, s
  const i = e.length
  for (o = 0; o < i; o++) {
    const u = e[o]
    if (u !== 0) {
      if (((r = n[n.length - 1]), e[r] < u)) {
        ;(t[o] = r), n.push(o)
        continue
      }
      for (a = 0, l = n.length - 1; a < l; ) (s = (a + l) >> 1), e[n[s]] < u ? (a = s + 1) : (l = s)
      u < e[n[a]] && (a > 0 && (t[o] = n[a - 1]), (n[a] = o))
    }
  }
  for (a = n.length, l = n[a - 1]; a-- > 0; ) (n[a] = l), (l = t[l])
  return n
}
function dv(e) {
  const t = e.subTree.component
  if (t) return t.asyncDep && !t.asyncResolved ? t : dv(t)
}
function nd(e) {
  if (e) for (let t = 0; t < e.length; t++) e[t].flags |= 8
}
const Ob = Symbol.for('v-scx'),
  Lb = () => kt(Ob)
function vn(e, t) {
  return ju(e, null, t)
}
function ge(e, t, n) {
  return ju(e, t, n)
}
function ju(e, t, n = Ct) {
  const { immediate: o, deep: r, flush: a, once: l } = n,
    s = qt({}, n)
  let i
  if (Ga)
    if (a === 'sync') {
      const m = Lb()
      i = m.__watcherHandles || (m.__watcherHandles = [])
    } else if (!t || o) s.once = !0
    else {
      const m = () => {}
      return (m.stop = Zn), (m.resume = Zn), (m.pause = Zn), m
    }
  const u = xt
  s.call = (m, v, g) => Vn(m, u, v, g)
  let c = !1
  a === 'post'
    ? (s.scheduler = (m) => {
        nn(m, u && u.suspense)
      })
    : a !== 'sync' &&
      ((c = !0),
      (s.scheduler = (m, v) => {
        v ? m() : Ou(m)
      })),
    (s.augmentJob = (m) => {
      t && (m.flags |= 4), c && ((m.flags |= 2), u && ((m.id = u.uid), (m.i = u)))
    })
  const d = D_(e, t, s)
  return i && i.push(d), d
}
function Bb(e, t, n) {
  const o = this.proxy,
    r = Dt(e) ? (e.includes('.') ? mv(o, e) : () => o[e]) : e.bind(o, o)
  let a
  Ge(t) ? (a = t) : ((a = t.handler), (n = t))
  const l = Wa(this),
    s = ju(r, a.bind(o), n)
  return l(), s
}
function mv(e, t) {
  const n = t.split('.')
  return () => {
    let o = e
    for (let r = 0; r < n.length && o; r++) o = o[n[r]]
    return o
  }
}
const Nb = (e, t) =>
  t === 'modelValue' || t === 'model-value'
    ? e.modelModifiers
    : e[`${t}Modifiers`] || e[`${Tn(t)}Modifiers`] || e[`${ja(t)}Modifiers`]
function Rb(e, t, ...n) {
  if (e.isUnmounted) return
  const o = e.vnode.props || Ct
  let r = n
  const a = t.startsWith('update:'),
    l = a && Nb(o, t.slice(7))
  l && (l.trim && (r = n.map((c) => (Dt(c) ? c.trim() : c))), l.number && (r = n.map(Y_)))
  let s,
    i = o[(s = Pl(t))] || o[(s = Pl(Tn(t)))]
  !i && a && (i = o[(s = Pl(ja(t)))]), i && Vn(i, e, 6, r)
  const u = o[s + 'Once']
  if (u) {
    if (!e.emitted) e.emitted = {}
    else if (e.emitted[s]) return
    ;(e.emitted[s] = !0), Vn(u, e, 6, r)
  }
}
function fv(e, t, n = !1) {
  const o = t.emitsCache,
    r = o.get(e)
  if (r !== void 0) return r
  const a = e.emits
  let l = {},
    s = !1
  if (!Ge(e)) {
    const i = (u) => {
      const c = fv(u, t, !0)
      c && ((s = !0), qt(l, c))
    }
    !n && t.mixins.length && t.mixins.forEach(i), e.extends && i(e.extends), e.mixins && e.mixins.forEach(i)
  }
  return !a && !s
    ? (Bt(e) && o.set(e, null), null)
    : (tt(a) ? a.forEach((i) => (l[i] = null)) : qt(l, a), Bt(e) && o.set(e, l), l)
}
function gs(e, t) {
  return !e || !Eu(t)
    ? !1
    : ((t = t.slice(2).replace(/Once$/, '')), zt(e, t[0].toLowerCase() + t.slice(1)) || zt(e, ja(t)) || zt(e, t))
}
function oi(e) {
  const {
      type: t,
      vnode: n,
      proxy: o,
      withProxy: r,
      propsOptions: [a],
      slots: l,
      attrs: s,
      emit: i,
      render: u,
      renderCache: c,
      props: d,
      data: m,
      setupState: v,
      ctx: g,
      inheritAttrs: h,
    } = e,
    _ = Ml(e)
  let y, b
  try {
    if (n.shapeFlag & 4) {
      const S = r || o,
        $ = S
      ;(y = wn(u.call($, S, c, d, v, m, g))), (b = s)
    } else {
      const S = t
      ;(y = wn(S.length > 1 ? S(d, { attrs: s, slots: l, emit: i }) : S(d, null))), (b = t.props ? s : Mb(s))
    }
  } catch (S) {
    ;(pa.length = 0), Gr(S, e, 1), (y = ne(It))
  }
  let w = y
  if (b && h !== !1) {
    const S = Object.keys(b),
      { shapeFlag: $ } = w
    S.length && $ & 7 && (a && S.some($p) && (b = Fb(b, a)), (w = wo(w, b, !1, !0)))
  }
  return (
    n.dirs && ((w = wo(w, null, !1, !0)), (w.dirs = w.dirs ? w.dirs.concat(n.dirs) : n.dirs)),
    n.transition && er(w, n.transition),
    (y = w),
    Ml(_),
    y
  )
}
function Db(e, t = !0) {
  let n
  for (let o = 0; o < e.length; o++) {
    const r = e[o]
    if (tr(r)) {
      if (r.type !== It || r.children === 'v-if') {
        if (n) return
        n = r
      }
    } else return
  }
  return n
}
const Mb = (e) => {
    let t
    for (const n in e) (n === 'class' || n === 'style' || Eu(n)) && ((t || (t = {}))[n] = e[n])
    return t
  },
  Fb = (e, t) => {
    const n = {}
    for (const o in e) (!$p(o) || !(o.slice(9) in t)) && (n[o] = e[o])
    return n
  }
function jb(e, t, n) {
  const { props: o, children: r, component: a } = e,
    { props: l, children: s, patchFlag: i } = t,
    u = a.emitsOptions
  if (t.dirs || t.transition) return !0
  if (n && i >= 0) {
    if (i & 1024) return !0
    if (i & 16) return o ? od(o, l, u) : !!l
    if (i & 8) {
      const c = t.dynamicProps
      for (let d = 0; d < c.length; d++) {
        const m = c[d]
        if (l[m] !== o[m] && !gs(u, m)) return !0
      }
    }
  } else return (r || s) && (!s || !s.$stable) ? !0 : o === l ? !1 : o ? (l ? od(o, l, u) : !0) : !!l
  return !1
}
function od(e, t, n) {
  const o = Object.keys(t)
  if (o.length !== Object.keys(e).length) return !0
  for (let r = 0; r < o.length; r++) {
    const a = o[r]
    if (t[a] !== e[a] && !gs(n, a)) return !0
  }
  return !1
}
function Hu({ vnode: e, parent: t }, n) {
  for (; t; ) {
    const o = t.subTree
    if ((o.suspense && o.suspense.activeBranch === e && (o.el = e.el), o === e)) ((e = t.vnode).el = n), (t = t.parent)
    else break
  }
}
const pv = (e) => e.__isSuspense
let Di = 0
const Hb = {
    name: 'Suspense',
    __isSuspense: !0,
    process(e, t, n, o, r, a, l, s, i, u) {
      if (e == null) Wb(t, n, o, r, a, l, s, i, u)
      else {
        if (a && a.deps > 0 && !e.suspense.isInFallback) {
          ;(t.suspense = e.suspense), (t.suspense.vnode = t), (t.el = e.el)
          return
        }
        Gb(e, t, n, o, r, l, s, i, u)
      }
    },
    hydrate: Kb,
    normalize: qb,
  },
  Ub = Hb
function Pa(e, t) {
  const n = e.props && e.props[t]
  Ge(n) && n()
}
function Wb(e, t, n, o, r, a, l, s, i) {
  const {
      p: u,
      o: { createElement: c },
    } = i,
    d = c('div'),
    m = (e.suspense = vv(e, r, o, t, d, n, a, l, s, i))
  u(null, (m.pendingBranch = e.ssContent), d, null, o, m, a, l),
    m.deps > 0
      ? (Pa(e, 'onPending'), Pa(e, 'onFallback'), u(null, e.ssFallback, t, n, o, null, a, l), Ar(m, e.ssFallback))
      : m.resolve(!1, !0)
}
function Gb(e, t, n, o, r, a, l, s, { p: i, um: u, o: { createElement: c } }) {
  const d = (t.suspense = e.suspense)
  ;(d.vnode = t), (t.el = e.el)
  const m = t.ssContent,
    v = t.ssFallback,
    { activeBranch: g, pendingBranch: h, isInFallback: _, isHydrating: y } = d
  if (h)
    (d.pendingBranch = m),
      On(m, h)
        ? (i(h, m, d.hiddenContainer, null, r, d, a, l, s),
          d.deps <= 0 ? d.resolve() : _ && (y || (i(g, v, n, o, r, null, a, l, s), Ar(d, v))))
        : ((d.pendingId = Di++),
          y ? ((d.isHydrating = !1), (d.activeBranch = h)) : u(h, r, d),
          (d.deps = 0),
          (d.effects.length = 0),
          (d.hiddenContainer = c('div')),
          _
            ? (i(null, m, d.hiddenContainer, null, r, d, a, l, s),
              d.deps <= 0 ? d.resolve() : (i(g, v, n, o, r, null, a, l, s), Ar(d, v)))
            : g && On(m, g)
              ? (i(g, m, n, o, r, d, a, l, s), d.resolve(!0))
              : (i(null, m, d.hiddenContainer, null, r, d, a, l, s), d.deps <= 0 && d.resolve()))
  else if (g && On(m, g)) i(g, m, n, o, r, d, a, l, s), Ar(d, m)
  else if (
    (Pa(t, 'onPending'),
    (d.pendingBranch = m),
    m.shapeFlag & 512 ? (d.pendingId = m.component.suspenseId) : (d.pendingId = Di++),
    i(null, m, d.hiddenContainer, null, r, d, a, l, s),
    d.deps <= 0)
  )
    d.resolve()
  else {
    const { timeout: b, pendingId: w } = d
    b > 0
      ? setTimeout(() => {
          d.pendingId === w && d.fallback(v)
        }, b)
      : b === 0 && d.fallback(v)
  }
}
function vv(e, t, n, o, r, a, l, s, i, u, c = !1) {
  const {
    p: d,
    m,
    um: v,
    n: g,
    o: { parentNode: h, remove: _ },
  } = u
  let y
  const b = Xb(e)
  b && t && t.pendingBranch && ((y = t.pendingId), t.deps++)
  const w = e.props ? X_(e.props.timeout) : void 0,
    S = a,
    $ = {
      vnode: e,
      parent: t,
      parentComponent: n,
      namespace: l,
      container: o,
      hiddenContainer: r,
      deps: 0,
      pendingId: Di++,
      timeout: typeof w == 'number' ? w : -1,
      activeBranch: null,
      pendingBranch: null,
      isInFallback: !c,
      isHydrating: c,
      isUnmounted: !1,
      effects: [],
      resolve(k = !1, z = !1) {
        const {
          vnode: V,
          activeBranch: T,
          pendingBranch: B,
          pendingId: K,
          effects: j,
          parentComponent: U,
          container: D,
        } = $
        let O = !1
        $.isHydrating
          ? ($.isHydrating = !1)
          : k ||
            ((O = T && B.transition && B.transition.mode === 'out-in'),
            O &&
              (T.transition.afterLeave = () => {
                K === $.pendingId && (m(B, D, a === S ? g(T) : a, 0), Ei(j))
              }),
            T && (h(T.el) === D && (a = g(T)), v(T, U, $, !0)),
            O || m(B, D, a, 0)),
          Ar($, B),
          ($.pendingBranch = null),
          ($.isInFallback = !1)
        let R = $.parent,
          N = !1
        for (; R; ) {
          if (R.pendingBranch) {
            R.effects.push(...j), (N = !0)
            break
          }
          R = R.parent
        }
        !N && !O && Ei(j),
          ($.effects = []),
          b && t && t.pendingBranch && y === t.pendingId && (t.deps--, t.deps === 0 && !z && t.resolve()),
          Pa(V, 'onResolve')
      },
      fallback(k) {
        if (!$.pendingBranch) return
        const { vnode: z, activeBranch: V, parentComponent: T, container: B, namespace: K } = $
        Pa(z, 'onFallback')
        const j = g(V),
          U = () => {
            $.isInFallback && (d(null, k, B, j, T, null, K, s, i), Ar($, k))
          },
          D = k.transition && k.transition.mode === 'out-in'
        D && (V.transition.afterLeave = U), ($.isInFallback = !0), v(V, T, null, !0), D || U()
      },
      move(k, z, V) {
        $.activeBranch && m($.activeBranch, k, z, V), ($.container = k)
      },
      next() {
        return $.activeBranch && g($.activeBranch)
      },
      registerDep(k, z, V) {
        const T = !!$.pendingBranch
        T && $.deps++
        const B = k.vnode.el
        k.asyncDep
          .catch((K) => {
            Gr(K, k, 0)
          })
          .then((K) => {
            if (k.isUnmounted || $.isUnmounted || $.pendingId !== k.suspenseId) return
            k.asyncResolved = !0
            const { vnode: j } = k
            Fi(k, K, !1), B && (j.el = B)
            const U = !B && k.subTree.el
            z(k, j, h(B || k.subTree.el), B ? null : g(k.subTree), $, l, V),
              U && _(U),
              Hu(k, j.el),
              T && --$.deps === 0 && $.resolve()
          })
      },
      unmount(k, z) {
        ;($.isUnmounted = !0),
          $.activeBranch && v($.activeBranch, n, k, z),
          $.pendingBranch && v($.pendingBranch, n, k, z)
      },
    }
  return $
}
function Kb(e, t, n, o, r, a, l, s, i) {
  const u = (t.suspense = vv(t, o, n, e.parentNode, document.createElement('div'), null, r, a, l, s, !0)),
    c = i(e, (u.pendingBranch = t.ssContent), n, u, a, l)
  return u.deps === 0 && u.resolve(!1, !0), c
}
function qb(e) {
  const { shapeFlag: t, children: n } = e,
    o = t & 32
  ;(e.ssContent = rd(o ? n.default : n)), (e.ssFallback = o ? rd(n.fallback) : ne(It))
}
function rd(e) {
  let t
  if (Ge(e)) {
    const n = Ir && e._c
    n && ((e._d = !1), C()), (e = e()), n && ((e._d = !0), (t = rn), gv())
  }
  return tt(e) && (e = Db(e)), (e = wn(e)), t && !e.dynamicChildren && (e.dynamicChildren = t.filter((n) => n !== e)), e
}
function Yb(e, t) {
  t && t.pendingBranch ? (tt(e) ? t.effects.push(...e) : t.effects.push(e)) : Ei(e)
}
function Ar(e, t) {
  e.activeBranch = t
  const { vnode: n, parentComponent: o } = e
  let r = t.el
  for (; !r && t.component; ) (t = t.component.subTree), (r = t.el)
  ;(n.el = r), o && o.subTree === n && ((o.vnode.el = r), Hu(o, r))
}
function Xb(e) {
  const t = e.props && e.props.suspensible
  return t != null && t !== !1
}
const Te = Symbol.for('v-fgt'),
  ur = Symbol.for('v-txt'),
  It = Symbol.for('v-cmt'),
  ri = Symbol.for('v-stc'),
  pa = []
let rn = null
function C(e = !1) {
  pa.push((rn = e ? null : []))
}
function gv() {
  pa.pop(), (rn = pa[pa.length - 1] || null)
}
let Ir = 1
function ad(e) {
  ;(Ir += e), e < 0 && rn && (rn.hasOnce = !0)
}
function hv(e) {
  return (e.dynamicChildren = Ir > 0 ? rn || Tr : null), gv(), Ir > 0 && rn && rn.push(e), e
}
function A(e, t, n, o, r, a) {
  return hv(Y(e, t, n, o, r, a, !0))
}
function ee(e, t, n, o, r) {
  return hv(ne(e, t, n, o, r, !0))
}
function tr(e) {
  return e ? e.__v_isVNode === !0 : !1
}
function On(e, t) {
  return e.type === t.type && e.key === t.key
}
const yv = ({ key: e }) => e ?? null,
  El = ({ ref: e, ref_key: t, ref_for: n }) => (
    typeof e == 'number' && (e = '' + e),
    e != null ? (Dt(e) || nt(e) || Ge(e) ? { i: Ot, r: e, k: t, f: !!n } : e) : null
  )
function Y(e, t = null, n = null, o = 0, r = null, a = e === Te ? 0 : 1, l = !1, s = !1) {
  const i = {
    __v_isVNode: !0,
    __v_skip: !0,
    type: e,
    props: t,
    key: t && yv(t),
    ref: t && El(t),
    scopeId: Np,
    slotScopeIds: null,
    children: n,
    component: null,
    suspense: null,
    ssContent: null,
    ssFallback: null,
    dirs: null,
    transition: null,
    el: null,
    anchor: null,
    target: null,
    targetStart: null,
    targetAnchor: null,
    staticCount: 0,
    shapeFlag: a,
    patchFlag: o,
    dynamicProps: r,
    dynamicChildren: null,
    appContext: null,
    ctx: Ot,
  }
  return (
    s ? (Uu(i, n), a & 128 && e.normalize(i)) : n && (i.shapeFlag |= Dt(n) ? 8 : 16),
    Ir > 0 && !l && rn && (i.patchFlag > 0 || a & 6) && i.patchFlag !== 32 && rn.push(i),
    i
  )
}
const ne = Jb
function Jb(e, t = null, n = null, o = 0, r = null, a = !1) {
  if (((!e || e === Xp) && (e = It), tr(e))) {
    const s = wo(e, t, !0)
    return (
      n && Uu(s, n),
      Ir > 0 && !a && rn && (s.shapeFlag & 6 ? (rn[rn.indexOf(e)] = s) : rn.push(s)),
      (s.patchFlag = -2),
      s
    )
  }
  if ((az(e) && (e = e.__vccOpts), t)) {
    t = ke(t)
    let { class: s, style: i } = t
    s && !Dt(s) && (t.class = Pe(s)), Bt(i) && (Vu(i) && !tt(i) && (i = qt({}, i)), (t.style = me(i)))
  }
  const l = Dt(e) ? 1 : pv(e) ? 128 : Dp(e) ? 64 : Bt(e) ? 4 : Ge(e) ? 2 : 0
  return Y(e, t, n, o, r, l, a, !0)
}
function ke(e) {
  return e ? (Vu(e) || rv(e) ? qt({}, e) : e) : null
}
function wo(e, t, n = !1, o = !1) {
  const { props: r, ref: a, patchFlag: l, children: s, transition: i } = e,
    u = t ? le(r || {}, t) : r,
    c = {
      __v_isVNode: !0,
      __v_skip: !0,
      type: e.type,
      props: u,
      key: u && yv(u),
      ref: t && t.ref ? (n && a ? (tt(a) ? a.concat(El(t)) : [a, El(t)]) : El(t)) : a,
      scopeId: e.scopeId,
      slotScopeIds: e.slotScopeIds,
      children: s,
      target: e.target,
      targetStart: e.targetStart,
      targetAnchor: e.targetAnchor,
      staticCount: e.staticCount,
      shapeFlag: e.shapeFlag,
      patchFlag: t && e.type !== Te ? (l === -1 ? 16 : l | 16) : l,
      dynamicProps: e.dynamicProps,
      dynamicChildren: e.dynamicChildren,
      appContext: e.appContext,
      dirs: e.dirs,
      transition: i,
      component: e.component,
      suspense: e.suspense,
      ssContent: e.ssContent && wo(e.ssContent),
      ssFallback: e.ssFallback && wo(e.ssFallback),
      el: e.el,
      anchor: e.anchor,
      ctx: e.ctx,
      ce: e.ce,
    }
  return i && o && er(c, i.clone(c)), c
}
function Fe(e = ' ', t = 0) {
  return ne(ur, null, e, t)
}
function W(e = '', t = !1) {
  return t ? (C(), ee(It, null, e)) : ne(It, null, e)
}
function wn(e) {
  return e == null || typeof e == 'boolean'
    ? ne(It)
    : tt(e)
      ? ne(Te, null, e.slice())
      : typeof e == 'object'
        ? zo(e)
        : ne(ur, null, String(e))
}
function zo(e) {
  return (e.el === null && e.patchFlag !== -1) || e.memo ? e : wo(e)
}
function Uu(e, t) {
  let n = 0
  const { shapeFlag: o } = e
  if (t == null) t = null
  else if (tt(t)) n = 16
  else if (typeof t == 'object')
    if (o & 65) {
      const r = t.default
      r && (r._c && (r._d = !1), Uu(e, r()), r._c && (r._d = !0))
      return
    } else {
      n = 32
      const r = t._
      !r && !rv(t)
        ? (t._ctx = Ot)
        : r === 3 && Ot && (Ot.slots._ === 1 ? (t._ = 1) : ((t._ = 2), (e.patchFlag |= 1024)))
    }
  else
    Ge(t) ? ((t = { default: t, _ctx: Ot }), (n = 32)) : ((t = String(t)), o & 64 ? ((n = 16), (t = [Fe(t)])) : (n = 8))
  ;(e.children = t), (e.shapeFlag |= n)
}
function le(...e) {
  const t = {}
  for (let n = 0; n < e.length; n++) {
    const o = e[n]
    for (const r in o)
      if (r === 'class') t.class !== o.class && (t.class = Pe([t.class, o.class]))
      else if (r === 'style') t.style = me([t.style, o.style])
      else if (Eu(r)) {
        const a = t[r],
          l = o[r]
        l && a !== l && !(tt(a) && a.includes(l)) && (t[r] = a ? [].concat(a, l) : l)
      } else r !== '' && (t[r] = o[r])
  }
  return t
}
function En(e, t, n, o = null) {
  Vn(e, t, 7, [n, o])
}
const Qb = tv()
let Zb = 0
function ez(e, t, n) {
  const o = e.type,
    r = (t ? t.appContext : e.appContext) || Qb,
    a = {
      uid: Zb++,
      vnode: e,
      type: o,
      parent: t,
      appContext: r,
      root: null,
      next: null,
      subTree: null,
      effect: null,
      update: null,
      job: null,
      scope: new op(!0),
      render: null,
      proxy: null,
      exposed: null,
      exposeProxy: null,
      withProxy: null,
      provides: t ? t.provides : Object.create(r.provides),
      ids: t ? t.ids : ['', 0, 0],
      accessCache: null,
      renderCache: [],
      components: null,
      directives: null,
      propsOptions: lv(o, r),
      emitsOptions: fv(o, r),
      emit: null,
      emitted: null,
      propsDefaults: Ct,
      inheritAttrs: o.inheritAttrs,
      ctx: Ct,
      data: Ct,
      props: Ct,
      attrs: Ct,
      slots: Ct,
      refs: Ct,
      setupState: Ct,
      setupContext: null,
      suspense: n,
      suspenseId: n ? n.pendingId : 0,
      asyncDep: null,
      asyncResolved: !1,
      isMounted: !1,
      isUnmounted: !1,
      isDeactivated: !1,
      bc: null,
      c: null,
      bm: null,
      m: null,
      bu: null,
      u: null,
      um: null,
      bum: null,
      da: null,
      a: null,
      rtg: null,
      rtc: null,
      ec: null,
      sp: null,
    }
  return (a.ctx = { _: a }), (a.root = t ? t.root : a), (a.emit = Rb.bind(null, a)), e.ce && e.ce(a), a
}
let xt = null
const ct = () => xt || Ot
let jl, Mi
{
  const e = Ap(),
    t = (n, o) => {
      let r
      return (
        (r = e[n]) || (r = e[n] = []),
        r.push(o),
        (a) => {
          r.length > 1 ? r.forEach((l) => l(a)) : r[0](a)
        }
      )
    }
  ;(jl = t('__VUE_INSTANCE_SETTERS__', (n) => (xt = n))), (Mi = t('__VUE_SSR_SETTERS__', (n) => (Ga = n)))
}
const Wa = (e) => {
    const t = xt
    return (
      jl(e),
      e.scope.on(),
      () => {
        e.scope.off(), jl(t)
      }
    )
  },
  ld = () => {
    xt && xt.scope.off(), jl(null)
  }
function _v(e) {
  return e.vnode.shapeFlag & 4
}
let Ga = !1
function tz(e, t = !1, n = !1) {
  t && Mi(t)
  const { props: o, children: r } = e.vnode,
    a = _v(e)
  wb(e, o, a, t), Vb(e, r, n)
  const l = a ? nz(e, t) : void 0
  return t && Mi(!1), l
}
function nz(e, t) {
  const n = e.type
  ;(e.accessCache = Object.create(null)), (e.proxy = new Proxy(e.ctx, pb))
  const { setup: o } = n
  if (o) {
    const r = (e.setupContext = o.length > 1 ? zv(e) : null),
      a = Wa(e)
    Ao()
    const l = Ha(o, e, 0, [e.props, r])
    if ((Eo(), a(), Vp(l))) {
      if ((Pr(e) || Bu(e), l.then(ld, ld), t))
        return l
          .then((s) => {
            Fi(e, s, t)
          })
          .catch((s) => {
            Gr(s, e, 0)
          })
      e.asyncDep = l
    } else Fi(e, l, t)
  } else bv(e, t)
}
function Fi(e, t, n) {
  Ge(t) ? (e.type.__ssrInlineRender ? (e.ssrRender = t) : (e.render = t)) : Bt(t) && (e.setupState = Sp(t)), bv(e, n)
}
let sd
function bv(e, t, n) {
  const o = e.type
  if (!e.render) {
    if (!t && sd && !o.render) {
      const r = o.template || Du(e).template
      if (r) {
        const { isCustomElement: a, compilerOptions: l } = e.appContext.config,
          { delimiters: s, compilerOptions: i } = o,
          u = qt(qt({ isCustomElement: a, delimiters: s }, l), i)
        o.render = sd(r, u)
      }
    }
    e.render = o.render || Zn
  }
  {
    const r = Wa(e)
    Ao()
    try {
      gb(e)
    } finally {
      Eo(), r()
    }
  }
}
const oz = {
  get(e, t) {
    return Kt(e, 'get', ''), e[t]
  },
}
function zv(e) {
  const t = (n) => {
    e.exposed = n || {}
  }
  return { attrs: new Proxy(e.attrs, oz), slots: e.slots, emit: e.emit, expose: t }
}
function hs(e) {
  return e.exposed
    ? e.exposeProxy ||
        (e.exposeProxy = new Proxy(Sp(Pu(e.exposed)), {
          get(t, n) {
            if (n in t) return t[n]
            if (n in fa) return fa[n](e)
          },
          has(t, n) {
            return n in t || n in fa
          },
        }))
    : e.proxy
}
function rz(e, t = !0) {
  return Ge(e) ? e.displayName || e.name : e.name || (t && e.__name)
}
function az(e) {
  return Ge(e) && '__vccOpts' in e
}
const p = (e, t) => N_(e, t, Ga)
function Ze(e, t, n) {
  const o = arguments.length
  return o === 2
    ? Bt(t) && !tt(t)
      ? tr(t)
        ? ne(e, null, [t])
        : ne(e, t)
      : ne(e, null, t)
    : (o > 3 ? (n = Array.prototype.slice.call(arguments, 2)) : o === 3 && tr(n) && (n = [n]), ne(e, t, n))
}
const lz = '3.5.8'
/**
 * @vue/shared v3.5.8
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/ /*! #__NO_SIDE_EFFECTS__ */ function sz(e) {
  const t = Object.create(null)
  for (const n of e.split(',')) t[n] = 1
  return (n) => n in t
}
const iz = (e) => e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && (e.charCodeAt(2) > 122 || e.charCodeAt(2) < 97),
  uz = (e) => e.startsWith('onUpdate:'),
  ys = Object.assign,
  Nn = Array.isArray,
  _s = (e) => Sv(e) === '[object Set]',
  id = (e) => Sv(e) === '[object Date]',
  Cv = (e) => typeof e == 'function',
  xr = (e) => typeof e == 'string',
  ji = (e) => typeof e == 'symbol',
  Hi = (e) => e !== null && typeof e == 'object',
  cz = Object.prototype.toString,
  Sv = (e) => cz.call(e),
  wv = (e) => {
    const t = Object.create(null)
    return (n) => t[n] || (t[n] = e(n))
  },
  dz = /\B([A-Z])/g,
  Wu = wv((e) => e.replace(dz, '-$1').toLowerCase()),
  mz = wv((e) => e.charAt(0).toUpperCase() + e.slice(1)),
  fz = (e, ...t) => {
    for (let n = 0; n < e.length; n++) e[n](...t)
  },
  Ui = (e) => {
    const t = parseFloat(e)
    return isNaN(t) ? e : t
  },
  pz = (e) => {
    const t = xr(e) ? Number(e) : NaN
    return isNaN(t) ? e : t
  },
  vz = 'itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly',
  gz = sz(vz)
function $v(e) {
  return !!e || e === ''
}
function hz(e, t) {
  if (e.length !== t.length) return !1
  let n = !0
  for (let o = 0; n && o < e.length; o++) n = nr(e[o], t[o])
  return n
}
function nr(e, t) {
  if (e === t) return !0
  let n = id(e),
    o = id(t)
  if (n || o) return n && o ? e.getTime() === t.getTime() : !1
  if (((n = ji(e)), (o = ji(t)), n || o)) return e === t
  if (((n = Nn(e)), (o = Nn(t)), n || o)) return n && o ? hz(e, t) : !1
  if (((n = Hi(e)), (o = Hi(t)), n || o)) {
    if (!n || !o) return !1
    const r = Object.keys(e).length,
      a = Object.keys(t).length
    if (r !== a) return !1
    for (const l in e) {
      const s = e.hasOwnProperty(l),
        i = t.hasOwnProperty(l)
      if ((s && !i) || (!s && i) || !nr(e[l], t[l])) return !1
    }
  }
  return String(e) === String(t)
}
function Gu(e, t) {
  return e.findIndex((n) => nr(n, t))
}
/**
 * @vue/runtime-dom v3.5.8
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/ let Wi
const ud = typeof window < 'u' && window.trustedTypes
if (ud)
  try {
    Wi = ud.createPolicy('vue', { createHTML: (e) => e })
  } catch {}
const kv = Wi ? (e) => Wi.createHTML(e) : (e) => e,
  yz = 'http://www.w3.org/2000/svg',
  _z = 'http://www.w3.org/1998/Math/MathML',
  Kn = typeof document < 'u' ? document : null,
  cd = Kn && Kn.createElement('template'),
  bz = {
    insert: (e, t, n) => {
      t.insertBefore(e, n || null)
    },
    remove: (e) => {
      const t = e.parentNode
      t && t.removeChild(e)
    },
    createElement: (e, t, n, o) => {
      const r =
        t === 'svg'
          ? Kn.createElementNS(yz, e)
          : t === 'mathml'
            ? Kn.createElementNS(_z, e)
            : n
              ? Kn.createElement(e, { is: n })
              : Kn.createElement(e)
      return e === 'select' && o && o.multiple != null && r.setAttribute('multiple', o.multiple), r
    },
    createText: (e) => Kn.createTextNode(e),
    createComment: (e) => Kn.createComment(e),
    setText: (e, t) => {
      e.nodeValue = t
    },
    setElementText: (e, t) => {
      e.textContent = t
    },
    parentNode: (e) => e.parentNode,
    nextSibling: (e) => e.nextSibling,
    querySelector: (e) => Kn.querySelector(e),
    setScopeId(e, t) {
      e.setAttribute(t, '')
    },
    insertStaticContent(e, t, n, o, r, a) {
      const l = n ? n.previousSibling : t.lastChild
      if (r && (r === a || r.nextSibling))
        for (; t.insertBefore(r.cloneNode(!0), n), !(r === a || !(r = r.nextSibling)); );
      else {
        cd.innerHTML = kv(o === 'svg' ? `<svg>${e}</svg>` : o === 'mathml' ? `<math>${e}</math>` : e)
        const s = cd.content
        if (o === 'svg' || o === 'mathml') {
          const i = s.firstChild
          for (; i.firstChild; ) s.appendChild(i.firstChild)
          s.removeChild(i)
        }
        t.insertBefore(s, n)
      }
      return [l ? l.nextSibling : t.firstChild, n ? n.previousSibling : t.lastChild]
    },
  },
  mo = 'transition',
  ta = 'animation',
  Or = Symbol('_vtc'),
  Tv = {
    name: String,
    type: String,
    css: { type: Boolean, default: !0 },
    duration: [String, Number, Object],
    enterFromClass: String,
    enterActiveClass: String,
    enterToClass: String,
    appearFromClass: String,
    appearActiveClass: String,
    appearToClass: String,
    leaveFromClass: String,
    leaveActiveClass: String,
    leaveToClass: String,
  },
  Vv = ys({}, jp, Tv),
  zz = (e) => ((e.displayName = 'Transition'), (e.props = Vv), e),
  Ka = zz((e, { slots: t }) => Ze(sb, Pv(e), t)),
  Fo = (e, t = []) => {
    Nn(e) ? e.forEach((n) => n(...t)) : e && e(...t)
  },
  dd = (e) => (e ? (Nn(e) ? e.some((t) => t.length > 1) : e.length > 1) : !1)
function Pv(e) {
  const t = {}
  for (const j in e) j in Tv || (t[j] = e[j])
  if (e.css === !1) return t
  const {
      name: n = 'v',
      type: o,
      duration: r,
      enterFromClass: a = `${n}-enter-from`,
      enterActiveClass: l = `${n}-enter-active`,
      enterToClass: s = `${n}-enter-to`,
      appearFromClass: i = a,
      appearActiveClass: u = l,
      appearToClass: c = s,
      leaveFromClass: d = `${n}-leave-from`,
      leaveActiveClass: m = `${n}-leave-active`,
      leaveToClass: v = `${n}-leave-to`,
    } = e,
    g = Cz(r),
    h = g && g[0],
    _ = g && g[1],
    {
      onBeforeEnter: y,
      onEnter: b,
      onEnterCancelled: w,
      onLeave: S,
      onLeaveCancelled: $,
      onBeforeAppear: k = y,
      onAppear: z = b,
      onAppearCancelled: V = w,
    } = t,
    T = (j, U, D) => {
      ho(j, U ? c : s), ho(j, U ? u : l), D && D()
    },
    B = (j, U) => {
      ;(j._isLeaving = !1), ho(j, d), ho(j, v), ho(j, m), U && U()
    },
    K = (j) => (U, D) => {
      const O = j ? z : b,
        R = () => T(U, j, D)
      Fo(O, [U, R]),
        md(() => {
          ho(U, j ? i : a), Gn(U, j ? c : s), dd(O) || fd(U, o, h, R)
        })
    }
  return ys(t, {
    onBeforeEnter(j) {
      Fo(y, [j]), Gn(j, a), Gn(j, l)
    },
    onBeforeAppear(j) {
      Fo(k, [j]), Gn(j, i), Gn(j, u)
    },
    onEnter: K(!1),
    onAppear: K(!0),
    onLeave(j, U) {
      j._isLeaving = !0
      const D = () => B(j, U)
      Gn(j, d),
        Gn(j, m),
        Ev(),
        md(() => {
          j._isLeaving && (ho(j, d), Gn(j, v), dd(S) || fd(j, o, _, D))
        }),
        Fo(S, [j, D])
    },
    onEnterCancelled(j) {
      T(j, !1), Fo(w, [j])
    },
    onAppearCancelled(j) {
      T(j, !0), Fo(V, [j])
    },
    onLeaveCancelled(j) {
      B(j), Fo($, [j])
    },
  })
}
function Cz(e) {
  if (e == null) return null
  if (Hi(e)) return [ai(e.enter), ai(e.leave)]
  {
    const t = ai(e)
    return [t, t]
  }
}
function ai(e) {
  return pz(e)
}
function Gn(e, t) {
  t.split(/\s+/).forEach((n) => n && e.classList.add(n)), (e[Or] || (e[Or] = new Set())).add(t)
}
function ho(e, t) {
  t.split(/\s+/).forEach((o) => o && e.classList.remove(o))
  const n = e[Or]
  n && (n.delete(t), n.size || (e[Or] = void 0))
}
function md(e) {
  requestAnimationFrame(() => {
    requestAnimationFrame(e)
  })
}
let Sz = 0
function fd(e, t, n, o) {
  const r = (e._endId = ++Sz),
    a = () => {
      r === e._endId && o()
    }
  if (n != null) return setTimeout(a, n)
  const { type: l, timeout: s, propCount: i } = Av(e, t)
  if (!l) return o()
  const u = l + 'end'
  let c = 0
  const d = () => {
      e.removeEventListener(u, m), a()
    },
    m = (v) => {
      v.target === e && ++c >= i && d()
    }
  setTimeout(() => {
    c < i && d()
  }, s + 1),
    e.addEventListener(u, m)
}
function Av(e, t) {
  const n = window.getComputedStyle(e),
    o = (g) => (n[g] || '').split(', '),
    r = o(`${mo}Delay`),
    a = o(`${mo}Duration`),
    l = pd(r, a),
    s = o(`${ta}Delay`),
    i = o(`${ta}Duration`),
    u = pd(s, i)
  let c = null,
    d = 0,
    m = 0
  t === mo
    ? l > 0 && ((c = mo), (d = l), (m = a.length))
    : t === ta
      ? u > 0 && ((c = ta), (d = u), (m = i.length))
      : ((d = Math.max(l, u)), (c = d > 0 ? (l > u ? mo : ta) : null), (m = c ? (c === mo ? a.length : i.length) : 0))
  const v = c === mo && /\b(transform|all)(,|$)/.test(o(`${mo}Property`).toString())
  return { type: c, timeout: d, propCount: m, hasTransform: v }
}
function pd(e, t) {
  for (; e.length < t.length; ) e = e.concat(e)
  return Math.max(...t.map((n, o) => vd(n) + vd(e[o])))
}
function vd(e) {
  return e === 'auto' ? 0 : Number(e.slice(0, -1).replace(',', '.')) * 1e3
}
function Ev() {
  return document.body.offsetHeight
}
function wz(e, t, n) {
  const o = e[Or]
  o && (t = (t ? [t, ...o] : [...o]).join(' ')),
    t == null ? e.removeAttribute('class') : n ? e.setAttribute('class', t) : (e.className = t)
}
const Hl = Symbol('_vod'),
  Iv = Symbol('_vsh'),
  Aa = {
    beforeMount(e, { value: t }, { transition: n }) {
      ;(e[Hl] = e.style.display === 'none' ? '' : e.style.display), n && t ? n.beforeEnter(e) : na(e, t)
    },
    mounted(e, { value: t }, { transition: n }) {
      n && t && n.enter(e)
    },
    updated(e, { value: t, oldValue: n }, { transition: o }) {
      !t != !n &&
        (o
          ? t
            ? (o.beforeEnter(e), na(e, !0), o.enter(e))
            : o.leave(e, () => {
                na(e, !1)
              })
          : na(e, t))
    },
    beforeUnmount(e, { value: t }) {
      na(e, t)
    },
  }
function na(e, t) {
  ;(e.style.display = t ? e[Hl] : 'none'), (e[Iv] = !t)
}
const $z = Symbol(''),
  kz = /(^|;)\s*display\s*:/
function Tz(e, t, n) {
  const o = e.style,
    r = xr(n)
  let a = !1
  if (n && !r) {
    if (t)
      if (xr(t))
        for (const l of t.split(';')) {
          const s = l.slice(0, l.indexOf(':')).trim()
          n[s] == null && Il(o, s, '')
        }
      else for (const l in t) n[l] == null && Il(o, l, '')
    for (const l in n) l === 'display' && (a = !0), Il(o, l, n[l])
  } else if (r) {
    if (t !== n) {
      const l = o[$z]
      l && (n += ';' + l), (o.cssText = n), (a = kz.test(n))
    }
  } else t && e.removeAttribute('style')
  Hl in e && ((e[Hl] = a ? o.display : ''), e[Iv] && (o.display = 'none'))
}
const gd = /\s*!important$/
function Il(e, t, n) {
  if (Nn(n)) n.forEach((o) => Il(e, t, o))
  else if ((n == null && (n = ''), t.startsWith('--'))) e.setProperty(t, n)
  else {
    const o = Vz(e, t)
    gd.test(n) ? e.setProperty(Wu(o), n.replace(gd, ''), 'important') : (e[o] = n)
  }
}
const hd = ['Webkit', 'Moz', 'ms'],
  li = {}
function Vz(e, t) {
  const n = li[t]
  if (n) return n
  let o = Tn(t)
  if (o !== 'filter' && o in e) return (li[t] = o)
  o = mz(o)
  for (let r = 0; r < hd.length; r++) {
    const a = hd[r] + o
    if (a in e) return (li[t] = a)
  }
  return t
}
const yd = 'http://www.w3.org/1999/xlink'
function _d(e, t, n, o, r, a = gz(t)) {
  o && t.startsWith('xlink:')
    ? n == null
      ? e.removeAttributeNS(yd, t.slice(6, t.length))
      : e.setAttributeNS(yd, t, n)
    : n == null || (a && !$v(n))
      ? e.removeAttribute(t)
      : e.setAttribute(t, a ? '' : ji(n) ? String(n) : n)
}
function Pz(e, t, n, o) {
  if (t === 'innerHTML' || t === 'textContent') {
    n != null && (e[t] = t === 'innerHTML' ? kv(n) : n)
    return
  }
  const r = e.tagName
  if (t === 'value' && r !== 'PROGRESS' && !r.includes('-')) {
    const l = r === 'OPTION' ? e.getAttribute('value') || '' : e.value,
      s = n == null ? (e.type === 'checkbox' ? 'on' : '') : String(n)
    ;(l !== s || !('_value' in e)) && (e.value = s), n == null && e.removeAttribute(t), (e._value = n)
    return
  }
  let a = !1
  if (n === '' || n == null) {
    const l = typeof e[t]
    l === 'boolean'
      ? (n = $v(n))
      : n == null && l === 'string'
        ? ((n = ''), (a = !0))
        : l === 'number' && ((n = 0), (a = !0))
  }
  try {
    e[t] = n
  } catch {}
  a && e.removeAttribute(t)
}
function Yn(e, t, n, o) {
  e.addEventListener(t, n, o)
}
function Az(e, t, n, o) {
  e.removeEventListener(t, n, o)
}
const bd = Symbol('_vei')
function Ez(e, t, n, o, r = null) {
  const a = e[bd] || (e[bd] = {}),
    l = a[t]
  if (o && l) l.value = o
  else {
    const [s, i] = Iz(t)
    if (o) {
      const u = (a[t] = Lz(o, r))
      Yn(e, s, u, i)
    } else l && (Az(e, s, l, i), (a[t] = void 0))
  }
}
const zd = /(?:Once|Passive|Capture)$/
function Iz(e) {
  let t
  if (zd.test(e)) {
    t = {}
    let o
    for (; (o = e.match(zd)); ) (e = e.slice(0, e.length - o[0].length)), (t[o[0].toLowerCase()] = !0)
  }
  return [e[2] === ':' ? e.slice(3) : Wu(e.slice(2)), t]
}
let si = 0
const xz = Promise.resolve(),
  Oz = () => si || (xz.then(() => (si = 0)), (si = Date.now()))
function Lz(e, t) {
  const n = (o) => {
    if (!o._vts) o._vts = Date.now()
    else if (o._vts <= n.attached) return
    Vn(Bz(o, n.value), t, 5, [o])
  }
  return (n.value = e), (n.attached = Oz()), n
}
function Bz(e, t) {
  if (Nn(t)) {
    const n = e.stopImmediatePropagation
    return (
      (e.stopImmediatePropagation = () => {
        n.call(e), (e._stopped = !0)
      }),
      t.map((o) => (r) => !r._stopped && o && o(r))
    )
  } else return t
}
const Cd = (e) => e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) > 96 && e.charCodeAt(2) < 123,
  Nz = (e, t, n, o, r, a) => {
    const l = r === 'svg'
    t === 'class'
      ? wz(e, o, l)
      : t === 'style'
        ? Tz(e, n, o)
        : iz(t)
          ? uz(t) || Ez(e, t, n, o, a)
          : (t[0] === '.' ? ((t = t.slice(1)), !0) : t[0] === '^' ? ((t = t.slice(1)), !1) : Rz(e, t, o, l))
            ? (Pz(e, t, o),
              !e.tagName.includes('-') &&
                (t === 'value' || t === 'checked' || t === 'selected') &&
                _d(e, t, o, l, a, t !== 'value'))
            : (t === 'true-value' ? (e._trueValue = o) : t === 'false-value' && (e._falseValue = o), _d(e, t, o, l))
  }
function Rz(e, t, n, o) {
  if (o) return !!(t === 'innerHTML' || t === 'textContent' || (t in e && Cd(t) && Cv(n)))
  if (
    t === 'spellcheck' ||
    t === 'draggable' ||
    t === 'translate' ||
    t === 'form' ||
    (t === 'list' && e.tagName === 'INPUT') ||
    (t === 'type' && e.tagName === 'TEXTAREA')
  )
    return !1
  if (t === 'width' || t === 'height') {
    const r = e.tagName
    if (r === 'IMG' || r === 'VIDEO' || r === 'CANVAS' || r === 'SOURCE') return !1
  }
  return Cd(t) && xr(n) ? !1 : !!(t in e || (e._isVueCE && (/[A-Z]/.test(t) || !xr(n))))
}
const xv = new WeakMap(),
  Ov = new WeakMap(),
  Ul = Symbol('_moveCb'),
  Sd = Symbol('_enterCb'),
  Dz = (e) => (delete e.props.mode, e),
  Mz = Dz({
    name: 'TransitionGroup',
    props: ys({}, Vv, { tag: String, moveClass: String }),
    setup(e, { slots: t }) {
      const n = ct(),
        o = Fp()
      let r, a
      return (
        ps(() => {
          if (!r.length) return
          const l = e.moveClass || `${e.name || 'v'}-move`
          if (!Wz(r[0].el, n.vnode.el, l)) return
          r.forEach(jz), r.forEach(Hz)
          const s = r.filter(Uz)
          Ev(),
            s.forEach((i) => {
              const u = i.el,
                c = u.style
              Gn(u, l), (c.transform = c.webkitTransform = c.transitionDuration = '')
              const d = (u[Ul] = (m) => {
                ;(m && m.target !== u) ||
                  ((!m || /transform$/.test(m.propertyName)) &&
                    (u.removeEventListener('transitionend', d), (u[Ul] = null), ho(u, l)))
              })
              u.addEventListener('transitionend', d)
            })
        }),
        () => {
          const l = at(e),
            s = Pv(l)
          let i = l.tag || Te
          if (((r = []), a))
            for (let u = 0; u < a.length; u++) {
              const c = a[u]
              c.el &&
                c.el instanceof Element &&
                (r.push(c), er(c, Va(c, s, o, n)), xv.set(c, c.el.getBoundingClientRect()))
            }
          a = t.default ? Lu(t.default()) : []
          for (let u = 0; u < a.length; u++) {
            const c = a[u]
            c.key != null && er(c, Va(c, s, o, n))
          }
          return ne(i, null, a)
        }
      )
    },
  }),
  Fz = Mz
function jz(e) {
  const t = e.el
  t[Ul] && t[Ul](), t[Sd] && t[Sd]()
}
function Hz(e) {
  Ov.set(e, e.el.getBoundingClientRect())
}
function Uz(e) {
  const t = xv.get(e),
    n = Ov.get(e),
    o = t.left - n.left,
    r = t.top - n.top
  if (o || r) {
    const a = e.el.style
    return (a.transform = a.webkitTransform = `translate(${o}px,${r}px)`), (a.transitionDuration = '0s'), e
  }
}
function Wz(e, t, n) {
  const o = e.cloneNode(),
    r = e[Or]
  r &&
    r.forEach((s) => {
      s.split(/\s+/).forEach((i) => i && o.classList.remove(i))
    }),
    n.split(/\s+/).forEach((s) => s && o.classList.add(s)),
    (o.style.display = 'none')
  const a = t.nodeType === 1 ? t : t.parentNode
  a.appendChild(o)
  const { hasTransform: l } = Av(o)
  return a.removeChild(o), l
}
const $o = (e) => {
  const t = e.props['onUpdate:modelValue'] || !1
  return Nn(t) ? (n) => fz(t, n) : t
}
function Gz(e) {
  e.target.composing = !0
}
function wd(e) {
  const t = e.target
  t.composing && ((t.composing = !1), t.dispatchEvent(new Event('input')))
}
const bn = Symbol('_assign'),
  Wl = {
    created(e, { modifiers: { lazy: t, trim: n, number: o } }, r) {
      e[bn] = $o(r)
      const a = o || (r.props && r.props.type === 'number')
      Yn(e, t ? 'change' : 'input', (l) => {
        if (l.target.composing) return
        let s = e.value
        n && (s = s.trim()), a && (s = Ui(s)), e[bn](s)
      }),
        n &&
          Yn(e, 'change', () => {
            e.value = e.value.trim()
          }),
        t || (Yn(e, 'compositionstart', Gz), Yn(e, 'compositionend', wd), Yn(e, 'change', wd))
    },
    mounted(e, { value: t }) {
      e.value = t ?? ''
    },
    beforeUpdate(e, { value: t, oldValue: n, modifiers: { lazy: o, trim: r, number: a } }, l) {
      if (((e[bn] = $o(l)), e.composing)) return
      const s = (a || e.type === 'number') && !/^0\d/.test(e.value) ? Ui(e.value) : e.value,
        i = t ?? ''
      s !== i &&
        ((document.activeElement === e && e.type !== 'range' && ((o && t === n) || (r && e.value.trim() === i))) ||
          (e.value = i))
    },
  },
  Kz = {
    deep: !0,
    created(e, t, n) {
      ;(e[bn] = $o(n)),
        Yn(e, 'change', () => {
          const o = e._modelValue,
            r = Lr(e),
            a = e.checked,
            l = e[bn]
          if (Nn(o)) {
            const s = Gu(o, r),
              i = s !== -1
            if (a && !i) l(o.concat(r))
            else if (!a && i) {
              const u = [...o]
              u.splice(s, 1), l(u)
            }
          } else if (_s(o)) {
            const s = new Set(o)
            a ? s.add(r) : s.delete(r), l(s)
          } else l(Lv(e, a))
        })
    },
    mounted: $d,
    beforeUpdate(e, t, n) {
      ;(e[bn] = $o(n)), $d(e, t, n)
    },
  }
function $d(e, { value: t, oldValue: n }, o) {
  e._modelValue = t
  let r
  Nn(t) ? (r = Gu(t, o.props.value) > -1) : _s(t) ? (r = t.has(o.props.value)) : (r = nr(t, Lv(e, !0))),
    e.checked !== r && (e.checked = r)
}
const qz = {
    created(e, { value: t }, n) {
      ;(e.checked = nr(t, n.props.value)),
        (e[bn] = $o(n)),
        Yn(e, 'change', () => {
          e[bn](Lr(e))
        })
    },
    beforeUpdate(e, { value: t, oldValue: n }, o) {
      ;(e[bn] = $o(o)), t !== n && (e.checked = nr(t, o.props.value))
    },
  },
  Yz = {
    deep: !0,
    created(e, { value: t, modifiers: { number: n } }, o) {
      const r = _s(t)
      Yn(e, 'change', () => {
        const a = Array.prototype.filter.call(e.options, (l) => l.selected).map((l) => (n ? Ui(Lr(l)) : Lr(l)))
        e[bn](e.multiple ? (r ? new Set(a) : a) : a[0]),
          (e._assigning = !0),
          dt(() => {
            e._assigning = !1
          })
      }),
        (e[bn] = $o(o))
    },
    mounted(e, { value: t, modifiers: { number: n } }) {
      kd(e, t)
    },
    beforeUpdate(e, t, n) {
      e[bn] = $o(n)
    },
    updated(e, { value: t, modifiers: { number: n } }) {
      e._assigning || kd(e, t)
    },
  }
function kd(e, t, n) {
  const o = e.multiple,
    r = Nn(t)
  if (!(o && !r && !_s(t))) {
    for (let a = 0, l = e.options.length; a < l; a++) {
      const s = e.options[a],
        i = Lr(s)
      if (o)
        if (r) {
          const u = typeof i
          u === 'string' || u === 'number'
            ? (s.selected = t.some((c) => String(c) === String(i)))
            : (s.selected = Gu(t, i) > -1)
        } else s.selected = t.has(i)
      else if (nr(Lr(s), t)) {
        e.selectedIndex !== a && (e.selectedIndex = a)
        return
      }
    }
    !o && e.selectedIndex !== -1 && (e.selectedIndex = -1)
  }
}
function Lr(e) {
  return '_value' in e ? e._value : e.value
}
function Lv(e, t) {
  const n = t ? '_trueValue' : '_falseValue'
  return n in e ? e[n] : t
}
const bs = {
  created(e, t, n) {
    yl(e, t, n, null, 'created')
  },
  mounted(e, t, n) {
    yl(e, t, n, null, 'mounted')
  },
  beforeUpdate(e, t, n, o) {
    yl(e, t, n, o, 'beforeUpdate')
  },
  updated(e, t, n, o) {
    yl(e, t, n, o, 'updated')
  },
}
function Xz(e, t) {
  switch (e) {
    case 'SELECT':
      return Yz
    case 'TEXTAREA':
      return Wl
    default:
      switch (t) {
        case 'checkbox':
          return Kz
        case 'radio':
          return qz
        default:
          return Wl
      }
  }
}
function yl(e, t, n, o, r) {
  const l = Xz(e.tagName, n.props && n.props.type)[r]
  l && l(e, t, n, o)
}
const Jz = ['ctrl', 'shift', 'alt', 'meta'],
  Qz = {
    stop: (e) => e.stopPropagation(),
    prevent: (e) => e.preventDefault(),
    self: (e) => e.target !== e.currentTarget,
    ctrl: (e) => !e.ctrlKey,
    shift: (e) => !e.shiftKey,
    alt: (e) => !e.altKey,
    meta: (e) => !e.metaKey,
    left: (e) => 'button' in e && e.button !== 0,
    middle: (e) => 'button' in e && e.button !== 1,
    right: (e) => 'button' in e && e.button !== 2,
    exact: (e, t) => Jz.some((n) => e[`${n}Key`] && !t.includes(n)),
  },
  Se = (e, t) => {
    const n = e._withMods || (e._withMods = {}),
      o = t.join('.')
    return (
      n[o] ||
      (n[o] = (r, ...a) => {
        for (let l = 0; l < t.length; l++) {
          const s = Qz[t[l]]
          if (s && s(r, t)) return
        }
        return e(r, ...a)
      })
    )
  },
  Zz = {
    esc: 'escape',
    space: ' ',
    up: 'arrow-up',
    left: 'arrow-left',
    right: 'arrow-right',
    down: 'arrow-down',
    delete: 'backspace',
  },
  $e = (e, t) => {
    const n = e._withKeys || (e._withKeys = {}),
      o = t.join('.')
    return (
      n[o] ||
      (n[o] = (r) => {
        if (!('key' in r)) return
        const a = Wu(r.key)
        if (t.some((l) => l === a || Zz[l] === a)) return e(r)
      })
    )
  },
  e0 = ys({ patchProp: Nz }, bz)
let Td
function Bv() {
  return Td || (Td = Ab(e0))
}
const Ea = (...e) => {
    Bv().render(...e)
  },
  t0 = (...e) => {
    const t = Bv().createApp(...e),
      { mount: n } = t
    return (
      (t.mount = (o) => {
        const r = o0(o)
        if (!r) return
        const a = t._component
        !Cv(a) && !a.render && !a.template && (a.template = r.innerHTML), r.nodeType === 1 && (r.textContent = '')
        const l = n(r, !1, n0(r))
        return r instanceof Element && (r.removeAttribute('v-cloak'), r.setAttribute('data-v-app', '')), l
      }),
      t
    )
  }
function n0(e) {
  if (e instanceof SVGElement) return 'svg'
  if (typeof MathMLElement == 'function' && e instanceof MathMLElement) return 'mathml'
}
function o0(e) {
  return xr(e) ? document.querySelector(e) : e
}
const cr = (e, t) => {
    const n = e.__vccOpts || e
    for (const [o, r] of t) n[o] = r
    return n
  },
  r0 = {}
function a0(e, t) {
  const n = Je('RouterView')
  return C(), ee(n)
}
const l0 = cr(r0, [['render', a0]]),
  s0 = {
    auth: {
      agree: (e) => {
        const { normalize: t } = e
        return t(['Eu aceito.'])
      },
      createAccount: (e) => {
        const { normalize: t } = e
        return t(['Criar conta'])
      },
      createNewAccount: (e) => {
        const { normalize: t } = e
        return t(['Criar uma nova conta'])
      },
      email: (e) => {
        const { normalize: t } = e
        return t(['Email'])
      },
      login: (e) => {
        const { normalize: t } = e
        return t(['Entrar'])
      },
      password: (e) => {
        const { normalize: t } = e
        return t(['Senha'])
      },
      recover_password: (e) => {
        const { normalize: t } = e
        return t(['Recuperar senha'])
      },
      sign_up: (e) => {
        const { normalize: t } = e
        return t(['Cadastrar-se'])
      },
      keep_logged_in: (e) => {
        const { normalize: t } = e
        return t(['Mantenha-me conectado'])
      },
      termsOfUse: (e) => {
        const { normalize: t } = e
        return t(['Termos de uso.'])
      },
      reset_password: (e) => {
        const { normalize: t } = e
        return t(['Redefinir senha'])
      },
    },
    404: {
      title: (e) => {
        const { normalize: t } = e
        return t(['Esta página está pescando.'])
      },
      text: (e) => {
        const { normalize: t } = e
        return t(['Se você acha que isso não está certo, envie-nos uma mensagem em '])
      },
      back_button: (e) => {
        const { normalize: t } = e
        return t(['Voltar para o painel'])
      },
    },
    typography: {
      primary: (e) => {
        const { normalize: t } = e
        return t(['Estilos de texto primários'])
      },
      secondary: (e) => {
        const { normalize: t } = e
        return t(['Estilos de texto secundários'])
      },
    },
    dashboard: {
      title: (e) => {
        const { normalize: t } = e
        return t(['Painel de Controle'])
      },
      versions: (e) => {
        const { normalize: t } = e
        return t(['Versões'])
      },
      setupRemoteConnections: (e) => {
        const { normalize: t } = e
        return t(['Configurar Conexões Remotas'])
      },
      currentVisitors: (e) => {
        const { normalize: t } = e
        return t(['Visitantes Atuais'])
      },
      metrics: {
        openInvoices: (e) => {
          const { normalize: t } = e
          return t(['Faturas Abertas'])
        },
        ongoingProjects: (e) => {
          const { normalize: t } = e
          return t(['Materiais em Andamento'])
        },
        employees: (e) => {
          const { normalize: t } = e
          return t(['Funcionários'])
        },
        newProfit: (e) => {
          const { normalize: t } = e
          return t(['Novo Lucro'])
        },
      },
      cards: {
        revenueReport: (e) => {
          const { normalize: t } = e
          return t(['Relatório de Receita'])
        },
        yearlyBreakup: (e) => {
          const { normalize: t } = e
          return t(['Divisão Anual'])
        },
        monthlyEarnings: (e) => {
          const { normalize: t } = e
          return t(['Ganhos Mensais'])
        },
        revenueByLocation: (e) => {
          const { normalize: t } = e
          return t(['Receita por Localização'])
        },
        revenueByTopRegions: (e) => {
          const { normalize: t } = e
          return t(['Receita por Principais Regiões'])
        },
        regionRevenue: (e) => {
          const { normalize: t } = e
          return t(['Receita Regional'])
        },
        projectTable: (e) => {
          const { normalize: t } = e
          return t(['Gestão de Materiais'])
        },
        timeline: (e) => {
          const { normalize: t } = e
          return t(['Cronograma'])
        },
        countries: (e) => {
          const { normalize: t } = e
          return t(['Países'])
        },
        totalEarnings: (e) => {
          const { normalize: t } = e
          return t(['Ganhos Totais'])
        },
        earningsThisMonth: (e) => {
          const { normalize: t } = e
          return t(['Ganhos este mês'])
        },
        expensesThisMonth: (e) => {
          const { normalize: t } = e
          return t(['Despesas este mês'])
        },
        export: (e) => {
          const { normalize: t } = e
          return t(['Exportar'])
        },
        lastYear: (e) => {
          const { normalize: t } = e
          return t(['ano passado'])
        },
        lastMonth: (e) => {
          const { normalize: t } = e
          return t(['mês passado'])
        },
        earnings: (e) => {
          const { normalize: t } = e
          return t(['Ganhos'])
        },
        profit: (e) => {
          const { normalize: t } = e
          return t(['Lucro'])
        },
        expenses: (e) => {
          const { normalize: t } = e
          return t(['Despesas'])
        },
        viewAllProjects: (e) => {
          const { normalize: t } = e
          return t(['Ver todos os materiais'])
        },
      },
      table: {
        name: (e) => {
          const { normalize: t } = e
          return t(['Nome'])
        },
        status: (e) => {
          const { normalize: t } = e
          return t(['Status'])
        },
        team: (e) => {
          const { normalize: t } = e
          return t(['Equipe'])
        },
        topRegion: (e) => {
          const { normalize: t } = e
          return t(['Região Principal'])
        },
        revenue: (e) => {
          const { normalize: t } = e
          return t(['Receita'])
        },
      },
      time: {
        today: (e) => {
          const { normalize: t } = e
          return t(['Hoje'])
        },
        week: (e) => {
          const { normalize: t } = e
          return t(['Semana'])
        },
        month: (e) => {
          const { normalize: t } = e
          return t(['Mês'])
        },
        sinceLastMonth: (e) => {
          const { normalize: t } = e
          return t(['desde o mês passado'])
        },
      },
      timeline: {
        updatedStatus: (e) => {
          const { normalize: t } = e
          return t(['atualizou o status de'])
        },
        awaitingResponse: (e) => {
          const { normalize: t } = e
          return t(['aguardando resposta do cliente'])
        },
        addedToGroup: (e) => {
          const { normalize: t } = e
          return t(['foi adicionado ao grupo'])
        },
        groupName: (e) => {
          const { normalize: t } = e
          return t(['o nome do grupo é'])
        },
        openedShowcase: (e) => {
          const { normalize: t } = e
          return t(['abriu nova vitrine'])
        },
        withTheme: (e) => {
          const { normalize: t } = e
          return t(['com tema de mercado'])
        },
        updatedStatusTo: (e) => {
          const { normalize: t } = e
          return t(['atualizou o status para'])
        },
        projectCreated: (e) => {
          const { normalize: t } = e
          return t(['Projeto'])
        },
        wasCreated: (e) => {
          const { normalize: t } = e
          return t(['foi criado'])
        },
      },
      actions: {
        export: (e) => {
          const { normalize: t } = e
          return t(['Exportar'])
        },
      },
      months: {
        jan: (e) => {
          const { normalize: t } = e
          return t(['Janeiro'])
        },
        feb: (e) => {
          const { normalize: t } = e
          return t(['Fevereiro'])
        },
        mar: (e) => {
          const { normalize: t } = e
          return t(['Março'])
        },
        apr: (e) => {
          const { normalize: t } = e
          return t(['Abril'])
        },
        may: (e) => {
          const { normalize: t } = e
          return t(['Maio'])
        },
        jun: (e) => {
          const { normalize: t } = e
          return t(['Junho'])
        },
        jul: (e) => {
          const { normalize: t } = e
          return t(['Julho'])
        },
        aug: (e) => {
          const { normalize: t } = e
          return t(['Agosto'])
        },
        sep: (e) => {
          const { normalize: t } = e
          return t(['Setembro'])
        },
        oct: (e) => {
          const { normalize: t } = e
          return t(['Outubro'])
        },
        nov: (e) => {
          const { normalize: t } = e
          return t(['Novembro'])
        },
        dec: (e) => {
          const { normalize: t } = e
          return t(['Dezembro'])
        },
      },
      charts: {
        trendyTrends: (e) => {
          const { normalize: t } = e
          return t(['Tendências na moda'])
        },
        showInMoreDetail: (e) => {
          const { normalize: t } = e
          return t(['Mostrar em mais detalhes'])
        },
        showInLessDetail: (e) => {
          const { normalize: t } = e
          return t(['Mostrar em menos detalhes'])
        },
        loadingSpeed: (e) => {
          const { normalize: t } = e
          return t(['Velocidade de carregamento'])
        },
        topContributors: (e) => {
          const { normalize: t } = e
          return t(['Principais colaboradores'])
        },
        showNextFive: (e) => {
          const { normalize: t } = e
          return t(['Mostrar próximos cinco'])
        },
        commits: (e) => {
          const { normalize: t } = e
          return t(['Commits'])
        },
      },
      info: {
        componentRichTheme: (e) => {
          const { normalize: t } = e
          return t(['tema rico em componentes'])
        },
        completedPullRequests: (e) => {
          const { normalize: t } = e
          return t(['solicitações de pull concluídas'])
        },
        users: (e) => {
          const { normalize: t } = e
          return t(['usuários'])
        },
        points: (e) => {
          const { normalize: t } = e
          return t(['pontos'])
        },
        units: (e) => {
          const { normalize: t } = e
          return t(['unidades'])
        },
        exploreGallery: (e) => {
          const { normalize: t } = e
          return t(['Explorar galeria'])
        },
        viewLibrary: (e) => {
          const { normalize: t } = e
          return t(['Ver Biblioteca'])
        },
        commits: (e) => {
          const { normalize: t } = e
          return t(['commits'])
        },
        components: (e) => {
          const { normalize: t } = e
          return t(['componentes'])
        },
        teamMembers: (e) => {
          const { normalize: t } = e
          return t(['membros da equipe'])
        },
      },
      tabs: {
        overview: {
          title: (e) => {
            const { normalize: t } = e
            return t(['Visão Geral'])
          },
          built: (e) => {
            const { normalize: t } = e
            return t(['Construído com o framework Vue.js'])
          },
          free: (e) => {
            const { normalize: t } = e
            return t(['Totalmente gratuito para todos'])
          },
          fresh: (e) => {
            const { normalize: t } = e
            return t(['Design fresco e nítido'])
          },
          mobile: (e) => {
            const { normalize: t } = e
            return t(['Responsivo e otimizado para dispositivos móveis'])
          },
          components: (e) => {
            const { normalize: t } = e
            return t(['Toneladas de componentes úteis'])
          },
          nojQuery: (e) => {
            const { normalize: t } = e
            return t(['Completamente livre de jQuery'])
          },
        },
        billingAddress: {
          title: (e) => {
            const { normalize: t } = e
            return t(['Endereço de Cobrança'])
          },
          personalInfo: (e) => {
            const { normalize: t } = e
            return t(['Informação Pessoal'])
          },
          firstName: (e) => {
            const { normalize: t } = e
            return t(['Nome e Sobrenome'])
          },
          email: (e) => {
            const { normalize: t } = e
            return t(['Email'])
          },
          address: (e) => {
            const { normalize: t } = e
            return t(['Endereço'])
          },
          companyInfo: (e) => {
            const { normalize: t } = e
            return t(['Informação da Empresa'])
          },
          city: (e) => {
            const { normalize: t } = e
            return t(['Cidade'])
          },
          country: (e) => {
            const { normalize: t } = e
            return t(['País'])
          },
          infiniteConnections: (e) => {
            const { normalize: t } = e
            return t(['Conexões infinitas'])
          },
          addConnection: (e) => {
            const { normalize: t } = e
            return t(['Adicionar Conexão'])
          },
        },
        bankDetails: {
          title: (e) => {
            const { normalize: t } = e
            return t(['Detalhes Bancários'])
          },
          detailsFields: (e) => {
            const { normalize: t } = e
            return t(['Campos de Detalhes'])
          },
          bankName: (e) => {
            const { normalize: t } = e
            return t(['Nome do Banco'])
          },
          accountName: (e) => {
            const { normalize: t } = e
            return t(['Nome da Conta'])
          },
          sortCode: (e) => {
            const { normalize: t } = e
            return t(['Código de Ordenação'])
          },
          accountNumber: (e) => {
            const { normalize: t } = e
            return t(['Número da Conta'])
          },
          notes: (e) => {
            const { normalize: t } = e
            return t(['Notas'])
          },
          sendDetails: (e) => {
            const { normalize: t } = e
            return t(['Enviar Detalhes'])
          },
        },
      },
      navigationLayout: (e) => {
        const { normalize: t } = e
        return t(['layout de navegação'])
      },
      topBarButton: (e) => {
        const { normalize: t } = e
        return t(['Barra Superior'])
      },
      sideBarButton: (e) => {
        const { normalize: t } = e
        return t(['Barra Lateral'])
      },
    },
    language: {
      brazilian_portuguese: (e) => {
        const { normalize: t } = e
        return t(['Português'])
      },
      english: (e) => {
        const { normalize: t } = e
        return t(['Inglês'])
      },
      spanish: (e) => {
        const { normalize: t } = e
        return t(['Espanhol'])
      },
      simplified_chinese: (e) => {
        const { normalize: t } = e
        return t(['Chinês Simplificado'])
      },
      persian: (e) => {
        const { normalize: t } = e
        return t(['Persa'])
      },
    },
    menu: {
      auth: (e) => {
        const { normalize: t } = e
        return t(['Autenticação'])
      },
      buttons: (e) => {
        const { normalize: t } = e
        return t(['Botões'])
      },
      timelines: (e) => {
        const { normalize: t } = e
        return t(['Linhas do Tempo'])
      },
      dashboard: (e) => {
        const { normalize: t } = e
        return t(['Painel de Controle'])
      },
      billing: (e) => {
        const { normalize: t } = e
        return t(['Cobrança'])
      },
      login: (e) => {
        const { normalize: t } = e
        return t(['Entrar'])
      },
      signUp: (e) => {
        const { normalize: t } = e
        return t(['Cadastrar-se'])
      },
      preferences: (e) => {
        const { normalize: t } = e
        return t(['Preferências'])
      },
      payments: (e) => {
        const { normalize: t } = e
        return t(['Pagamentos'])
      },
      'pricing-plans': (e) => {
        const { normalize: t } = e
        return t(['Planos de Preços'])
      },
      'login-singup': (e) => {
        const { normalize: t } = e
        return t(['Entrar/Cadastrar'])
      },
      404: (e) => {
        const { normalize: t } = e
        return t(['Páginas 404'])
      },
      faq: (e) => {
        const { normalize: t } = e
        return t(['FAQ'])
      },
      users: (e) => {
        const { normalize: t } = e
        return t(['Usuários'])
      },
      projects: (e) => {
        const { normalize: t } = e
        return t(['Gestão de Materiais'])
      },
      testingItem: (e) => {
        const { normalize: t } = e
        return t(['Item de Teste'])
      },
    },
    projects: {
      viewMode: {
        cards: (e) => {
          const { normalize: t } = e
          return t(['Cartões'])
        },
        table: (e) => {
          const { normalize: t } = e
          return t(['Tabela'])
        },
      },
      table: {
        projectName: (e) => {
          const { normalize: t } = e
          return t(['Nome do Material'])
        },
        projectOwner: (e) => {
          const { normalize: t } = e
          return t(['Proprietário'])
        },
        team: (e) => {
          const { normalize: t } = e
          return t(['Equipe'])
        },
        status: (e) => {
          const { normalize: t } = e
          return t(['Status'])
        },
        creationDate: (e) => {
          const { normalize: t } = e
          return t(['Data de Criação'])
        },
        actions: (e) => {
          const { normalize: t } = e
          return t(['Ações'])
        },
        editProject: (e) => {
          const { normalize: t } = e
          return t(['Editar Material'])
        },
        deleteProject: (e) => {
          const { normalize: t } = e
          return t(['Excluir Material'])
        },
        results: (e) => {
          const { normalize: t } = e
          return t(['resultados'])
        },
        resultsPerPage: (e) => {
          const { normalize: t } = e
          return t(['Resultados por página'])
        },
        previousPage: (e) => {
          const { normalize: t } = e
          return t(['Página anterior'])
        },
        nextPage: (e) => {
          const { normalize: t } = e
          return t(['Próxima página'])
        },
      },
      status: {
        inProgress: (e) => {
          const { normalize: t } = e
          return t(['Em Andamento'])
        },
        archived: (e) => {
          const { normalize: t } = e
          return t(['Arquivado'])
        },
        completed: (e) => {
          const { normalize: t } = e
          return t(['Concluído'])
        },
        important: (e) => {
          const { normalize: t } = e
          return t(['Importante'])
        },
      },
    },
    messages: {
      all: (e) => {
        const { normalize: t } = e
        return t(['Ver todas as mensagens'])
      },
      new: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['Novas mensagens de ', n(o('name'))])
      },
      mark_as_read: (e) => {
        const { normalize: t } = e
        return t(['Marcar como Lido'])
      },
    },
    navbar: {
      messageUs: (e) => {
        const { normalize: t } = e
        return t(['Perguntas de desenvolvimento web:'])
      },
      repository: (e) => {
        const { normalize: t } = e
        return t(['Repositório GitHub'])
      },
    },
    notifications: {
      all: (e) => {
        const { normalize: t } = e
        return t(['Ver todas as notificações'])
      },
      mark_as_read: (e) => {
        const { normalize: t } = e
        return t(['Marcar como lida'])
      },
      sentMessage: (e) => {
        const { normalize: t } = e
        return t(['enviou uma mensagem'])
      },
      uploadedZip: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['fez upload de um novo arquivo Zip com ', n(o('type'))])
      },
      startedTopic: (e) => {
        const { normalize: t } = e
        return t(['iniciou um novo tópico'])
      },
    },
    user: {
      language: (e) => {
        const { normalize: t } = e
        return t(['Mudar Idioma'])
      },
      logout: (e) => {
        const { normalize: t } = e
        return t(['Sair'])
      },
      profile: (e) => {
        const { normalize: t } = e
        return t(['Meu Perfil'])
      },
      settings: (e) => {
        const { normalize: t } = e
        return t(['Configurações'])
      },
      billing: (e) => {
        const { normalize: t } = e
        return t(['Faturamento'])
      },
      faq: (e) => {
        const { normalize: t } = e
        return t(['FAQ'])
      },
      helpAndSupport: (e) => {
        const { normalize: t } = e
        return t(['Ajuda & Suporte'])
      },
      projects: (e) => {
        const { normalize: t } = e
        return t(['Gestão de Materiais'])
      },
      account: (e) => {
        const { normalize: t } = e
        return t(['Conta'])
      },
      explore: (e) => {
        const { normalize: t } = e
        return t(['Explorar'])
      },
    },
    treeView: {
      basic: (e) => {
        const { normalize: t } = e
        return t(['Básico'])
      },
      icons: (e) => {
        const { normalize: t } = e
        return t(['Icones'])
      },
      selectable: (e) => {
        const { normalize: t } = e
        return t(['Selecionável'])
      },
      editable: (e) => {
        const { normalize: t } = e
        return t(['Editável'])
      },
      advanced: (e) => {
        const { normalize: t } = e
        return t(['Advançado'])
      },
    },
    chat: {
      title: (e) => {
        const { normalize: t } = e
        return t(['Gráficos'])
      },
    },
    helpAndSupport: (e) => {
      const { normalize: t } = e
      return t(['Ajuda & Suporte'])
    },
    aboutVuesticAdmin: (e) => {
      const { normalize: t } = e
      return t(['Sobre Vuestic Admin'])
    },
    search: {
      placeholder: (e) => {
        const { normalize: t } = e
        return t(['Buscar...'])
      },
    },
    vuestic: {
      search: (e) => {
        const { normalize: t } = e
        return t(['Pesquisar'])
      },
      noOptions: (e) => {
        const { normalize: t } = e
        return t(['Itens não encontrados'])
      },
      ok: (e) => {
        const { normalize: t } = e
        return t(['OK'])
      },
      cancel: (e) => {
        const { normalize: t } = e
        return t(['Cancelar'])
      },
      uploadFile: (e) => {
        const { normalize: t } = e
        return t(['Carregar arquivo'])
      },
      undo: (e) => {
        const { normalize: t } = e
        return t(['Desfazer'])
      },
      dropzone: (e) => {
        const { normalize: t } = e
        return t(['Solte os arquivos aqui para carregar'])
      },
      fileDeleted: (e) => {
        const { normalize: t } = e
        return t(['Arquivo excluído'])
      },
      closeAlert: (e) => {
        const { normalize: t } = e
        return t(['fechar alerta'])
      },
      backToTop: (e) => {
        const { normalize: t } = e
        return t(['voltar ao topo'])
      },
      toggleDropdown: (e) => {
        const { normalize: t } = e
        return t(['alternar dropdown'])
      },
      carousel: (e) => {
        const { normalize: t } = e
        return t(['carrossel'])
      },
      goPreviousSlide: (e) => {
        const { normalize: t } = e
        return t(['ir para o slide anterior'])
      },
      goNextSlide: (e) => {
        const { normalize: t } = e
        return t(['ir para o próximo slide'])
      },
      goSlide: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['ir para o slide ', n(o('index'))])
      },
      slideOf: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['slide ', n(o('index')), ' de ', n(o('length'))])
      },
      close: (e) => {
        const { normalize: t } = e
        return t(['fechar'])
      },
      openColorPicker: (e) => {
        const { normalize: t } = e
        return t(['abrir seletor de cores'])
      },
      colorSelection: (e) => {
        const { normalize: t } = e
        return t(['seleção de cores'])
      },
      colorName: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['cor ', n(o('color'))])
      },
      decreaseCounter: (e) => {
        const { normalize: t } = e
        return t(['diminuir contador'])
      },
      increaseCounter: (e) => {
        const { normalize: t } = e
        return t(['aumentar contador'])
      },
      selectAllRows: (e) => {
        const { normalize: t } = e
        return t(['selecionar todas as linhas'])
      },
      sortColumnBy: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['ordenar coluna por ', n(o('name'))])
      },
      selectRowByIndex: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['selecionar linha ', n(o('index'))])
      },
      resetDate: (e) => {
        const { normalize: t } = e
        return t(['redefinir data'])
      },
      nextPeriod: (e) => {
        const { normalize: t } = e
        return t(['próximo período'])
      },
      switchView: (e) => {
        const { normalize: t } = e
        return t(['alternar visualização'])
      },
      previousPeriod: (e) => {
        const { normalize: t } = e
        return t(['período anterior'])
      },
      removeFile: (e) => {
        const { normalize: t } = e
        return t(['remover arquivo'])
      },
      reset: (e) => {
        const { normalize: t } = e
        return t(['redefinir'])
      },
      pagination: (e) => {
        const { normalize: t } = e
        return t(['paginação'])
      },
      goToTheFirstPage: (e) => {
        const { normalize: t } = e
        return t(['ir para a primeira página'])
      },
      goToPreviousPage: (e) => {
        const { normalize: t } = e
        return t(['ir para a página anterior'])
      },
      goToSpecificPage: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['ir para a página ', n(o('page'))])
      },
      goToSpecificPageInput: (e) => {
        const { normalize: t } = e
        return t(['insira o número da página'])
      },
      goNextPage: (e) => {
        const { normalize: t } = e
        return t(['ir para a próxima página'])
      },
      goLastPage: (e) => {
        const { normalize: t } = e
        return t(['ir para a última página'])
      },
      currentRating: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['classificação atual ', n(o('value')), ' de ', n(o('max'))])
      },
      voteRating: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['votar classificação ', n(o('value')), ' de ', n(o('max'))])
      },
      optionsFilter: (e) => {
        const { normalize: t } = e
        return t(['filtro de opções'])
      },
      splitPanels: (e) => {
        const { normalize: t } = e
        return t(['dividir painéis'])
      },
      movePaginationLeft: (e) => {
        const { normalize: t } = e
        return t(['mover paginação para a esquerda'])
      },
      movePaginationRight: (e) => {
        const { normalize: t } = e
        return t(['mover paginação para a direita'])
      },
      resetTime: (e) => {
        const { normalize: t } = e
        return t(['redefinir horário'])
      },
      closeToast: (e) => {
        const { normalize: t } = e
        return t(['fechar notificação'])
      },
      selectedOption: (e) => {
        const { normalize: t } = e
        return t(['Opção selecionada'])
      },
      noSelectedOption: (e) => {
        const { normalize: t } = e
        return t(['Nenhuma opção selecionada'])
      },
      breadcrumbs: (e) => {
        const { normalize: t } = e
        return t(['caminho'])
      },
      counterValue: (e) => {
        const { normalize: t } = e
        return t(['valor do contador'])
      },
      selectedDate: (e) => {
        const { normalize: t } = e
        return t(['data selecionada'])
      },
      selectedTime: (e) => {
        const { normalize: t } = e
        return t(['horário selecionado'])
      },
      progressState: (e) => {
        const { normalize: t } = e
        return t(['estado de progresso'])
      },
      color: (e) => {
        const { normalize: t } = e
        return t(['cor'])
      },
      next: (e) => {
        const { normalize: t } = e
        return t(['Próximo'])
      },
      back: (e) => {
        const { normalize: t } = e
        return t(['Anterior'])
      },
      finish: (e) => {
        const { normalize: t } = e
        return t(['Finalizar'])
      },
      step: (e) => {
        const { normalize: t } = e
        return t(['etapa'])
      },
      progress: (e) => {
        const { normalize: t } = e
        return t(['progresso'])
      },
      loading: (e) => {
        const { normalize: t } = e
        return t(['Carregando'])
      },
      sliderValue: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['O valor atual do controle deslizante é ', n(o('value'))])
      },
      switch: (e) => {
        const { normalize: t } = e
        return t(['Alternar'])
      },
      inputField: (e) => {
        const { normalize: t } = e
        return t(['Campo de entrada'])
      },
      fileTypeIncorrect: (e) => {
        const { normalize: t } = e
        return t(['Tipo de arquivo incorreto'])
      },
      select: (e) => {
        const { normalize: t } = e
        return t(['Selecione uma opção'])
      },
    },
  },
  i0 = Object.freeze(Object.defineProperty({ __proto__: null, default: s0 }, Symbol.toStringTag, { value: 'Module' })),
  u0 = {
    auth: {
      agree: (e) => {
        const { normalize: t } = e
        return t(['我同意'])
      },
      createAccount: (e) => {
        const { normalize: t } = e
        return t(['创建账号'])
      },
      createNewAccount: (e) => {
        const { normalize: t } = e
        return t(['创建新账号'])
      },
      email: (e) => {
        const { normalize: t } = e
        return t(['电子邮箱'])
      },
      login: (e) => {
        const { normalize: t } = e
        return t(['登录'])
      },
      passrd: (e) => {
        const { normalize: t } = e
        return t(['密码'])
      },
      recover_password: (e) => {
        const { normalize: t } = e
        return t(['恢复密码'])
      },
      sign_up: (e) => {
        const { normalize: t } = e
        return t(['注册'])
      },
      keep_logged_in: (e) => {
        const { normalize: t } = e
        return t(['保持登录'])
      },
      termsOfUse: (e) => {
        const { normalize: t } = e
        return t(['使用条款'])
      },
      reset_password: (e) => {
        const { normalize: t } = e
        return t(['重置密码'])
      },
    },
    404: {
      title: (e) => {
        const { normalize: t } = e
        return t(['此页面已去钓鱼'])
      },
      text: (e) => {
        const { normalize: t } = e
        return t(['如果您觉得这不对，请给我们发送消息'])
      },
      back_button: (e) => {
        const { normalize: t } = e
        return t(['返回仪表板'])
      },
    },
    typography: {
      primary: (e) => {
        const { normalize: t } = e
        return t(['主要文本样式'])
      },
      secondary: (e) => {
        const { normalize: t } = e
        return t(['次要文本样式'])
      },
    },
    dashboard: {
      title: (e) => {
        const { normalize: t } = e
        return t(['仪表盘'])
      },
      versions: (e) => {
        const { normalize: t } = e
        return t(['版本'])
      },
      setupRemoteConnections: (e) => {
        const { normalize: t } = e
        return t(['设置远程连接'])
      },
      currentVisitors: (e) => {
        const { normalize: t } = e
        return t(['当前访问者'])
      },
      metrics: {
        openInvoices: (e) => {
          const { normalize: t } = e
          return t(['待开发票'])
        },
        ongoingProjects: (e) => {
          const { normalize: t } = e
          return t(['进行中物料'])
        },
        employees: (e) => {
          const { normalize: t } = e
          return t(['员工'])
        },
        newProfit: (e) => {
          const { normalize: t } = e
          return t(['新利润'])
        },
      },
      cards: {
        revenueReport: (e) => {
          const { normalize: t } = e
          return t(['收入报告'])
        },
        yearlyBreakup: (e) => {
          const { normalize: t } = e
          return t(['年度细分'])
        },
        monthlyEarnings: (e) => {
          const { normalize: t } = e
          return t(['月收入'])
        },
        revenueByLocation: (e) => {
          const { normalize: t } = e
          return t(['按地区收入'])
        },
        revenueByTopRegions: (e) => {
          const { normalize: t } = e
          return t(['按主要地区收入'])
        },
        regionRevenue: (e) => {
          const { normalize: t } = e
          return t(['地区收入'])
        },
        projectTable: (e) => {
          const { normalize: t } = e
          return t(['物料管理表格'])
        },
        timeline: (e) => {
          const { normalize: t } = e
          return t(['时间线'])
        },
        countries: (e) => {
          const { normalize: t } = e
          return t(['国家'])
        },
        totalEarnings: (e) => {
          const { normalize: t } = e
          return t(['总收入'])
        },
        earningsThisMonth: (e) => {
          const { normalize: t } = e
          return t(['本月收入'])
        },
        expensesThisMonth: (e) => {
          const { normalize: t } = e
          return t(['本月支出'])
        },
        export: (e) => {
          const { normalize: t } = e
          return t(['导出'])
        },
        lastYear: (e) => {
          const { normalize: t } = e
          return t(['去年'])
        },
        lastMonth: (e) => {
          const { normalize: t } = e
          return t(['上月'])
        },
        earnings: (e) => {
          const { normalize: t } = e
          return t(['收入'])
        },
        profit: (e) => {
          const { normalize: t } = e
          return t(['利润'])
        },
        expenses: (e) => {
          const { normalize: t } = e
          return t(['支出'])
        },
        viewAllProjects: (e) => {
          const { normalize: t } = e
          return t(['查看所有物料'])
        },
      },
      table: {
        name: (e) => {
          const { normalize: t } = e
          return t(['名称'])
        },
        status: (e) => {
          const { normalize: t } = e
          return t(['状态'])
        },
        team: (e) => {
          const { normalize: t } = e
          return t(['团队'])
        },
        topRegion: (e) => {
          const { normalize: t } = e
          return t(['主要地区'])
        },
        revenue: (e) => {
          const { normalize: t } = e
          return t(['收入'])
        },
      },
      time: {
        today: (e) => {
          const { normalize: t } = e
          return t(['今天'])
        },
        week: (e) => {
          const { normalize: t } = e
          return t(['本周'])
        },
        month: (e) => {
          const { normalize: t } = e
          return t(['本月'])
        },
        sinceLastMonth: (e) => {
          const { normalize: t } = e
          return t(['自上月以来'])
        },
      },
      timeline: {
        updatedStatus: (e) => {
          const { normalize: t } = e
          return t(['更新了状态'])
        },
        awaitingResponse: (e) => {
          const { normalize: t } = e
          return t(['等待客户回复'])
        },
        addedToGroup: (e) => {
          const { normalize: t } = e
          return t(['被添加到组'])
        },
        groupName: (e) => {
          const { normalize: t } = e
          return t(['组名是'])
        },
        openedShowcase: (e) => {
          const { normalize: t } = e
          return t(['打开了新展示'])
        },
        withTheme: (e) => {
          const { normalize: t } = e
          return t(['主题为市场'])
        },
        updatedStatusTo: (e) => {
          const { normalize: t } = e
          return t(['将状态更新为'])
        },
        projectCreated: (e) => {
          const { normalize: t } = e
          return t(['项目'])
        },
        wasCreated: (e) => {
          const { normalize: t } = e
          return t(['已创建'])
        },
      },
      actions: {
        export: (e) => {
          const { normalize: t } = e
          return t(['导出'])
        },
      },
      months: {
        jan: (e) => {
          const { normalize: t } = e
          return t(['一月'])
        },
        feb: (e) => {
          const { normalize: t } = e
          return t(['二月'])
        },
        mar: (e) => {
          const { normalize: t } = e
          return t(['三月'])
        },
        apr: (e) => {
          const { normalize: t } = e
          return t(['四月'])
        },
        may: (e) => {
          const { normalize: t } = e
          return t(['五月'])
        },
        jun: (e) => {
          const { normalize: t } = e
          return t(['六月'])
        },
        jul: (e) => {
          const { normalize: t } = e
          return t(['七月'])
        },
        aug: (e) => {
          const { normalize: t } = e
          return t(['八月'])
        },
        sep: (e) => {
          const { normalize: t } = e
          return t(['九月'])
        },
        oct: (e) => {
          const { normalize: t } = e
          return t(['十月'])
        },
        nov: (e) => {
          const { normalize: t } = e
          return t(['十一月'])
        },
        dec: (e) => {
          const { normalize: t } = e
          return t(['十二月'])
        },
      },
      charts: {
        trendyTrends: (e) => {
          const { normalize: t } = e
          return t(['流行趋势'])
        },
        showInMoreDetail: (e) => {
          const { normalize: t } = e
          return t(['显示更多细节'])
        },
        showInLessDetail: (e) => {
          const { normalize: t } = e
          return t(['显示较少细节'])
        },
        loadingSpeed: (e) => {
          const { normalize: t } = e
          return t(['加载速度'])
        },
        topContributors: (e) => {
          const { normalize: t } = e
          return t(['主要贡献者'])
        },
        showNextFive: (e) => {
          const { normalize: t } = e
          return t(['显示接下来的五个'])
        },
        commits: (e) => {
          const { normalize: t } = e
          return t(['提交'])
        },
      },
      info: {
        componentRichTheme: (e) => {
          const { normalize: t } = e
          return t(['组件丰富的主题'])
        },
        completedPullRequests: (e) => {
          const { normalize: t } = e
          return t(['已完成的拉取请求'])
        },
        users: (e) => {
          const { normalize: t } = e
          return t(['用户'])
        },
        points: (e) => {
          const { normalize: t } = e
          return t(['点数'])
        },
        units: (e) => {
          const { normalize: t } = e
          return t(['单位'])
        },
        exploreGallery: (e) => {
          const { normalize: t } = e
          return t(['探索画廊'])
        },
        viewLibrary: (e) => {
          const { normalize: t } = e
          return t(['查看库'])
        },
        commits: (e) => {
          const { normalize: t } = e
          return t(['提交'])
        },
        components: (e) => {
          const { normalize: t } = e
          return t(['组件'])
        },
        teamMembers: (e) => {
          const { normalize: t } = e
          return t(['团队成员'])
        },
      },
      tabs: {
        overview: {
          title: (e) => {
            const { normalize: t } = e
            return t(['概述'])
          },
          built: (e) => {
            const { normalize: t } = e
            return t(['使用 Vue.js 框架构建'])
          },
          free: (e) => {
            const { normalize: t } = e
            return t(['对所有人完全免费'])
          },
          fresh: (e) => {
            const { normalize: t } = e
            return t(['新鲜和清新的设计'])
          },
          mobile: (e) => {
            const { normalize: t } = e
            return t(['响应式且优化移动'])
          },
          components: (e) => {
            const { normalize: t } = e
            return t(['大量有用的组件'])
          },
          nojQuery: (e) => {
            const { normalize: t } = e
            return t(['完全不使用 jQuery'])
          },
        },
        billingAddress: {
          title: (e) => {
            const { normalize: t } = e
            return t(['账单地址'])
          },
          personalInfo: (e) => {
            const { normalize: t } = e
            return t(['个人信息'])
          },
          firstName: (e) => {
            const { normalize: t } = e
            return t(['名字 & 姓氏'])
          },
          email: (e) => {
            const { normalize: t } = e
            return t(['电子邮箱'])
          },
          address: (e) => {
            const { normalize: t } = e
            return t(['地址'])
          },
          companyInfo: (e) => {
            const { normalize: t } = e
            return t(['公司信息'])
          },
          city: (e) => {
            const { normalize: t } = e
            return t(['城市'])
          },
          country: (e) => {
            const { normalize: t } = e
            return t(['国家'])
          },
          infiniteConnections: (e) => {
            const { normalize: t } = e
            return t(['无限连接'])
          },
          addConnection: (e) => {
            const { normalize: t } = e
            return t(['添加连接'])
          },
        },
        bankDetails: {
          title: (e) => {
            const { normalize: t } = e
            return t(['银行详情'])
          },
          detailsFields: (e) => {
            const { normalize: t } = e
            return t(['详情字段'])
          },
          bankName: (e) => {
            const { normalize: t } = e
            return t(['银行名称'])
          },
          accountName: (e) => {
            const { normalize: t } = e
            return t(['账户名称'])
          },
          sortCode: (e) => {
            const { normalize: t } = e
            return t(['排序代码'])
          },
          accountNumber: (e) => {
            const { normalize: t } = e
            return t(['账号'])
          },
          notes: (e) => {
            const { normalize: t } = e
            return t(['备注'])
          },
          sendDetails: (e) => {
            const { normalize: t } = e
            return t(['发送详情'])
          },
        },
      },
      navigationLayout: (e) => {
        const { normalize: t } = e
        return t(['导航布局'])
      },
      topBarButton: (e) => {
        const { normalize: t } = e
        return t(['顶部按钮'])
      },
      sideBarButton: (e) => {
        const { normalize: t } = e
        return t(['侧边按钮'])
      },
    },
    language: {
      brazilian_portuguese: (e) => {
        const { normalize: t } = e
        return t(['葡萄牙语'])
      },
      english: (e) => {
        const { normalize: t } = e
        return t(['英语'])
      },
      spanish: (e) => {
        const { normalize: t } = e
        return t(['西班牙语'])
      },
      simplified_chinese: (e) => {
        const { normalize: t } = e
        return t(['简体中文'])
      },
      persian: (e) => {
        const { normalize: t } = e
        return t(['波斯语'])
      },
    },
    common: {
      save: (e) => {
        const { normalize: t } = e
        return t(['保存'])
      },
      cancel: (e) => {
        const { normalize: t } = e
        return t(['取消'])
      },
      create: (e) => {
        const { normalize: t } = e
        return t(['创建'])
      },
      edit: (e) => {
        const { normalize: t } = e
        return t(['编辑'])
      },
      delete: (e) => {
        const { normalize: t } = e
        return t(['删除'])
      },
      confirm: (e) => {
        const { normalize: t } = e
        return t(['确认'])
      },
    },
    menu: {
      home: (e) => {
        const { normalize: t } = e
        return t(['主页'])
      },
      auth: (e) => {
        const { normalize: t } = e
        return t(['授权'])
      },
      buttons: (e) => {
        const { normalize: t } = e
        return t(['按钮'])
      },
      timelines: (e) => {
        const { normalize: t } = e
        return t(['时间线'])
      },
      dashboard: (e) => {
        const { normalize: t } = e
        return t(['仪表板'])
      },
      billing: (e) => {
        const { normalize: t } = e
        return t(['计费'])
      },
      users: (e) => {
        const { normalize: t } = e
        return t(['用户管理'])
      },
      login: (e) => {
        const { normalize: t } = e
        return t(['登录'])
      },
      signUp: (e) => {
        const { normalize: t } = e
        return t(['注册'])
      },
      preferences: (e) => {
        const { normalize: t } = e
        return t(['个人信息'])
      },
      settings: (e) => {
        const { normalize: t } = e
        return t(['设置'])
      },
      payments: (e) => {
        const { normalize: t } = e
        return t(['支付'])
      },
      'pricing-plans': (e) => {
        const { normalize: t } = e
        return t(['定价计划'])
      },
      'login-singup': (e) => {
        const { normalize: t } = e
        return t(['登录/注册'])
      },
      404: (e) => {
        const { normalize: t } = e
        return t(['404 页面'])
      },
      faq: (e) => {
        const { normalize: t } = e
        return t(['常见问题解答'])
      },
      projects: (e) => {
        const { normalize: t } = e
        return t(['物料管理'])
      },
      testingItem: (e) => {
        const { normalize: t } = e
        return t(['测试项管理'])
      },
    },
    projects: {
      viewMode: {
        cards: (e) => {
          const { normalize: t } = e
          return t(['卡片视图'])
        },
        table: (e) => {
          const { normalize: t } = e
          return t(['表格视图'])
        },
      },
      table: {
        projectName: (e) => {
          const { normalize: t } = e
          return t(['物料名称'])
        },
        projectOwner: (e) => {
          const { normalize: t } = e
          return t(['负责人'])
        },
        team: (e) => {
          const { normalize: t } = e
          return t(['团队'])
        },
        status: (e) => {
          const { normalize: t } = e
          return t(['状态'])
        },
        creationDate: (e) => {
          const { normalize: t } = e
          return t(['创建日期'])
        },
        actions: (e) => {
          const { normalize: t } = e
          return t(['操作'])
        },
        editProject: (e) => {
          const { normalize: t } = e
          return t(['编辑物料'])
        },
        deleteProject: (e) => {
          const { normalize: t } = e
          return t(['删除物料'])
        },
        results: (e) => {
          const { normalize: t } = e
          return t(['条结果'])
        },
        resultsPerPage: (e) => {
          const { normalize: t } = e
          return t(['每页显示条数'])
        },
        previousPage: (e) => {
          const { normalize: t } = e
          return t(['上一页'])
        },
        nextPage: (e) => {
          const { normalize: t } = e
          return t(['下一页'])
        },
      },
      status: {
        inProgress: (e) => {
          const { normalize: t } = e
          return t(['进行中'])
        },
        archived: (e) => {
          const { normalize: t } = e
          return t(['已归档'])
        },
        completed: (e) => {
          const { normalize: t } = e
          return t(['已完成'])
        },
        important: (e) => {
          const { normalize: t } = e
          return t(['重要'])
        },
      },
    },
    materials: {
      viewMode: {
        cards: (e) => {
          const { normalize: t } = e
          return t(['卡片视图'])
        },
        table: (e) => {
          const { normalize: t } = e
          return t(['表格视图'])
        },
      },
      table: {
        name: (e) => {
          const { normalize: t } = e
          return t(['名称/编号'])
        },
        materialCode: (e) => {
          const { normalize: t } = e
          return t(['物料代码'])
        },
        materialName: (e) => {
          const { normalize: t } = e
          return t(['物料名称'])
        },
        description: (e) => {
          const { normalize: t } = e
          return t(['描述'])
        },
        type: (e) => {
          const { normalize: t } = e
          return t(['类型'])
        },
        status: (e) => {
          const { normalize: t } = e
          return t(['数量/状态'])
        },
        creationDate: (e) => {
          const { normalize: t } = e
          return t(['创建时间'])
        },
        productCount: (e) => {
          const { normalize: t } = e
          return t(['产品数量'])
        },
        testItems: (e) => {
          const { normalize: t } = e
          return t(['测试项'])
        },
        actions: (e) => {
          const { normalize: t } = e
          return t(['操作'])
        },
        editMaterial: (e) => {
          const { normalize: t } = e
          return t(['编辑物料'])
        },
        deleteMaterial: (e) => {
          const { normalize: t } = e
          return t(['删除物料'])
        },
        results: (e) => {
          const { normalize: t } = e
          return t(['条结果'])
        },
        resultsPerPage: (e) => {
          const { normalize: t } = e
          return t(['每页显示条数'])
        },
        previousPage: (e) => {
          const { normalize: t } = e
          return t(['上一页'])
        },
        nextPage: (e) => {
          const { normalize: t } = e
          return t(['下一页'])
        },
      },
      form: {
        materialCode: (e) => {
          const { normalize: t } = e
          return t(['物料代码'])
        },
        materialName: (e) => {
          const { normalize: t } = e
          return t(['物料名称'])
        },
        productCount: (e) => {
          const { normalize: t } = e
          return t(['产品数量'])
        },
        addTestItem: (e) => {
          const { normalize: t } = e
          return t(['添加测试项'])
        },
        testItems: (e) => {
          const { normalize: t } = e
          return t(['测试项列表'])
        },
        addTitle: (e) => {
          const { normalize: t } = e
          return t(['添加物料'])
        },
        editTitle: (e) => {
          const { normalize: t } = e
          return t(['编辑物料'])
        },
      },
      messages: {
        created: (e) => {
          const { normalize: t } = e
          return t(['物料创建成功'])
        },
        updated: (e) => {
          const { normalize: t } = e
          return t(['物料更新成功'])
        },
        deleted: (e) => {
          const { normalize: t } = e
          return t(['物料删除成功'])
        },
      },
      confirm: {
        deleteTitle: (e) => {
          const { normalize: t } = e
          return t(['删除物料'])
        },
        deleteMessage: (e) => {
          const { normalize: t, interpolate: n, named: o } = e
          return t(['确定要删除物料 "', n(o('name')), '" 吗？'])
        },
        delete: (e) => {
          const { normalize: t } = e
          return t(['删除'])
        },
        unsavedChanges: (e) => {
          const { normalize: t } = e
          return t(['表单有未保存的更改。确定要关闭吗？'])
        },
      },
      noData: (e) => {
        const { normalize: t } = e
        return t(['暂无物料数据'])
      },
      search: {
        placeholder: (e) => {
          const { normalize: t } = e
          return t(['搜索物料或产品...'])
        },
      },
      type: {
        material: (e) => {
          const { normalize: t } = e
          return t(['物料'])
        },
        product: (e) => {
          const { normalize: t } = e
          return t(['产品'])
        },
      },
      status: {
        productCount: (e) => {
          const { normalize: t, interpolate: n, named: o } = e
          return t([n(o('count')), ' 个产品'])
        },
      },
    },
    products: {
      form: {
        addTitle: (e) => {
          const { normalize: t } = e
          return t(['添加产品'])
        },
        editTitle: (e) => {
          const { normalize: t } = e
          return t(['编辑产品'])
        },
        addToMaterial: (e) => {
          const { normalize: t, interpolate: n, named: o } = e
          return t(['添加产品 - ', n(o('materialName'))])
        },
      },
      messages: {
        created: (e) => {
          const { normalize: t } = e
          return t(['产品创建成功'])
        },
        updated: (e) => {
          const { normalize: t } = e
          return t(['产品更新成功'])
        },
        deleted: (e) => {
          const { normalize: t } = e
          return t(['产品删除成功'])
        },
      },
      confirm: {
        deleteTitle: (e) => {
          const { normalize: t } = e
          return t(['删除产品'])
        },
        deleteMessage: (e) => {
          const { normalize: t, interpolate: n, named: o } = e
          return t(['确定要删除产品 "', n(o('name')), '" 吗？'])
        },
        delete: (e) => {
          const { normalize: t } = e
          return t(['删除'])
        },
      },
    },
    messages: {
      all: (e) => {
        const { normalize: t } = e
        return t(['查看所有消息'])
      },
      new: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['来自 ', n(o('name')), ' 的新消息'])
      },
      mark_as_read: (e) => {
        const { normalize: t } = e
        return t(['标记为已读'])
      },
    },
    navbar: {
      messageUs: (e) => {
        const { normalize: t } = e
        return t(['需要Web开发帮助吗？请联系我们。'])
      },
      repository: (e) => {
        const { normalize: t } = e
        return t(['GitHub 仓库'])
      },
    },
    notifications: {
      all: (e) => {
        const { normalize: t } = e
        return t(['查看所有通知'])
      },
      mark_as_read: (e) => {
        const { normalize: t } = e
        return t(['标为已读'])
      },
      sentMessage: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t([n(o('name')), ' 给你发了一条消息'])
      },
      uploadedZip: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t([n(o('name')), ' 上传了一个新的 Zip 文件 ', n(o('type'))])
      },
      startedTopic: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t([n(o('name')), ' 开始了一个新话题'])
      },
    },
    buttonSelect: {
      dark: (e) => {
        const { normalize: t } = e
        return t(['暗色'])
      },
      light: (e) => {
        const { normalize: t } = e
        return t(['亮色'])
      },
    },
    settings: {
      theme: (e) => {
        const { normalize: t } = e
        return t(['主题'])
      },
      generalPreferences: (e) => {
        const { normalize: t } = e
        return t(['通用设置'])
      },
      language: (e) => {
        const { normalize: t } = e
        return t(['语言'])
      },
    },
    user: {
      language: (e) => {
        const { normalize: t } = e
        return t(['修改语言'])
      },
      logout: (e) => {
        const { normalize: t } = e
        return t(['登出'])
      },
      profile: (e) => {
        const { normalize: t } = e
        return t(['我的资料'])
      },
      settings: (e) => {
        const { normalize: t } = e
        return t(['设置'])
      },
      billing: (e) => {
        const { normalize: t } = e
        return t(['账单'])
      },
      faq: (e) => {
        const { normalize: t } = e
        return t(['常见问题'])
      },
      helpAndSupport: (e) => {
        const { normalize: t } = e
        return t(['帮助与支持'])
      },
      projects: (e) => {
        const { normalize: t } = e
        return t(['物料管理'])
      },
      users: (e) => {
        const { normalize: t } = e
        return t(['用户管理'])
      },
      account: (e) => {
        const { normalize: t } = e
        return t(['账户'])
      },
      explore: (e) => {
        const { normalize: t } = e
        return t(['探索'])
      },
    },
    treeView: {
      basic: (e) => {
        const { normalize: t } = e
        return t(['基本型'])
      },
      icons: (e) => {
        const { normalize: t } = e
        return t(['图标'])
      },
      selectable: (e) => {
        const { normalize: t } = e
        return t(['可选择'])
      },
      editable: (e) => {
        const { normalize: t } = e
        return t(['可编辑'])
      },
      advanced: (e) => {
        const { normalize: t } = e
        return t(['高级'])
      },
    },
    chat: {
      title: (e) => {
        const { normalize: t } = e
        return t(['聊天'])
      },
    },
    cards: {
      cards: (e) => {
        const { normalize: t } = e
        return t(['卡片'])
      },
      fixed: (e) => {
        const { normalize: t } = e
        return t(['固定的'])
      },
      floating: (e) => {
        const { normalize: t } = e
        return t(['浮动的'])
      },
      contentText: (e) => {
        const { normalize: t } = e
        return t(['独特的斑马条纹使它们成为人们最熟悉的动物之一。'])
      },
      rowHeight: (e) => {
        const { normalize: t } = e
        return t(['行高'])
      },
      title: {
        dark: (e) => {
          const { normalize: t } = e
          return t(['暗色背景'])
        },
        bright: (e) => {
          const { normalize: t } = e
          return t(['亮色卡片'])
        },
        titleOnImageNoOverlay: (e) => {
          const { normalize: t } = e
          return t(['图像上的标题，但没有叠加'])
        },
        normal: (e) => {
          const { normalize: t } = e
          return t(['标准卡'])
        },
        overlayAndTextOnImage: (e) => {
          const { normalize: t } = e
          return t(['图像上有覆盖和文本的卡片'])
        },
        stripeNoImage: (e) => {
          const { normalize: t } = e
          return t(['无图像条纹卡'])
        },
      },
      button: {
        main: (e) => {
          const { normalize: t } = e
          return t(['主要'])
        },
        cancel: (e) => {
          const { normalize: t } = e
          return t(['取消'])
        },
      },
      link: {
        edit: (e) => {
          const { normalize: t } = e
          return t(['编辑'])
        },
        setAsDefault: (e) => {
          const { normalize: t } = e
          return t(['设为默认'])
        },
        delete: (e) => {
          const { normalize: t } = e
          return t(['删除'])
        },
        traveling: (e) => {
          const { normalize: t } = e
          return t(['Traveling'])
        },
        france: (e) => {
          const { normalize: t } = e
          return t(['法国'])
        },
        review: (e) => {
          const { normalize: t } = e
          return t(['评论'])
        },
        feedback: (e) => {
          const { normalize: t } = e
          return t(['反馈信息'])
        },
        readFull: (e) => {
          const { normalize: t } = e
          return t(['阅读全文'])
        },
        secondaryAction: (e) => {
          const { normalize: t } = e
          return t(['第二行为'])
        },
        action1: (e) => {
          const { normalize: t } = e
          return t(['行为 1'])
        },
        action2: (e) => {
          const { normalize: t } = e
          return t(['行为 2'])
        },
      },
    },
    helpAndSupport: (e) => {
      const { normalize: t } = e
      return t(['帮助与支持'])
    },
    aboutVuesticAdmin: (e) => {
      const { normalize: t } = e
      return t(['关于 Vuestic Admin'])
    },
    search: {
      placeholder: (e) => {
        const { normalize: t } = e
        return t(['搜索...'])
      },
    },
    vuestic: {
      search: (e) => {
        const { normalize: t } = e
        return t(['搜索'])
      },
      noOptions: (e) => {
        const { normalize: t } = e
        return t(['未找到项目'])
      },
      ok: (e) => {
        const { normalize: t } = e
        return t(['确认'])
      },
      cancel: (e) => {
        const { normalize: t } = e
        return t(['取消'])
      },
      uploadFile: (e) => {
        const { normalize: t } = e
        return t(['上传文件'])
      },
      undo: (e) => {
        const { normalize: t } = e
        return t(['撤销'])
      },
      dropzone: (e) => {
        const { normalize: t } = e
        return t(['将文件拖到此处上传'])
      },
      fileDeleted: (e) => {
        const { normalize: t } = e
        return t(['文件已删除'])
      },
      closeAlert: (e) => {
        const { normalize: t } = e
        return t(['关闭警告'])
      },
      backToTop: (e) => {
        const { normalize: t } = e
        return t(['回到顶部'])
      },
      toggleDropdown: (e) => {
        const { normalize: t } = e
        return t(['切换下拉菜单'])
      },
      carousel: (e) => {
        const { normalize: t } = e
        return t(['轮播'])
      },
      goPreviousSlide: (e) => {
        const { normalize: t } = e
        return t(['上一张幻灯片'])
      },
      goNextSlide: (e) => {
        const { normalize: t } = e
        return t(['下一张幻灯片'])
      },
      goSlide: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['跳转到第 ', n(o('index')), ' 张幻灯片'])
      },
      slideOf: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['第 ', n(o('index')), ' 张，共 ', n(o('length')), ' 张'])
      },
      close: (e) => {
        const { normalize: t } = e
        return t(['关闭'])
      },
      openColorPicker: (e) => {
        const { normalize: t } = e
        return t(['打开颜色选择器'])
      },
      colorSelection: (e) => {
        const { normalize: t } = e
        return t(['颜色选择'])
      },
      colorName: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['颜色 ', n(o('color'))])
      },
      decreaseCounter: (e) => {
        const { normalize: t } = e
        return t(['减少计数'])
      },
      increaseCounter: (e) => {
        const { normalize: t } = e
        return t(['增加计数'])
      },
      selectAllRows: (e) => {
        const { normalize: t } = e
        return t(['选择所有行'])
      },
      sortColumnBy: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['按 ', n(o('name')), ' 排序'])
      },
      selectRowByIndex: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['选择第 ', n(o('index')), ' 行'])
      },
      resetDate: (e) => {
        const { normalize: t } = e
        return t(['重置日期'])
      },
      nextPeriod: (e) => {
        const { normalize: t } = e
        return t(['下一个时间段'])
      },
      switchView: (e) => {
        const { normalize: t } = e
        return t(['切换视图'])
      },
      previousPeriod: (e) => {
        const { normalize: t } = e
        return t(['上一个时间段'])
      },
      removeFile: (e) => {
        const { normalize: t } = e
        return t(['删除文件'])
      },
      reset: (e) => {
        const { normalize: t } = e
        return t(['重置'])
      },
      pagination: (e) => {
        const { normalize: t } = e
        return t(['分页'])
      },
      goToTheFirstPage: (e) => {
        const { normalize: t } = e
        return t(['跳转到第一页'])
      },
      goToPreviousPage: (e) => {
        const { normalize: t } = e
        return t(['跳转到上一页'])
      },
      goToSpecificPage: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['跳转到第 ', n(o('page')), ' 页'])
      },
      goToSpecificPageInput: (e) => {
        const { normalize: t } = e
        return t(['输入页码以跳转'])
      },
      goNextPage: (e) => {
        const { normalize: t } = e
        return t(['跳转到下一页'])
      },
      goLastPage: (e) => {
        const { normalize: t } = e
        return t(['跳转到最后一页'])
      },
      currentRating: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['当前评分 ', n(o('value')), ' / ', n(o('max'))])
      },
      voteRating: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['评分 ', n(o('value')), ' / ', n(o('max'))])
      },
      optionsFilter: (e) => {
        const { normalize: t } = e
        return t(['选项筛选'])
      },
      splitPanels: (e) => {
        const { normalize: t } = e
        return t(['分割面板'])
      },
      movePaginationLeft: (e) => {
        const { normalize: t } = e
        return t(['分页向左移动'])
      },
      movePaginationRight: (e) => {
        const { normalize: t } = e
        return t(['分页向右移动'])
      },
      resetTime: (e) => {
        const { normalize: t } = e
        return t(['重置时间'])
      },
      closeToast: (e) => {
        const { normalize: t } = e
        return t(['关闭提示'])
      },
      selectedOption: (e) => {
        const { normalize: t } = e
        return t(['已选选项'])
      },
      noSelectedOption: (e) => {
        const { normalize: t } = e
        return t(['未选择选项'])
      },
      breadcrumbs: (e) => {
        const { normalize: t } = e
        return t(['面包屑导航'])
      },
      counterValue: (e) => {
        const { normalize: t } = e
        return t(['计数值'])
      },
      selectedDate: (e) => {
        const { normalize: t } = e
        return t(['选择的日期'])
      },
      selectedTime: (e) => {
        const { normalize: t } = e
        return t(['选择的时间'])
      },
      progressState: (e) => {
        const { normalize: t } = e
        return t(['进度状态'])
      },
      color: (e) => {
        const { normalize: t } = e
        return t(['颜色'])
      },
      next: (e) => {
        const { normalize: t } = e
        return t(['下一步'])
      },
      back: (e) => {
        const { normalize: t } = e
        return t(['上一步'])
      },
      finish: (e) => {
        const { normalize: t } = e
        return t(['完成'])
      },
      step: (e) => {
        const { normalize: t } = e
        return t(['步骤'])
      },
      progress: (e) => {
        const { normalize: t } = e
        return t(['进度'])
      },
      loading: (e) => {
        const { normalize: t } = e
        return t(['加载中'])
      },
      sliderValue: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['当前滑块值为 ', n(o('value'))])
      },
      switch: (e) => {
        const { normalize: t } = e
        return t(['切换'])
      },
      inputField: (e) => {
        const { normalize: t } = e
        return t(['输入框'])
      },
      fileTypeIncorrect: (e) => {
        const { normalize: t } = e
        return t(['文件类型不正确'])
      },
      select: (e) => {
        const { normalize: t } = e
        return t(['选择一个选项'])
      },
    },
    users: {
      title: (e) => {
        const { normalize: t } = e
        return t(['用户管理'])
      },
      active: (e) => {
        const { normalize: t } = e
        return t(['活跃'])
      },
      inactive: (e) => {
        const { normalize: t } = e
        return t(['不活跃'])
      },
      search: (e) => {
        const { normalize: t } = e
        return t(['搜索'])
      },
      addUser: (e) => {
        const { normalize: t } = e
        return t(['添加用户'])
      },
      editUser: (e) => {
        const { normalize: t } = e
        return t(['编辑用户'])
      },
      deleteUser: (e) => {
        const { normalize: t } = e
        return t(['删除用户'])
      },
      fullName: (e) => {
        const { normalize: t } = e
        return t(['全名'])
      },
      phone: (e) => {
        const { normalize: t } = e
        return t(['手机号'])
      },
      username: (e) => {
        const { normalize: t } = e
        return t(['用户名'])
      },
      email: (e) => {
        const { normalize: t } = e
        return t(['邮箱'])
      },
      password: (e) => {
        const { normalize: t } = e
        return t(['密码'])
      },
      passwordInputHint: (e) => {
        const { normalize: t } = e
        return t(['输入新密码'])
      },
      passwordChangeHint: (e) => {
        const { normalize: t } = e
        return t(['输入新密码以更改现有密码，留空则保持不变'])
      },
      role: (e) => {
        const { normalize: t } = e
        return t(['角色'])
      },
      actions: (e) => {
        const { normalize: t } = e
        return t(['操作'])
      },
      addImage: (e) => {
        const { normalize: t } = e
        return t(['添加图片'])
      },
      notes: (e) => {
        const { normalize: t } = e
        return t(['备注'])
      },
      save: (e) => {
        const { normalize: t } = e
        return t(['保存'])
      },
      cancel: (e) => {
        const { normalize: t } = e
        return t(['取消'])
      },
      more: (e) => {
        const { normalize: t } = e
        return t(['更多'])
      },
      results: (e) => {
        const { normalize: t } = e
        return t(['结果'])
      },
      resultsPerPage: (e) => {
        const { normalize: t } = e
        return t(['每页结果数'])
      },
      previousPage: (e) => {
        const { normalize: t } = e
        return t(['上一页'])
      },
      nextPage: (e) => {
        const { normalize: t } = e
        return t(['下一页'])
      },
      deleteUserTitle: (e) => {
        const { normalize: t } = e
        return t(['删除用户'])
      },
      deleteUserMessage: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['您确定要删除 ', n(o('name')), ' 吗？'])
      },
      delete: (e) => {
        const { normalize: t } = e
        return t(['删除'])
      },
      userUpdated: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t([n(o('name')), ' 已更新'])
      },
      userCreated: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t([n(o('name')), ' 已创建'])
      },
      userDeleted: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t([n(o('name')), ' 已删除'])
      },
      cannotDeleteAdmin: (e) => {
        const { normalize: t } = e
        return t(['管理员用户不能被删除'])
      },
      formUnsavedChanges: (e) => {
        const { normalize: t } = e
        return t(['表单有未保存的更改。您确定要关闭吗？'])
      },
      editUserAria: (e) => {
        const { normalize: t } = e
        return t(['编辑用户'])
      },
      deleteUserAria: (e) => {
        const { normalize: t } = e
        return t(['删除用户'])
      },
      showPassword: (e) => {
        const { normalize: t } = e
        return t(['显示密码'])
      },
      hidePassword: (e) => {
        const { normalize: t } = e
        return t(['隐藏密码'])
      },
      roles: {
        tester: (e) => {
          const { normalize: t } = e
          return t(['测试人员'])
        },
        regular: (e) => {
          const { normalize: t } = e
          return t(['普通人员'])
        },
        admin: (e) => {
          const { normalize: t } = e
          return t(['管理员'])
        },
      },
    },
    testingItems: {
      title: (e) => {
        const { normalize: t } = e
        return t(['测试项管理'])
      },
      subtitle: (e) => {
        const { normalize: t } = e
        return t(['管理测试项目和相关产品'])
      },
      noData: (e) => {
        const { normalize: t } = e
        return t(['暂无测试项数据'])
      },
      products: (e) => {
        const { normalize: t } = e
        return t(['个产品'])
      },
      createdAt: (e) => {
        const { normalize: t } = e
        return t(['创建时间'])
      },
      productList: (e) => {
        const { normalize: t } = e
        return t(['产品列表'])
      },
      hideProducts: (e) => {
        const { normalize: t } = e
        return t(['隐藏产品'])
      },
      showProducts: (e) => {
        const { normalize: t } = e
        return t(['显示产品'])
      },
      type: {
        testingItem: (e) => {
          const { normalize: t } = e
          return t(['测试项'])
        },
        testProduct: (e) => {
          const { normalize: t } = e
          return t(['测试产品'])
        },
      },
      types: {
        data_analysis: (e) => {
          const { normalize: t } = e
          return t(['数据判断'])
        },
        average_analysis: (e) => {
          const { normalize: t } = e
          return t(['平均值判断'])
        },
        subjective_analysis: (e) => {
          const { normalize: t } = e
          return t(['主观判断'])
        },
      },
      status: {
        productCount: (e) => {
          const { normalize: t, interpolate: n, named: o } = e
          return t([n(o('count')), '个产品'])
        },
      },
      table: {
        code: (e) => {
          const { normalize: t } = e
          return t(['编号'])
        },
        name: (e) => {
          const { normalize: t } = e
          return t(['名称/编号'])
        },
        description: (e) => {
          const { normalize: t } = e
          return t(['描述'])
        },
        type: (e) => {
          const { normalize: t } = e
          return t(['类型'])
        },
        status: (e) => {
          const { normalize: t } = e
          return t(['数量/状态'])
        },
        testItems: (e) => {
          const { normalize: t } = e
          return t(['测试项内容'])
        },
        actions: (e) => {
          const { normalize: t } = e
          return t(['操作'])
        },
        results: (e) => {
          const { normalize: t } = e
          return t(['条结果'])
        },
        resultsPerPage: (e) => {
          const { normalize: t } = e
          return t(['每页显示'])
        },
        previousPage: (e) => {
          const { normalize: t } = e
          return t(['上一页'])
        },
        nextPage: (e) => {
          const { normalize: t } = e
          return t(['下一页'])
        },
      },
      search: {
        placeholder: (e) => {
          const { normalize: t } = e
          return t(['搜索测试项代码、名称或测试项...'])
        },
      },
      view: {
        table: (e) => {
          const { normalize: t } = e
          return t(['表格视图'])
        },
        cards: (e) => {
          const { normalize: t } = e
          return t(['卡片视图'])
        },
      },
      form: {
        addTitle: (e) => {
          const { normalize: t } = e
          return t(['新建测试项'])
        },
        editTitle: (e) => {
          const { normalize: t } = e
          return t(['编辑测试项'])
        },
        itemCode: (e) => {
          const { normalize: t } = e
          return t(['编号'])
        },
        itemCodePlaceholder: (e) => {
          const { normalize: t } = e
          return t(['请输入测试项编号'])
        },
        itemCodeRequired: (e) => {
          const { normalize: t } = e
          return t(['编号不能为空'])
        },
        itemName: (e) => {
          const { normalize: t } = e
          return t(['测试项内容'])
        },
        itemNamePlaceholder: (e) => {
          const { normalize: t } = e
          return t(['请输入测试项内容'])
        },
        itemNameRequired: (e) => {
          const { normalize: t } = e
          return t(['测试项内容不能为空'])
        },
        itemType: (e) => {
          const { normalize: t } = e
          return t(['类型'])
        },
        itemTypeRequired: (e) => {
          const { normalize: t } = e
          return t(['请选择类型'])
        },
        description: (e) => {
          const { normalize: t } = e
          return t(['描述'])
        },
        descriptionPlaceholder: (e) => {
          const { normalize: t } = e
          return t(['请输入描述（可选）'])
        },
        save: (e) => {
          const { normalize: t } = e
          return t(['保存'])
        },
        cancel: (e) => {
          const { normalize: t } = e
          return t(['取消'])
        },
      },
      messages: {
        created: (e) => {
          const { normalize: t } = e
          return t(['测试项创建成功'])
        },
        updated: (e) => {
          const { normalize: t } = e
          return t(['测试项更新成功'])
        },
        deleted: (e) => {
          const { normalize: t } = e
          return t(['测试项删除成功'])
        },
      },
      confirm: {
        deleteTitle: (e) => {
          const { normalize: t } = e
          return t(['删除测试项'])
        },
        deleteMessage: (e) => {
          const { normalize: t, interpolate: n, named: o } = e
          return t(['您确定要删除测试项 "', n(o('name')), '" 吗？删除后该测试项下的所有产品也将被删除。'])
        },
        delete: (e) => {
          const { normalize: t } = e
          return t(['删除'])
        },
        cancel: (e) => {
          const { normalize: t } = e
          return t(['取消'])
        },
        unsavedChanges: (e) => {
          const { normalize: t } = e
          return t(['表单有未保存的更改。您确定要关闭吗？'])
        },
        unsavedChangesTitle: (e) => {
          const { normalize: t } = e
          return t(['未保存的更改'])
        },
      },
    },
    testProducts: {
      noData: (e) => {
        const { normalize: t } = e
        return t(['暂无产品数据'])
      },
      createdAt: (e) => {
        const { normalize: t } = e
        return t(['创建时间'])
      },
      status: {
        notStarted: (e) => {
          const { normalize: t } = e
          return t(['未开始'])
        },
        inProgress: (e) => {
          const { normalize: t } = e
          return t(['进行中'])
        },
        completed: (e) => {
          const { normalize: t } = e
          return t(['已完成'])
        },
        failed: (e) => {
          const { normalize: t } = e
          return t(['失败'])
        },
      },
      form: {
        addTitle: (e) => {
          const { normalize: t } = e
          return t(['新建测试产品'])
        },
        editTitle: (e) => {
          const { normalize: t } = e
          return t(['编辑测试产品'])
        },
        belongsToTestingItem: (e) => {
          const { normalize: t } = e
          return t(['所属测试项'])
        },
        productSerial: (e) => {
          const { normalize: t } = e
          return t(['产品序列号'])
        },
        productSerialPlaceholder: (e) => {
          const { normalize: t } = e
          return t(['请输入产品序列号'])
        },
        productSerialRequired: (e) => {
          const { normalize: t } = e
          return t(['产品序列号不能为空'])
        },
        productName: (e) => {
          const { normalize: t } = e
          return t(['产品名称'])
        },
        productNamePlaceholder: (e) => {
          const { normalize: t } = e
          return t(['请输入产品名称'])
        },
        productNameRequired: (e) => {
          const { normalize: t } = e
          return t(['产品名称不能为空'])
        },
        status: (e) => {
          const { normalize: t } = e
          return t(['测试状态'])
        },
        inheritedTestItems: (e) => {
          const { normalize: t } = e
          return t(['继承的测试项'])
        },
        inheritedTestItemsDescription: (e) => {
          const { normalize: t } = e
          return t(['以下测试项继承自所属测试项，不可修改'])
        },
      },
      messages: {
        created: (e) => {
          const { normalize: t } = e
          return t(['测试产品创建成功'])
        },
        updated: (e) => {
          const { normalize: t } = e
          return t(['测试产品更新成功'])
        },
        deleted: (e) => {
          const { normalize: t } = e
          return t(['测试产品删除成功'])
        },
      },
      confirm: {
        deleteTitle: (e) => {
          const { normalize: t } = e
          return t(['删除测试产品'])
        },
        deleteMessage: (e) => {
          const { normalize: t, interpolate: n, named: o } = e
          return t(['您确定要删除测试产品 "', n(o('name')), '" 吗？'])
        },
        delete: (e) => {
          const { normalize: t } = e
          return t(['删除'])
        },
        cancel: (e) => {
          const { normalize: t } = e
          return t(['取消'])
        },
      },
    },
  },
  c0 = Object.freeze(Object.defineProperty({ __proto__: null, default: u0 }, Symbol.toStringTag, { value: 'Module' })),
  d0 = {
    auth: {
      agree: (e) => {
        const { normalize: t } = e
        return t(['Acepto'])
      },
      createAccount: (e) => {
        const { normalize: t } = e
        return t(['Crear cuenta'])
      },
      createNewAccount: (e) => {
        const { normalize: t } = e
        return t(['Crear cuenta nueva'])
      },
      email: (e) => {
        const { normalize: t } = e
        return t(['Email'])
      },
      login: (e) => {
        const { normalize: t } = e
        return t(['Iniciar sesión'])
      },
      password: (e) => {
        const { normalize: t } = e
        return t(['Contraseña'])
      },
      recover_password: (e) => {
        const { normalize: t } = e
        return t(['Recuperar contraseña'])
      },
      sign_up: (e) => {
        const { normalize: t } = e
        return t(['Registrar'])
      },
      keep_logged_in: (e) => {
        const { normalize: t } = e
        return t(['Mantenerme conectado'])
      },
      termsOfUse: (e) => {
        const { normalize: t } = e
        return t(['Términos de uso'])
      },
      reset_password: (e) => {
        const { normalize: t } = e
        return t(['Restablecer contraseña'])
      },
    },
    404: {
      title: (e) => {
        const { normalize: t } = e
        return t(['Esta página se ha ido a pescar'])
      },
      text: (e) => {
        const { normalize: t } = e
        return t(['Si crees que esto no es correcto, por favor envíanos un mensaje a '])
      },
      back_button: (e) => {
        const { normalize: t } = e
        return t(['Volver al tablero'])
      },
    },
    typography: {
      primary: (e) => {
        const { normalize: t } = e
        return t(['Estilos de texto primarios'])
      },
      secondary: (e) => {
        const { normalize: t } = e
        return t(['Estilos de texto secundarios'])
      },
    },
    dashboard: {
      title: (e) => {
        const { normalize: t } = e
        return t(['Tablero'])
      },
      versions: (e) => {
        const { normalize: t } = e
        return t(['Versiones'])
      },
      setupRemoteConnections: (e) => {
        const { normalize: t } = e
        return t(['Configurar conexiones remotas'])
      },
      currentVisitors: (e) => {
        const { normalize: t } = e
        return t(['Visitantes actuales'])
      },
      metrics: {
        openInvoices: (e) => {
          const { normalize: t } = e
          return t(['Facturas Abiertas'])
        },
        ongoingProjects: (e) => {
          const { normalize: t } = e
          return t(['Materiales en Curso'])
        },
        employees: (e) => {
          const { normalize: t } = e
          return t(['Empleados'])
        },
        newProfit: (e) => {
          const { normalize: t } = e
          return t(['Nueva Ganancia'])
        },
      },
      cards: {
        revenueReport: (e) => {
          const { normalize: t } = e
          return t(['Informe de Ingresos'])
        },
        yearlyBreakup: (e) => {
          const { normalize: t } = e
          return t(['Desglose Anual'])
        },
        monthlyEarnings: (e) => {
          const { normalize: t } = e
          return t(['Ganancias Mensuales'])
        },
        revenueByLocation: (e) => {
          const { normalize: t } = e
          return t(['Ingresos por Ubicación'])
        },
        revenueByTopRegions: (e) => {
          const { normalize: t } = e
          return t(['Ingresos por Principales Regiones'])
        },
        regionRevenue: (e) => {
          const { normalize: t } = e
          return t(['Ingresos Regionales'])
        },
        projectTable: (e) => {
          const { normalize: t } = e
          return t(['Gestión de Materiales'])
        },
        timeline: (e) => {
          const { normalize: t } = e
          return t(['Cronología'])
        },
        countries: (e) => {
          const { normalize: t } = e
          return t(['Países'])
        },
        totalEarnings: (e) => {
          const { normalize: t } = e
          return t(['Ganancias Totales'])
        },
        earningsThisMonth: (e) => {
          const { normalize: t } = e
          return t(['Ganancias este mes'])
        },
        expensesThisMonth: (e) => {
          const { normalize: t } = e
          return t(['Gastos este mes'])
        },
        export: (e) => {
          const { normalize: t } = e
          return t(['Exportar'])
        },
        lastYear: (e) => {
          const { normalize: t } = e
          return t(['año pasado'])
        },
        lastMonth: (e) => {
          const { normalize: t } = e
          return t(['mes pasado'])
        },
        earnings: (e) => {
          const { normalize: t } = e
          return t(['Ganancias'])
        },
        profit: (e) => {
          const { normalize: t } = e
          return t(['Ganancia'])
        },
        expenses: (e) => {
          const { normalize: t } = e
          return t(['Gastos'])
        },
        viewAllProjects: (e) => {
          const { normalize: t } = e
          return t(['Ver todos los materiales'])
        },
      },
      table: {
        name: (e) => {
          const { normalize: t } = e
          return t(['Nombre'])
        },
        status: (e) => {
          const { normalize: t } = e
          return t(['Estado'])
        },
        team: (e) => {
          const { normalize: t } = e
          return t(['Equipo'])
        },
        topRegion: (e) => {
          const { normalize: t } = e
          return t(['Región Principal'])
        },
        revenue: (e) => {
          const { normalize: t } = e
          return t(['Ingresos'])
        },
      },
      time: {
        today: (e) => {
          const { normalize: t } = e
          return t(['Hoy'])
        },
        week: (e) => {
          const { normalize: t } = e
          return t(['Semana'])
        },
        month: (e) => {
          const { normalize: t } = e
          return t(['Mes'])
        },
        sinceLastMonth: (e) => {
          const { normalize: t } = e
          return t(['desde el mes pasado'])
        },
      },
      timeline: {
        updatedStatus: (e) => {
          const { normalize: t } = e
          return t(['actualizó el estado de'])
        },
        awaitingResponse: (e) => {
          const { normalize: t } = e
          return t(['en espera de respuesta del cliente'])
        },
        addedToGroup: (e) => {
          const { normalize: t } = e
          return t(['fue agregado al grupo'])
        },
        groupName: (e) => {
          const { normalize: t } = e
          return t(['el nombre del grupo es'])
        },
        openedShowcase: (e) => {
          const { normalize: t } = e
          return t(['abrió nueva vitrina'])
        },
        withTheme: (e) => {
          const { normalize: t } = e
          return t(['con tema de mercado'])
        },
        updatedStatusTo: (e) => {
          const { normalize: t } = e
          return t(['actualizó el estado a'])
        },
        projectCreated: (e) => {
          const { normalize: t } = e
          return t(['Proyecto'])
        },
        wasCreated: (e) => {
          const { normalize: t } = e
          return t(['fue creado'])
        },
      },
      actions: {
        export: (e) => {
          const { normalize: t } = e
          return t(['Exportar'])
        },
      },
      months: {
        jan: (e) => {
          const { normalize: t } = e
          return t(['Enero'])
        },
        feb: (e) => {
          const { normalize: t } = e
          return t(['Febrero'])
        },
        mar: (e) => {
          const { normalize: t } = e
          return t(['Marzo'])
        },
        apr: (e) => {
          const { normalize: t } = e
          return t(['Abril'])
        },
        may: (e) => {
          const { normalize: t } = e
          return t(['Mayo'])
        },
        jun: (e) => {
          const { normalize: t } = e
          return t(['Junio'])
        },
        jul: (e) => {
          const { normalize: t } = e
          return t(['Julio'])
        },
        aug: (e) => {
          const { normalize: t } = e
          return t(['Agosto'])
        },
        sep: (e) => {
          const { normalize: t } = e
          return t(['Septiembre'])
        },
        oct: (e) => {
          const { normalize: t } = e
          return t(['Octubre'])
        },
        nov: (e) => {
          const { normalize: t } = e
          return t(['Noviembre'])
        },
        dec: (e) => {
          const { normalize: t } = e
          return t(['Diciembre'])
        },
      },
      charts: {
        trendyTrends: (e) => {
          const { normalize: t } = e
          return t(['Tendencias modernas'])
        },
        showInMoreDetail: (e) => {
          const { normalize: t } = e
          return t(['Mostrar en más detalle'])
        },
        showInLessDetail: (e) => {
          const { normalize: t } = e
          return t(['Mostrar en menos detalle'])
        },
        loadingSpeed: (e) => {
          const { normalize: t } = e
          return t(['Velocidad de carga'])
        },
        topContributors: (e) => {
          const { normalize: t } = e
          return t(['Principales contribuyentes'])
        },
        showNextFive: (e) => {
          const { normalize: t } = e
          return t(['Mostrar los siguientes cinco'])
        },
        commits: (e) => {
          const { normalize: t } = e
          return t(['Commit'])
        },
      },
      info: {
        componentRichTheme: (e) => {
          const { normalize: t } = e
          return t(['Tema rico en componentes'])
        },
        completedPullRequests: (e) => {
          const { normalize: t } = e
          return t(['Solicitudes de pull completadas'])
        },
        users: (e) => {
          const { normalize: t } = e
          return t(['Usuarios'])
        },
        points: (e) => {
          const { normalize: t } = e
          return t(['Puntos'])
        },
        units: (e) => {
          const { normalize: t } = e
          return t(['Unidades'])
        },
        exploreGallery: (e) => {
          const { normalize: t } = e
          return t(['Explorar galería'])
        },
        viewLibrary: (e) => {
          const { normalize: t } = e
          return t(['Ver biblioteca'])
        },
        commits: (e) => {
          const { normalize: t } = e
          return t(['Commits'])
        },
        components: (e) => {
          const { normalize: t } = e
          return t(['Componentes'])
        },
        teamMembers: (e) => {
          const { normalize: t } = e
          return t(['Miembros del equipo'])
        },
      },
      tabs: {
        overview: {
          title: (e) => {
            const { normalize: t } = e
            return t(['Visión general'])
          },
          built: (e) => {
            const { normalize: t } = e
            return t(['Construido con el framework Vue.js'])
          },
          free: (e) => {
            const { normalize: t } = e
            return t(['Totalmente gratuito para todos'])
          },
          fresh: (e) => {
            const { normalize: t } = e
            return t(['Diseño fresco y nítido'])
          },
          mobile: (e) => {
            const { normalize: t } = e
            return t(['Responsivo y optimizado para móviles'])
          },
          components: (e) => {
            const { normalize: t } = e
            return t(['Toneladas de componentes útiles'])
          },
          nojQuery: (e) => {
            const { normalize: t } = e
            return t(['Totalmente libre de jQuery'])
          },
        },
        billingAddress: {
          title: (e) => {
            const { normalize: t } = e
            return t(['Dirección de facturación'])
          },
          personalInfo: (e) => {
            const { normalize: t } = e
            return t(['Información personal'])
          },
          firstName: (e) => {
            const { normalize: t } = e
            return t(['Nombre y apellido'])
          },
          email: (e) => {
            const { normalize: t } = e
            return t(['Email'])
          },
          address: (e) => {
            const { normalize: t } = e
            return t(['Dirección'])
          },
          companyInfo: (e) => {
            const { normalize: t } = e
            return t(['Información de la empresa'])
          },
          city: (e) => {
            const { normalize: t } = e
            return t(['Ciudad'])
          },
          country: (e) => {
            const { normalize: t } = e
            return t(['País'])
          },
          infiniteConnections: (e) => {
            const { normalize: t } = e
            return t(['Conexiones infinitas'])
          },
          addConnection: (e) => {
            const { normalize: t } = e
            return t(['Añadir conexión'])
          },
        },
        bankDetails: {
          title: (e) => {
            const { normalize: t } = e
            return t(['Detalles del banco'])
          },
          detailsFields: (e) => {
            const { normalize: t } = e
            return t(['Campos de detalles'])
          },
          bankName: (e) => {
            const { normalize: t } = e
            return t(['Nombre del banco'])
          },
          accountName: (e) => {
            const { normalize: t } = e
            return t(['Nombre de la cuenta'])
          },
          sortCode: (e) => {
            const { normalize: t } = e
            return t(['Código de ordenación'])
          },
          accountNumber: (e) => {
            const { normalize: t } = e
            return t(['Número de cuenta'])
          },
          notes: (e) => {
            const { normalize: t } = e
            return t(['Notas'])
          },
          sendDetails: (e) => {
            const { normalize: t } = e
            return t(['Enviar detalles'])
          },
        },
      },
      navigationLayout: (e) => {
        const { normalize: t } = e
        return t(['Diseño de navegación'])
      },
      topBarButton: (e) => {
        const { normalize: t } = e
        return t(['Barra superior'])
      },
      sideBarButton: (e) => {
        const { normalize: t } = e
        return t(['Barra lateral'])
      },
    },
    language: {
      brazilian_portuguese: (e) => {
        const { normalize: t } = e
        return t(['Portugués brasileño'])
      },
      english: (e) => {
        const { normalize: t } = e
        return t(['Inglés'])
      },
      spanish: (e) => {
        const { normalize: t } = e
        return t(['Español'])
      },
      simplified_chinese: (e) => {
        const { normalize: t } = e
        return t(['Chino simplificado'])
      },
      persian: (e) => {
        const { normalize: t } = e
        return t(['Persa'])
      },
    },
    menu: {
      auth: (e) => {
        const { normalize: t } = e
        return t(['Autenticación'])
      },
      buttons: (e) => {
        const { normalize: t } = e
        return t(['Botones'])
      },
      timelines: (e) => {
        const { normalize: t } = e
        return t(['Líneas de tiempo'])
      },
      dashboard: (e) => {
        const { normalize: t } = e
        return t(['Tablero'])
      },
      billing: (e) => {
        const { normalize: t } = e
        return t(['Facturación'])
      },
      login: (e) => {
        const { normalize: t } = e
        return t(['Iniciar sesión'])
      },
      preferences: (e) => {
        const { normalize: t } = e
        return t(['Preferencias'])
      },
      payments: (e) => {
        const { normalize: t } = e
        return t(['Pagos'])
      },
      'pricing-plans': (e) => {
        const { normalize: t } = e
        return t(['Planes de precios'])
      },
      'login-singup': (e) => {
        const { normalize: t } = e
        return t(['Iniciar sesión/Registrarse'])
      },
      404: (e) => {
        const { normalize: t } = e
        return t(['Páginas 404'])
      },
      faq: (e) => {
        const { normalize: t } = e
        return t(['FAQ'])
      },
      users: (e) => {
        const { normalize: t } = e
        return t(['Usuarios'])
      },
      projects: (e) => {
        const { normalize: t } = e
        return t(['Gestión de Materiales'])
      },
      testingItem: (e) => {
        const { normalize: t } = e
        return t(['Elemento de Prueba'])
      },
    },
    projects: {
      viewMode: {
        cards: (e) => {
          const { normalize: t } = e
          return t(['Tarjetas'])
        },
        table: (e) => {
          const { normalize: t } = e
          return t(['Tabla'])
        },
      },
      table: {
        projectName: (e) => {
          const { normalize: t } = e
          return t(['Nombre del Material'])
        },
        projectOwner: (e) => {
          const { normalize: t } = e
          return t(['Propietario'])
        },
        team: (e) => {
          const { normalize: t } = e
          return t(['Equipo'])
        },
        status: (e) => {
          const { normalize: t } = e
          return t(['Estado'])
        },
        creationDate: (e) => {
          const { normalize: t } = e
          return t(['Fecha de Creación'])
        },
        actions: (e) => {
          const { normalize: t } = e
          return t(['Acciones'])
        },
        editProject: (e) => {
          const { normalize: t } = e
          return t(['Editar Material'])
        },
        deleteProject: (e) => {
          const { normalize: t } = e
          return t(['Eliminar Material'])
        },
        results: (e) => {
          const { normalize: t } = e
          return t(['resultados'])
        },
        resultsPerPage: (e) => {
          const { normalize: t } = e
          return t(['Resultados por página'])
        },
        previousPage: (e) => {
          const { normalize: t } = e
          return t(['Página anterior'])
        },
        nextPage: (e) => {
          const { normalize: t } = e
          return t(['Página siguiente'])
        },
      },
      status: {
        inProgress: (e) => {
          const { normalize: t } = e
          return t(['En Progreso'])
        },
        archived: (e) => {
          const { normalize: t } = e
          return t(['Archivado'])
        },
        completed: (e) => {
          const { normalize: t } = e
          return t(['Completado'])
        },
        important: (e) => {
          const { normalize: t } = e
          return t(['Importante'])
        },
      },
    },
    messages: {
      all: (e) => {
        const { normalize: t } = e
        return t(['Ver todos los mensajes'])
      },
      new: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['Nuevos mensajes de ', n(o('name'))])
      },
      mark_as_read: (e) => {
        const { normalize: t } = e
        return t(['Marcar como leído'])
      },
    },
    navbar: {
      messageUs: (e) => {
        const { normalize: t } = e
        return t(['Preguntas sobre desarrollo web:'])
      },
      repository: (e) => {
        const { normalize: t } = e
        return t(['Repositorio GitHub'])
      },
    },
    notifications: {
      all: (e) => {
        const { normalize: t } = e
        return t(['Ver todas las notificaciones'])
      },
      mark_as_read: (e) => {
        const { normalize: t } = e
        return t(['Marcar como leída'])
      },
      sentMessage: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t([n(o('name')), ' te envió un mensaje'])
      },
      uploadedZip: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t([n(o('name')), ' subió un archivo Zip con ', n(o('type'))])
      },
      startedTopic: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t([n(o('name')), ' inició un nuevo tema'])
      },
    },
    user: {
      language: (e) => {
        const { normalize: t } = e
        return t(['Cambiar Idioma'])
      },
      logout: (e) => {
        const { normalize: t } = e
        return t(['Cerrar sesión'])
      },
      profile: (e) => {
        const { normalize: t } = e
        return t(['Mi Perfil'])
      },
      settings: (e) => {
        const { normalize: t } = e
        return t(['Configuración'])
      },
      billing: (e) => {
        const { normalize: t } = e
        return t(['Facturación'])
      },
      faq: (e) => {
        const { normalize: t } = e
        return t(['Preguntas Frecuentes'])
      },
      helpAndSupport: (e) => {
        const { normalize: t } = e
        return t(['Ayuda & Soporte'])
      },
      projects: (e) => {
        const { normalize: t } = e
        return t(['Gestión de Materiales'])
      },
      account: (e) => {
        const { normalize: t } = e
        return t(['Cuenta'])
      },
      explore: (e) => {
        const { normalize: t } = e
        return t(['Explorar'])
      },
    },
    helpAndSupport: (e) => {
      const { normalize: t } = e
      return t(['Ayuda y Soporte'])
    },
    aboutVuesticAdmin: (e) => {
      const { normalize: t } = e
      return t(['Acerca de Vuestic Admin'])
    },
    search: {
      placeholder: (e) => {
        const { normalize: t } = e
        return t(['Buscar...'])
      },
    },
    vuestic: {
      search: (e) => {
        const { normalize: t } = e
        return t(['Buscar'])
      },
      noOptions: (e) => {
        const { normalize: t } = e
        return t(['No se encontraron elementos'])
      },
      ok: (e) => {
        const { normalize: t } = e
        return t(['Aceptar'])
      },
      cancel: (e) => {
        const { normalize: t } = e
        return t(['Cancelar'])
      },
      uploadFile: (e) => {
        const { normalize: t } = e
        return t(['Subir archivo'])
      },
      undo: (e) => {
        const { normalize: t } = e
        return t(['Deshacer'])
      },
      dropzone: (e) => {
        const { normalize: t } = e
        return t(['Suelta los archivos aquí para subirlos'])
      },
      fileDeleted: (e) => {
        const { normalize: t } = e
        return t(['Archivo eliminado'])
      },
      closeAlert: (e) => {
        const { normalize: t } = e
        return t(['cerrar alerta'])
      },
      backToTop: (e) => {
        const { normalize: t } = e
        return t(['volver al inicio'])
      },
      toggleDropdown: (e) => {
        const { normalize: t } = e
        return t(['alternar menú desplegable'])
      },
      carousel: (e) => {
        const { normalize: t } = e
        return t(['carrusel'])
      },
      goPreviousSlide: (e) => {
        const { normalize: t } = e
        return t(['ir a la diapositiva anterior'])
      },
      goNextSlide: (e) => {
        const { normalize: t } = e
        return t(['ir a la siguiente diapositiva'])
      },
      goSlide: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['ir a la diapositiva ', n(o('index'))])
      },
      slideOf: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['diapositiva ', n(o('index')), ' de ', n(o('length'))])
      },
      close: (e) => {
        const { normalize: t } = e
        return t(['cerrar'])
      },
      openColorPicker: (e) => {
        const { normalize: t } = e
        return t(['abrir selector de color'])
      },
      colorSelection: (e) => {
        const { normalize: t } = e
        return t(['selección de color'])
      },
      colorName: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['color ', n(o('color'))])
      },
      decreaseCounter: (e) => {
        const { normalize: t } = e
        return t(['disminuir contador'])
      },
      increaseCounter: (e) => {
        const { normalize: t } = e
        return t(['aumentar contador'])
      },
      selectAllRows: (e) => {
        const { normalize: t } = e
        return t(['seleccionar todas las filas'])
      },
      sortColumnBy: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['ordenar columna por ', n(o('name'))])
      },
      selectRowByIndex: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['seleccionar fila ', n(o('index'))])
      },
      resetDate: (e) => {
        const { normalize: t } = e
        return t(['restablecer fecha'])
      },
      nextPeriod: (e) => {
        const { normalize: t } = e
        return t(['siguiente periodo'])
      },
      switchView: (e) => {
        const { normalize: t } = e
        return t(['cambiar vista'])
      },
      previousPeriod: (e) => {
        const { normalize: t } = e
        return t(['periodo anterior'])
      },
      removeFile: (e) => {
        const { normalize: t } = e
        return t(['eliminar archivo'])
      },
      reset: (e) => {
        const { normalize: t } = e
        return t(['restablecer'])
      },
      pagination: (e) => {
        const { normalize: t } = e
        return t(['paginación'])
      },
      goToTheFirstPage: (e) => {
        const { normalize: t } = e
        return t(['ir a la primera página'])
      },
      goToPreviousPage: (e) => {
        const { normalize: t } = e
        return t(['ir a la página anterior'])
      },
      goToSpecificPage: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['ir a la página ', n(o('page'))])
      },
      goToSpecificPageInput: (e) => {
        const { normalize: t } = e
        return t(['ingresa el número de página'])
      },
      goNextPage: (e) => {
        const { normalize: t } = e
        return t(['ir a la siguiente página'])
      },
      goLastPage: (e) => {
        const { normalize: t } = e
        return t(['ir a la última página'])
      },
      currentRating: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['calificación actual ', n(o('value')), ' de ', n(o('max'))])
      },
      voteRating: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['votar calificación ', n(o('value')), ' de ', n(o('max'))])
      },
      optionsFilter: (e) => {
        const { normalize: t } = e
        return t(['filtro de opciones'])
      },
      splitPanels: (e) => {
        const { normalize: t } = e
        return t(['paneles divididos'])
      },
      movePaginationLeft: (e) => {
        const { normalize: t } = e
        return t(['mover paginación a la izquierda'])
      },
      movePaginationRight: (e) => {
        const { normalize: t } = e
        return t(['mover paginación a la derecha'])
      },
      resetTime: (e) => {
        const { normalize: t } = e
        return t(['restablecer hora'])
      },
      closeToast: (e) => {
        const { normalize: t } = e
        return t(['cerrar notificación'])
      },
      selectedOption: (e) => {
        const { normalize: t } = e
        return t(['Opción seleccionada'])
      },
      noSelectedOption: (e) => {
        const { normalize: t } = e
        return t(['No se ha seleccionado una opción'])
      },
      breadcrumbs: (e) => {
        const { normalize: t } = e
        return t(['migas de pan'])
      },
      counterValue: (e) => {
        const { normalize: t } = e
        return t(['valor del contador'])
      },
      selectedDate: (e) => {
        const { normalize: t } = e
        return t(['fecha seleccionada'])
      },
      selectedTime: (e) => {
        const { normalize: t } = e
        return t(['hora seleccionada'])
      },
      progressState: (e) => {
        const { normalize: t } = e
        return t(['estado del progreso'])
      },
      color: (e) => {
        const { normalize: t } = e
        return t(['color'])
      },
      next: (e) => {
        const { normalize: t } = e
        return t(['Siguiente'])
      },
      back: (e) => {
        const { normalize: t } = e
        return t(['Anterior'])
      },
      finish: (e) => {
        const { normalize: t } = e
        return t(['Finalizar'])
      },
      step: (e) => {
        const { normalize: t } = e
        return t(['paso'])
      },
      progress: (e) => {
        const { normalize: t } = e
        return t(['progreso'])
      },
      loading: (e) => {
        const { normalize: t } = e
        return t(['Cargando'])
      },
      sliderValue: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['El valor actual del control deslizante es ', n(o('value'))])
      },
      switch: (e) => {
        const { normalize: t } = e
        return t(['Cambiar'])
      },
      inputField: (e) => {
        const { normalize: t } = e
        return t(['Campo de entrada'])
      },
      fileTypeIncorrect: (e) => {
        const { normalize: t } = e
        return t(['El tipo de archivo es incorrecto'])
      },
      select: (e) => {
        const { normalize: t } = e
        return t(['Seleccionar una opción'])
      },
    },
  },
  m0 = Object.freeze(Object.defineProperty({ __proto__: null, default: d0 }, Symbol.toStringTag, { value: 'Module' })),
  f0 = {
    auth: {
      agree: (e) => {
        const { normalize: t } = e
        return t(['I agree to'])
      },
      createAccount: (e) => {
        const { normalize: t } = e
        return t(['Create account'])
      },
      createNewAccount: (e) => {
        const { normalize: t } = e
        return t(['Create New Account'])
      },
      email: (e) => {
        const { normalize: t } = e
        return t(['Email'])
      },
      login: (e) => {
        const { normalize: t } = e
        return t(['Login'])
      },
      password: (e) => {
        const { normalize: t } = e
        return t(['Password'])
      },
      recover_password: (e) => {
        const { normalize: t } = e
        return t(['Recover password'])
      },
      sign_up: (e) => {
        const { normalize: t } = e
        return t(['Sign Up'])
      },
      keep_logged_in: (e) => {
        const { normalize: t } = e
        return t(['Keep me logged in'])
      },
      termsOfUse: (e) => {
        const { normalize: t } = e
        return t(['Terms of Use.'])
      },
      reset_password: (e) => {
        const { normalize: t } = e
        return t(['Reset password'])
      },
    },
    404: {
      title: (e) => {
        const { normalize: t } = e
        return t(['This page’s gone fishing.'])
      },
      text: (e) => {
        const { normalize: t } = e
        return t(['If you feel that it’s not right, please send us a message at '])
      },
      back_button: (e) => {
        const { normalize: t } = e
        return t(['Back to dashboard'])
      },
    },
    typography: {
      primary: (e) => {
        const { normalize: t } = e
        return t(['Primary text styles'])
      },
      secondary: (e) => {
        const { normalize: t } = e
        return t(['Secondary text styles'])
      },
    },
    dashboard: {
      title: (e) => {
        const { normalize: t } = e
        return t(['Dashboard'])
      },
      versions: (e) => {
        const { normalize: t } = e
        return t(['Versions'])
      },
      setupRemoteConnections: (e) => {
        const { normalize: t } = e
        return t(['Setup Remote Connections'])
      },
      currentVisitors: (e) => {
        const { normalize: t } = e
        return t(['Current Visitors'])
      },
      metrics: {
        openInvoices: (e) => {
          const { normalize: t } = e
          return t(['Open Invoices'])
        },
        ongoingProjects: (e) => {
          const { normalize: t } = e
          return t(['Ongoing Materials'])
        },
        employees: (e) => {
          const { normalize: t } = e
          return t(['Employees'])
        },
        newProfit: (e) => {
          const { normalize: t } = e
          return t(['New Profit'])
        },
      },
      cards: {
        revenueReport: (e) => {
          const { normalize: t } = e
          return t(['Revenue Report'])
        },
        yearlyBreakup: (e) => {
          const { normalize: t } = e
          return t(['Yearly Breakup'])
        },
        monthlyEarnings: (e) => {
          const { normalize: t } = e
          return t(['Monthly Earnings'])
        },
        revenueByLocation: (e) => {
          const { normalize: t } = e
          return t(['Revenue by Location'])
        },
        revenueByTopRegions: (e) => {
          const { normalize: t } = e
          return t(['Revenue by Top Regions'])
        },
        regionRevenue: (e) => {
          const { normalize: t } = e
          return t(['Region Revenue'])
        },
        projectTable: (e) => {
          const { normalize: t } = e
          return t(['Material Management'])
        },
        timeline: (e) => {
          const { normalize: t } = e
          return t(['Timeline'])
        },
        countries: (e) => {
          const { normalize: t } = e
          return t(['Countries'])
        },
        totalEarnings: (e) => {
          const { normalize: t } = e
          return t(['Total Earnings'])
        },
        earningsThisMonth: (e) => {
          const { normalize: t } = e
          return t(['Earnings this month'])
        },
        expensesThisMonth: (e) => {
          const { normalize: t } = e
          return t(['Expenses this month'])
        },
        export: (e) => {
          const { normalize: t } = e
          return t(['Export'])
        },
        lastYear: (e) => {
          const { normalize: t } = e
          return t(['last year'])
        },
        lastMonth: (e) => {
          const { normalize: t } = e
          return t(['last month'])
        },
        earnings: (e) => {
          const { normalize: t } = e
          return t(['Earnings'])
        },
        profit: (e) => {
          const { normalize: t } = e
          return t(['Profit'])
        },
        expenses: (e) => {
          const { normalize: t } = e
          return t(['Expenses'])
        },
        viewAllProjects: (e) => {
          const { normalize: t } = e
          return t(['View all materials'])
        },
      },
      table: {
        name: (e) => {
          const { normalize: t } = e
          return t(['Name'])
        },
        status: (e) => {
          const { normalize: t } = e
          return t(['Status'])
        },
        team: (e) => {
          const { normalize: t } = e
          return t(['Team'])
        },
        topRegion: (e) => {
          const { normalize: t } = e
          return t(['Top Region'])
        },
        revenue: (e) => {
          const { normalize: t } = e
          return t(['Revenue'])
        },
      },
      time: {
        today: (e) => {
          const { normalize: t } = e
          return t(['Today'])
        },
        week: (e) => {
          const { normalize: t } = e
          return t(['Week'])
        },
        month: (e) => {
          const { normalize: t } = e
          return t(['Month'])
        },
        sinceLastMonth: (e) => {
          const { normalize: t } = e
          return t(['since last month'])
        },
      },
      timeline: {
        updatedStatus: (e) => {
          const { normalize: t } = e
          return t(['updated the status of'])
        },
        awaitingResponse: (e) => {
          const { normalize: t } = e
          return t(['to awaiting customer response'])
        },
        addedToGroup: (e) => {
          const { normalize: t } = e
          return t(['was added to the group'])
        },
        groupName: (e) => {
          const { normalize: t } = e
          return t(['group name is'])
        },
        openedShowcase: (e) => {
          const { normalize: t } = e
          return t(['opened new showcase'])
        },
        withTheme: (e) => {
          const { normalize: t } = e
          return t(['with theme market'])
        },
        updatedStatusTo: (e) => {
          const { normalize: t } = e
          return t(['updated the status to'])
        },
        projectCreated: (e) => {
          const { normalize: t } = e
          return t(['Project'])
        },
        wasCreated: (e) => {
          const { normalize: t } = e
          return t(['was created'])
        },
      },
      actions: {
        export: (e) => {
          const { normalize: t } = e
          return t(['Export'])
        },
      },
      months: {
        jan: (e) => {
          const { normalize: t } = e
          return t(['January'])
        },
        feb: (e) => {
          const { normalize: t } = e
          return t(['February'])
        },
        mar: (e) => {
          const { normalize: t } = e
          return t(['March'])
        },
        apr: (e) => {
          const { normalize: t } = e
          return t(['April'])
        },
        may: (e) => {
          const { normalize: t } = e
          return t(['May'])
        },
        jun: (e) => {
          const { normalize: t } = e
          return t(['June'])
        },
        jul: (e) => {
          const { normalize: t } = e
          return t(['July'])
        },
        aug: (e) => {
          const { normalize: t } = e
          return t(['August'])
        },
        sep: (e) => {
          const { normalize: t } = e
          return t(['September'])
        },
        oct: (e) => {
          const { normalize: t } = e
          return t(['October'])
        },
        nov: (e) => {
          const { normalize: t } = e
          return t(['November'])
        },
        dec: (e) => {
          const { normalize: t } = e
          return t(['December'])
        },
      },
      charts: {
        trendyTrends: (e) => {
          const { normalize: t } = e
          return t(['Trendy Trends'])
        },
        showInMoreDetail: (e) => {
          const { normalize: t } = e
          return t(['Show in more detail'])
        },
        showInLessDetail: (e) => {
          const { normalize: t } = e
          return t(['Show in less detail'])
        },
        loadingSpeed: (e) => {
          const { normalize: t } = e
          return t(['Loading speed'])
        },
        topContributors: (e) => {
          const { normalize: t } = e
          return t(['Top contributors'])
        },
        showNextFive: (e) => {
          const { normalize: t } = e
          return t(['Show next five'])
        },
        commits: (e) => {
          const { normalize: t } = e
          return t(['Commits'])
        },
      },
      navigationLayout: (e) => {
        const { normalize: t } = e
        return t(['Navigation layout'])
      },
      topBarButton: (e) => {
        const { normalize: t } = e
        return t(['Top Bar'])
      },
      sideBarButton: (e) => {
        const { normalize: t } = e
        return t(['Side Bar'])
      },
    },
    language: {
      brazilian_portuguese: (e) => {
        const { normalize: t } = e
        return t(['Português'])
      },
      english: (e) => {
        const { normalize: t } = e
        return t(['English'])
      },
      spanish: (e) => {
        const { normalize: t } = e
        return t(['Spanish'])
      },
      simplified_chinese: (e) => {
        const { normalize: t } = e
        return t(['Simplified Chinese'])
      },
      persian: (e) => {
        const { normalize: t } = e
        return t(['Persian'])
      },
    },
    menu: {
      home: (e) => {
        const { normalize: t } = e
        return t(['Home'])
      },
      auth: (e) => {
        const { normalize: t } = e
        return t(['Auth'])
      },
      buttons: (e) => {
        const { normalize: t } = e
        return t(['Buttons'])
      },
      timelines: (e) => {
        const { normalize: t } = e
        return t(['Timelines'])
      },
      dashboard: (e) => {
        const { normalize: t } = e
        return t(['Dashboard'])
      },
      billing: (e) => {
        const { normalize: t } = e
        return t(['Billing'])
      },
      login: (e) => {
        const { normalize: t } = e
        return t(['Login'])
      },
      preferences: (e) => {
        const { normalize: t } = e
        return t(['Account preferences'])
      },
      payments: (e) => {
        const { normalize: t } = e
        return t(['Payments'])
      },
      settings: (e) => {
        const { normalize: t } = e
        return t(['Application settings'])
      },
      'pricing-plans': (e) => {
        const { normalize: t } = e
        return t(['Pricing plans'])
      },
      'payment-methods': (e) => {
        const { normalize: t } = e
        return t(['Payment methods'])
      },
      signup: (e) => {
        const { normalize: t } = e
        return t(['Signup'])
      },
      'recover-password': (e) => {
        const { normalize: t } = e
        return t(['Recover password'])
      },
      'recover-password-email': (e) => {
        const { normalize: t } = e
        return t(['Recover password email'])
      },
      404: (e) => {
        const { normalize: t } = e
        return t(['404'])
      },
      faq: (e) => {
        const { normalize: t } = e
        return t(['FAQ'])
      },
      users: (e) => {
        const { normalize: t } = e
        return t(['Users'])
      },
      projects: (e) => {
        const { normalize: t } = e
        return t(['Material Management'])
      },
      testingItem: (e) => {
        const { normalize: t } = e
        return t(['Testing Item'])
      },
    },
    projects: {
      viewMode: {
        cards: (e) => {
          const { normalize: t } = e
          return t(['Cards'])
        },
        table: (e) => {
          const { normalize: t } = e
          return t(['Table'])
        },
      },
      table: {
        projectName: (e) => {
          const { normalize: t } = e
          return t(['Material Name'])
        },
        projectOwner: (e) => {
          const { normalize: t } = e
          return t(['Owner'])
        },
        team: (e) => {
          const { normalize: t } = e
          return t(['Team'])
        },
        status: (e) => {
          const { normalize: t } = e
          return t(['Status'])
        },
        creationDate: (e) => {
          const { normalize: t } = e
          return t(['Creation Date'])
        },
        actions: (e) => {
          const { normalize: t } = e
          return t(['Actions'])
        },
        editProject: (e) => {
          const { normalize: t } = e
          return t(['Edit Material'])
        },
        deleteProject: (e) => {
          const { normalize: t } = e
          return t(['Delete Material'])
        },
        results: (e) => {
          const { normalize: t } = e
          return t(['results'])
        },
        resultsPerPage: (e) => {
          const { normalize: t } = e
          return t(['Results per page'])
        },
        previousPage: (e) => {
          const { normalize: t } = e
          return t(['Previous page'])
        },
        nextPage: (e) => {
          const { normalize: t } = e
          return t(['Next page'])
        },
      },
      status: {
        inProgress: (e) => {
          const { normalize: t } = e
          return t(['In Progress'])
        },
        archived: (e) => {
          const { normalize: t } = e
          return t(['Archived'])
        },
        completed: (e) => {
          const { normalize: t } = e
          return t(['Completed'])
        },
        important: (e) => {
          const { normalize: t } = e
          return t(['Important'])
        },
      },
    },
    messages: {
      all: (e) => {
        const { normalize: t } = e
        return t(['See all messages'])
      },
      new: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['New messages from ', n(o('name'))])
      },
      mark_as_read: (e) => {
        const { normalize: t } = e
        return t(['Mark As Read'])
      },
    },
    settings: {
      theme: (e) => {
        const { normalize: t } = e
        return t(['Theme'])
      },
      generalPreferences: (e) => {
        const { normalize: t } = e
        return t(['General Preferences'])
      },
      language: (e) => {
        const { normalize: t } = e
        return t(['Language'])
      },
    },
    navbar: {
      messageUs: (e) => {
        const { normalize: t } = e
        return t(['Web development inquiries:'])
      },
      repository: (e) => {
        const { normalize: t } = e
        return t(['GitHub Repo'])
      },
    },
    notifications: {
      all: (e) => {
        const { normalize: t } = e
        return t(['See all notifications'])
      },
      less: (e) => {
        const { normalize: t } = e
        return t(['See less notifications'])
      },
      mark_as_read: (e) => {
        const { normalize: t } = e
        return t(['Mark as read'])
      },
      sentMessage: (e) => {
        const { normalize: t } = e
        return t(['sent you a message'])
      },
      uploadedZip: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['uploaded a new Zip file with ', n(o('type'))])
      },
      startedTopic: (e) => {
        const { normalize: t } = e
        return t(['started a new topic'])
      },
    },
    user: {
      language: (e) => {
        const { normalize: t } = e
        return t(['Change language'])
      },
      logout: (e) => {
        const { normalize: t } = e
        return t(['Logout'])
      },
      profile: (e) => {
        const { normalize: t } = e
        return t(['Profile'])
      },
      settings: (e) => {
        const { normalize: t } = e
        return t(['Settings'])
      },
      billing: (e) => {
        const { normalize: t } = e
        return t(['Billing'])
      },
      faq: (e) => {
        const { normalize: t } = e
        return t(['FAQ'])
      },
      helpAndSupport: (e) => {
        const { normalize: t } = e
        return t(['Help & support'])
      },
      projects: (e) => {
        const { normalize: t } = e
        return t(['Material Management'])
      },
      account: (e) => {
        const { normalize: t } = e
        return t(['Account'])
      },
      explore: (e) => {
        const { normalize: t } = e
        return t(['Explore'])
      },
    },
    treeView: {
      basic: (e) => {
        const { normalize: t } = e
        return t(['Basic'])
      },
      icons: (e) => {
        const { normalize: t } = e
        return t(['Icons'])
      },
      selectable: (e) => {
        const { normalize: t } = e
        return t(['Selectable'])
      },
      editable: (e) => {
        const { normalize: t } = e
        return t(['Editable'])
      },
      advanced: (e) => {
        const { normalize: t } = e
        return t(['Advanced'])
      },
    },
    chat: {
      title: (e) => {
        const { normalize: t } = e
        return t(['Chat'])
      },
      sendButton: (e) => {
        const { normalize: t } = e
        return t(['Send'])
      },
    },
    spacingPlayground: {
      value: (e) => {
        const { normalize: t } = e
        return t(['Value'])
      },
      margin: (e) => {
        const { normalize: t } = e
        return t(['Margin'])
      },
      padding: (e) => {
        const { normalize: t } = e
        return t(['Padding'])
      },
    },
    spacing: {
      title: (e) => {
        const { normalize: t } = e
        return t(['Spacing'])
      },
    },
    cards: {
      cards: (e) => {
        const { normalize: t } = e
        return t(['Cards'])
      },
      fixed: (e) => {
        const { normalize: t } = e
        return t(['Fixed'])
      },
      floating: (e) => {
        const { normalize: t } = e
        return t(['Floating'])
      },
      contentText: (e) => {
        const { normalize: t } = e
        return t(['The unique stripes of zebras make them one of the animals most familiar to people.'])
      },
      contentTextLong: (e) => {
        const { normalize: t } = e
        return t([
          "The unique stripes of zebras make them one of the animals most familiar to people. They occur in a variety of habitats, such as grasslands, savannas, woodlands, thorny scrublands, mountains, and coastal hills. Various anthropogenic factors have had a severe impact on zebra populations, in particular hunting for skins and habitat destruction. Grévy's zebra and the mountain zebra are endangered. While plains zebras are much more plentiful, one subspecies, the quagga.",
        ])
      },
      rowHeight: (e) => {
        const { normalize: t } = e
        return t(['Row height'])
      },
      title: {
        default: (e) => {
          const { normalize: t } = e
          return t(['Default'])
        },
        withControls: (e) => {
          const { normalize: t } = e
          return t(['With controls'])
        },
        customHeader: (e) => {
          const { normalize: t } = e
          return t(['Custom header'])
        },
        withoutHeader: (e) => {
          const { normalize: t } = e
          return t(['Without header'])
        },
        withImage: (e) => {
          const { normalize: t } = e
          return t(['With Image'])
        },
        withTitleOnImage: (e) => {
          const { normalize: t } = e
          return t(['With title on image'])
        },
        withCustomTitleOnImage: (e) => {
          const { normalize: t } = e
          return t(['With custom title on image'])
        },
        withStripe: (e) => {
          const { normalize: t } = e
          return t(['With stripe'])
        },
        withBackground: (e) => {
          const { normalize: t } = e
          return t(['With background'])
        },
      },
      button: {
        main: (e) => {
          const { normalize: t } = e
          return t(['Main'])
        },
        cancel: (e) => {
          const { normalize: t } = e
          return t(['Cancel'])
        },
        showMore: (e) => {
          const { normalize: t } = e
          return t(['Show More'])
        },
        readMore: (e) => {
          const { normalize: t } = e
          return t(['Show More'])
        },
      },
      link: {
        edit: (e) => {
          const { normalize: t } = e
          return t(['Edit'])
        },
        setAsDefault: (e) => {
          const { normalize: t } = e
          return t(['Set as default'])
        },
        delete: (e) => {
          const { normalize: t } = e
          return t(['Delete'])
        },
        traveling: (e) => {
          const { normalize: t } = e
          return t(['Traveling'])
        },
        france: (e) => {
          const { normalize: t } = e
          return t(['France'])
        },
        review: (e) => {
          const { normalize: t } = e
          return t(['Review'])
        },
        feedback: (e) => {
          const { normalize: t } = e
          return t(['Leave feedback'])
        },
        readFull: (e) => {
          const { normalize: t } = e
          return t(['Read full article'])
        },
        secondaryAction: (e) => {
          const { normalize: t } = e
          return t(['Secondary action'])
        },
        action1: (e) => {
          const { normalize: t } = e
          return t(['Action 1'])
        },
        action2: (e) => {
          const { normalize: t } = e
          return t(['Action 2'])
        },
      },
    },
    colors: {
      themeColors: (e) => {
        const { normalize: t } = e
        return t(['Theme Colors'])
      },
      extraColors: (e) => {
        const { normalize: t } = e
        return t(['Extra Colors'])
      },
      gradients: {
        basic: {
          title: (e) => {
            const { normalize: t } = e
            return t(['Button Gradients'])
          },
        },
        hovered: {
          title: (e) => {
            const { normalize: t } = e
            return t(['Hovered Button Gradients'])
          },
          text: (e) => {
            const { normalize: t } = e
            return t(['Lighten 15% applied to an original style (gradient or flat color) for hover state.'])
          },
        },
        pressed: {
          title: (e) => {
            const { normalize: t } = e
            return t(['Pressed Button Gradients'])
          },
          text: (e) => {
            const { normalize: t } = e
            return t(['Darken 15% applied to an original style (gradient or flat color) for pressed state.'])
          },
        },
      },
    },
    tabs: {
      alignment: (e) => {
        const { normalize: t } = e
        return t(['Tabs alignment'])
      },
      overflow: (e) => {
        const { normalize: t } = e
        return t(['Tabs overflow'])
      },
      hidden: (e) => {
        const { normalize: t } = e
        return t(['Tabs with hidden slider'])
      },
      grow: (e) => {
        const { normalize: t } = e
        return t(['Tabs grow'])
      },
    },
    helpAndSupport: (e) => {
      const { normalize: t } = e
      return t(['Help & support'])
    },
    aboutVuesticAdmin: (e) => {
      const { normalize: t } = e
      return t(['About Vuestic Admin'])
    },
    supportAndConsulting: (e) => {
      const { normalize: t } = e
      return t(['Support & Consulting'])
    },
    search: {
      placeholder: (e) => {
        const { normalize: t } = e
        return t(['Search...'])
      },
    },
    buttonSelect: {
      dark: (e) => {
        const { normalize: t } = e
        return t(['Dark'])
      },
      light: (e) => {
        const { normalize: t } = e
        return t(['Light'])
      },
    },
    vuestic: {
      search: (e) => {
        const { normalize: t } = e
        return t(['Search'])
      },
      noOptions: (e) => {
        const { normalize: t } = e
        return t(['Items not found'])
      },
      ok: (e) => {
        const { normalize: t } = e
        return t(['OK'])
      },
      cancel: (e) => {
        const { normalize: t } = e
        return t(['Cancel'])
      },
      uploadFile: (e) => {
        const { normalize: t } = e
        return t(['Upload file'])
      },
      undo: (e) => {
        const { normalize: t } = e
        return t(['Undo'])
      },
      dropzone: (e) => {
        const { normalize: t } = e
        return t(['Drop files here to upload'])
      },
      fileDeleted: (e) => {
        const { normalize: t } = e
        return t(['File deleted'])
      },
      closeAlert: (e) => {
        const { normalize: t } = e
        return t(['close alert'])
      },
      backToTop: (e) => {
        const { normalize: t } = e
        return t(['back to top'])
      },
      toggleDropdown: (e) => {
        const { normalize: t } = e
        return t(['toggle dropdown'])
      },
      carousel: (e) => {
        const { normalize: t } = e
        return t(['carousel'])
      },
      goPreviousSlide: (e) => {
        const { normalize: t } = e
        return t(['go previous slide'])
      },
      goNextSlide: (e) => {
        const { normalize: t } = e
        return t(['go next slide'])
      },
      goSlide: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['go slide ', n(o('index'))])
      },
      slideOf: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['slide ', n(o('index')), ' of ', n(o('length'))])
      },
      close: (e) => {
        const { normalize: t } = e
        return t(['close'])
      },
      openColorPicker: (e) => {
        const { normalize: t } = e
        return t(['open color picker'])
      },
      colorSelection: (e) => {
        const { normalize: t } = e
        return t(['color selection'])
      },
      colorName: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['color ', n(o('color'))])
      },
      decreaseCounter: (e) => {
        const { normalize: t } = e
        return t(['decrease counter'])
      },
      increaseCounter: (e) => {
        const { normalize: t } = e
        return t(['increase counter'])
      },
      selectAllRows: (e) => {
        const { normalize: t } = e
        return t(['select all rows'])
      },
      sortColumnBy: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['sort column by ', n(o('name'))])
      },
      selectRowByIndex: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['select row ', n(o('index'))])
      },
      resetDate: (e) => {
        const { normalize: t } = e
        return t(['reset date'])
      },
      nextPeriod: (e) => {
        const { normalize: t } = e
        return t(['next period'])
      },
      switchView: (e) => {
        const { normalize: t } = e
        return t(['switch view'])
      },
      previousPeriod: (e) => {
        const { normalize: t } = e
        return t(['previous period'])
      },
      removeFile: (e) => {
        const { normalize: t } = e
        return t(['remove file'])
      },
      reset: (e) => {
        const { normalize: t } = e
        return t(['reset'])
      },
      pagination: (e) => {
        const { normalize: t } = e
        return t(['pagination'])
      },
      goToTheFirstPage: (e) => {
        const { normalize: t } = e
        return t(['go to the first page'])
      },
      goToPreviousPage: (e) => {
        const { normalize: t } = e
        return t(['go to the previous page'])
      },
      goToSpecificPage: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['go to the ', n(o('page')), ' page'])
      },
      goToSpecificPageInput: (e) => {
        const { normalize: t } = e
        return t(['enter the page number to go'])
      },
      goNextPage: (e) => {
        const { normalize: t } = e
        return t(['go next page'])
      },
      goLastPage: (e) => {
        const { normalize: t } = e
        return t(['go last page'])
      },
      currentRating: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['current rating ', n(o('value')), ' of ', n(o('max'))])
      },
      voteRating: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['vote rating ', n(o('value')), ' of ', n(o('max'))])
      },
      optionsFilter: (e) => {
        const { normalize: t } = e
        return t(['options filter'])
      },
      splitPanels: (e) => {
        const { normalize: t } = e
        return t(['split panels'])
      },
      movePaginationLeft: (e) => {
        const { normalize: t } = e
        return t(['move pagination left'])
      },
      movePaginationRight: (e) => {
        const { normalize: t } = e
        return t(['move pagination right'])
      },
      resetTime: (e) => {
        const { normalize: t } = e
        return t(['reset time'])
      },
      closeToast: (e) => {
        const { normalize: t } = e
        return t(['close toast'])
      },
      selectedOption: (e) => {
        const { normalize: t } = e
        return t(['Selected option'])
      },
      noSelectedOption: (e) => {
        const { normalize: t } = e
        return t(['Option is not selected'])
      },
      breadcrumbs: (e) => {
        const { normalize: t } = e
        return t(['breadcrumbs'])
      },
      counterValue: (e) => {
        const { normalize: t } = e
        return t(['counter value'])
      },
      selectedDate: (e) => {
        const { normalize: t } = e
        return t(['selected date'])
      },
      selectedTime: (e) => {
        const { normalize: t } = e
        return t(['selected time'])
      },
      progressState: (e) => {
        const { normalize: t } = e
        return t(['progress state'])
      },
      color: (e) => {
        const { normalize: t } = e
        return t(['color'])
      },
      next: (e) => {
        const { normalize: t } = e
        return t(['Next'])
      },
      back: (e) => {
        const { normalize: t } = e
        return t(['Previous'])
      },
      finish: (e) => {
        const { normalize: t } = e
        return t(['Finish'])
      },
      step: (e) => {
        const { normalize: t } = e
        return t(['step'])
      },
      progress: (e) => {
        const { normalize: t } = e
        return t(['progress'])
      },
      loading: (e) => {
        const { normalize: t } = e
        return t(['Loading'])
      },
      sliderValue: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['Current slider value is ', n(o('value'))])
      },
      switch: (e) => {
        const { normalize: t } = e
        return t(['Switch'])
      },
      inputField: (e) => {
        const { normalize: t } = e
        return t(['Input field'])
      },
      fileTypeIncorrect: (e) => {
        const { normalize: t } = e
        return t(['File type is incorrect'])
      },
      select: (e) => {
        const { normalize: t } = e
        return t(['Select an option'])
      },
    },
    users: {
      title: (e) => {
        const { normalize: t } = e
        return t(['Users'])
      },
      active: (e) => {
        const { normalize: t } = e
        return t(['Active'])
      },
      inactive: (e) => {
        const { normalize: t } = e
        return t(['Inactive'])
      },
      search: (e) => {
        const { normalize: t } = e
        return t(['Search'])
      },
      addUser: (e) => {
        const { normalize: t } = e
        return t(['Add User'])
      },
      editUser: (e) => {
        const { normalize: t } = e
        return t(['Edit user'])
      },
      deleteUser: (e) => {
        const { normalize: t } = e
        return t(['Delete user'])
      },
      fullName: (e) => {
        const { normalize: t } = e
        return t(['Full Name'])
      },
      phone: (e) => {
        const { normalize: t } = e
        return t(['Phone'])
      },
      username: (e) => {
        const { normalize: t } = e
        return t(['Username'])
      },
      email: (e) => {
        const { normalize: t } = e
        return t(['Email'])
      },
      password: (e) => {
        const { normalize: t } = e
        return t(['Password'])
      },
      role: (e) => {
        const { normalize: t } = e
        return t(['Role'])
      },
      actions: (e) => {
        const { normalize: t } = e
        return t([' '])
      },
      addImage: (e) => {
        const { normalize: t } = e
        return t(['Add image'])
      },
      notes: (e) => {
        const { normalize: t } = e
        return t(['Notes'])
      },
      save: (e) => {
        const { normalize: t } = e
        return t(['Save'])
      },
      cancel: (e) => {
        const { normalize: t } = e
        return t(['Cancel'])
      },
      more: (e) => {
        const { normalize: t } = e
        return t(['more'])
      },
      results: (e) => {
        const { normalize: t } = e
        return t(['results'])
      },
      resultsPerPage: (e) => {
        const { normalize: t } = e
        return t(['Results per page'])
      },
      previousPage: (e) => {
        const { normalize: t } = e
        return t(['Previous page'])
      },
      nextPage: (e) => {
        const { normalize: t } = e
        return t(['Next page'])
      },
      deleteUserTitle: (e) => {
        const { normalize: t } = e
        return t(['Delete user'])
      },
      deleteUserMessage: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['Are you sure you want to delete ', n(o('name')), '?'])
      },
      delete: (e) => {
        const { normalize: t } = e
        return t(['Delete'])
      },
      userUpdated: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t([n(o('name')), ' has been updated'])
      },
      userCreated: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t([n(o('name')), ' has been created'])
      },
      userDeleted: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t([n(o('name')), ' has been deleted'])
      },
      formUnsavedChanges: (e) => {
        const { normalize: t } = e
        return t(['Form has unsaved changes. Are you sure you want to close it?'])
      },
      editUserAria: (e) => {
        const { normalize: t } = e
        return t(['Edit user'])
      },
      deleteUserAria: (e) => {
        const { normalize: t } = e
        return t(['Delete user'])
      },
      roles: {
        tester: (e) => {
          const { normalize: t } = e
          return t(['Tester'])
        },
        regular: (e) => {
          const { normalize: t } = e
          return t(['Regular User'])
        },
        admin: (e) => {
          const { normalize: t } = e
          return t(['Administrator'])
        },
      },
    },
    materials: {
      viewMode: {
        cards: (e) => {
          const { normalize: t } = e
          return t(['Cards View'])
        },
        table: (e) => {
          const { normalize: t } = e
          return t(['Table View'])
        },
      },
      table: {
        name: (e) => {
          const { normalize: t } = e
          return t(['Name/Code'])
        },
        materialCode: (e) => {
          const { normalize: t } = e
          return t(['Material Code'])
        },
        materialName: (e) => {
          const { normalize: t } = e
          return t(['Material Name'])
        },
        description: (e) => {
          const { normalize: t } = e
          return t(['Description'])
        },
        type: (e) => {
          const { normalize: t } = e
          return t(['Type'])
        },
        status: (e) => {
          const { normalize: t } = e
          return t(['Quantity/Status'])
        },
        creationDate: (e) => {
          const { normalize: t } = e
          return t(['Creation Date'])
        },
        productCount: (e) => {
          const { normalize: t } = e
          return t(['Product Count'])
        },
        testItems: (e) => {
          const { normalize: t } = e
          return t(['Test Items'])
        },
        actions: (e) => {
          const { normalize: t } = e
          return t(['Actions'])
        },
        editMaterial: (e) => {
          const { normalize: t } = e
          return t(['Edit'])
        },
        deleteMaterial: (e) => {
          const { normalize: t } = e
          return t(['Delete'])
        },
        results: (e) => {
          const { normalize: t } = e
          return t(['results'])
        },
        resultsPerPage: (e) => {
          const { normalize: t } = e
          return t(['Results per page'])
        },
        previousPage: (e) => {
          const { normalize: t } = e
          return t(['Previous page'])
        },
        nextPage: (e) => {
          const { normalize: t } = e
          return t(['Next page'])
        },
      },
      form: {
        materialCode: (e) => {
          const { normalize: t } = e
          return t(['Material Code'])
        },
        materialName: (e) => {
          const { normalize: t } = e
          return t(['Material Name'])
        },
        productCount: (e) => {
          const { normalize: t } = e
          return t(['Product Count'])
        },
        addTestItem: (e) => {
          const { normalize: t } = e
          return t(['Add Test Item'])
        },
        testItems: (e) => {
          const { normalize: t } = e
          return t(['Test Items List'])
        },
        addTitle: (e) => {
          const { normalize: t } = e
          return t(['Add Material'])
        },
        editTitle: (e) => {
          const { normalize: t } = e
          return t(['Edit Material'])
        },
      },
      messages: {
        created: (e) => {
          const { normalize: t } = e
          return t(['Material created successfully'])
        },
        updated: (e) => {
          const { normalize: t } = e
          return t(['Material updated successfully'])
        },
        deleted: (e) => {
          const { normalize: t } = e
          return t(['Material deleted successfully'])
        },
      },
      confirm: {
        deleteTitle: (e) => {
          const { normalize: t } = e
          return t(['Delete Material'])
        },
        deleteMessage: (e) => {
          const { normalize: t, interpolate: n, named: o } = e
          return t(['Are you sure you want to delete material "', n(o('name')), '"?'])
        },
        delete: (e) => {
          const { normalize: t } = e
          return t(['Delete'])
        },
        unsavedChanges: (e) => {
          const { normalize: t } = e
          return t(['Form has unsaved changes. Are you sure you want to close?'])
        },
      },
      noData: (e) => {
        const { normalize: t } = e
        return t(['No material data available'])
      },
      search: {
        placeholder: (e) => {
          const { normalize: t } = e
          return t(['Search materials or products...'])
        },
      },
      type: {
        material: (e) => {
          const { normalize: t } = e
          return t(['Material'])
        },
        product: (e) => {
          const { normalize: t } = e
          return t(['Product'])
        },
      },
      status: {
        productCount: (e) => {
          const { normalize: t, interpolate: n, named: o } = e
          return t([n(o('count')), ' products'])
        },
      },
    },
    products: {
      form: {
        addTitle: (e) => {
          const { normalize: t } = e
          return t(['Add Product'])
        },
        editTitle: (e) => {
          const { normalize: t } = e
          return t(['Edit Product'])
        },
        addToMaterial: (e) => {
          const { normalize: t, interpolate: n, named: o } = e
          return t(['Add Product - ', n(o('materialName'))])
        },
      },
      messages: {
        created: (e) => {
          const { normalize: t } = e
          return t(['Product created successfully'])
        },
        updated: (e) => {
          const { normalize: t } = e
          return t(['Product updated successfully'])
        },
        deleted: (e) => {
          const { normalize: t } = e
          return t(['Product deleted successfully'])
        },
      },
      confirm: {
        deleteTitle: (e) => {
          const { normalize: t } = e
          return t(['Delete Product'])
        },
        deleteMessage: (e) => {
          const { normalize: t, interpolate: n, named: o } = e
          return t(['Are you sure you want to delete product "', n(o('name')), '"?'])
        },
        delete: (e) => {
          const { normalize: t } = e
          return t(['Delete'])
        },
      },
    },
  },
  p0 = Object.freeze(Object.defineProperty({ __proto__: null, default: f0 }, Symbol.toStringTag, { value: 'Module' })),
  v0 = {
    auth: {
      agree: (e) => {
        const { normalize: t } = e
        return t(['با شرایط استفاده موافقم.'])
      },
      createAccount: (e) => {
        const { normalize: t } = e
        return t(['ساخت حساب کاربری'])
      },
      createNewAccount: (e) => {
        const { normalize: t } = e
        return t(['ساخت حساب کاربری تازه'])
      },
      email: (e) => {
        const { normalize: t } = e
        return t(['رایانامه'])
      },
      login: (e) => {
        const { normalize: t } = e
        return t(['ورود'])
      },
      password: (e) => {
        const { normalize: t } = e
        return t(['گذرواژه'])
      },
      recover_password: (e) => {
        const { normalize: t } = e
        return t(['فراموشی رمز عبور'])
      },
      sign_up: (e) => {
        const { normalize: t } = e
        return t(['ساخت حساب کاربری'])
      },
      keep_logged_in: (e) => {
        const { normalize: t } = e
        return t(['مرا در این مرورگر بخاطر بسپار'])
      },
      termsOfUse: (e) => {
        const { normalize: t } = e
        return t(['شرایط استفاده'])
      },
      reset_password: (e) => {
        const { normalize: t } = e
        return t(['بازنشانی گذرواژه'])
      },
    },
    404: {
      title: (e) => {
        const { normalize: t } = e
        return t(['این صفحه رفته گل بچینه :)'])
      },
      text: (e) => {
        const { normalize: t } = e
        return t(['اگر فکر میکنید چیزی درست نیست برای ما پیام بفرستید.'])
      },
      back_button: (e) => {
        const { normalize: t } = e
        return t(['بازگشت به پیشخوان'])
      },
    },
    typography: {
      primary: (e) => {
        const { normalize: t } = e
        return t(['سبک های متن اصلی'])
      },
      secondary: (e) => {
        const { normalize: t } = e
        return t(['سبکه های متن ثانوی'])
      },
    },
    dashboard: {
      title: (e) => {
        const { normalize: t } = e
        return t(['داشبورد'])
      },
      versions: (e) => {
        const { normalize: t } = e
        return t(['ورژن ها'])
      },
      setupRemoteConnections: (e) => {
        const { normalize: t } = e
        return t(['راه اندازی اتصالات از راه دور'])
      },
      currentVisitors: (e) => {
        const { normalize: t } = e
        return t(['بازکنندگان فعلی'])
      },
      metrics: {
        openInvoices: (e) => {
          const { normalize: t } = e
          return t(['فاکتورهای باز'])
        },
        ongoingProjects: (e) => {
          const { normalize: t } = e
          return t(['مواد در حال انجام'])
        },
        employees: (e) => {
          const { normalize: t } = e
          return t(['کارمندان'])
        },
        newProfit: (e) => {
          const { normalize: t } = e
          return t(['سود جدید'])
        },
      },
      cards: {
        revenueReport: (e) => {
          const { normalize: t } = e
          return t(['گزارش درآمد'])
        },
        yearlyBreakup: (e) => {
          const { normalize: t } = e
          return t(['تقسیم‌بندی سالانه'])
        },
        monthlyEarnings: (e) => {
          const { normalize: t } = e
          return t(['درآمد ماهانه'])
        },
        revenueByLocation: (e) => {
          const { normalize: t } = e
          return t(['درآمد بر اساس مکان'])
        },
        revenueByTopRegions: (e) => {
          const { normalize: t } = e
          return t(['درآمد بر اساس مناطق برتر'])
        },
        regionRevenue: (e) => {
          const { normalize: t } = e
          return t(['درآمد منطقه‌ای'])
        },
        projectTable: (e) => {
          const { normalize: t } = e
          return t(['مدیریت مواد'])
        },
        timeline: (e) => {
          const { normalize: t } = e
          return t(['جدول زمانی'])
        },
        countries: (e) => {
          const { normalize: t } = e
          return t(['کشورها'])
        },
        totalEarnings: (e) => {
          const { normalize: t } = e
          return t(['کل درآمد'])
        },
        earningsThisMonth: (e) => {
          const { normalize: t } = e
          return t(['درآمد این ماه'])
        },
        expensesThisMonth: (e) => {
          const { normalize: t } = e
          return t(['هزینه‌های این ماه'])
        },
        export: (e) => {
          const { normalize: t } = e
          return t(['صادرات'])
        },
        lastYear: (e) => {
          const { normalize: t } = e
          return t(['سال گذشته'])
        },
        lastMonth: (e) => {
          const { normalize: t } = e
          return t(['ماه گذشته'])
        },
        earnings: (e) => {
          const { normalize: t } = e
          return t(['درآمد'])
        },
        profit: (e) => {
          const { normalize: t } = e
          return t(['سود'])
        },
        expenses: (e) => {
          const { normalize: t } = e
          return t(['هزینه‌ها'])
        },
        viewAllProjects: (e) => {
          const { normalize: t } = e
          return t(['مشاهده همه مواد'])
        },
      },
      table: {
        name: (e) => {
          const { normalize: t } = e
          return t(['نام'])
        },
        status: (e) => {
          const { normalize: t } = e
          return t(['وضعیت'])
        },
        team: (e) => {
          const { normalize: t } = e
          return t(['تیم'])
        },
        topRegion: (e) => {
          const { normalize: t } = e
          return t(['منطقه برتر'])
        },
        revenue: (e) => {
          const { normalize: t } = e
          return t(['درآمد'])
        },
      },
      time: {
        today: (e) => {
          const { normalize: t } = e
          return t(['امروز'])
        },
        week: (e) => {
          const { normalize: t } = e
          return t(['هفته'])
        },
        month: (e) => {
          const { normalize: t } = e
          return t(['ماه'])
        },
        sinceLastMonth: (e) => {
          const { normalize: t } = e
          return t(['از ماه گذشته'])
        },
      },
      timeline: {
        updatedStatus: (e) => {
          const { normalize: t } = e
          return t(['وضعیت به‌روزرسانی شد'])
        },
        awaitingResponse: (e) => {
          const { normalize: t } = e
          return t(['در انتظار پاسخ مشتری'])
        },
        addedToGroup: (e) => {
          const { normalize: t } = e
          return t(['به گروه اضافه شد'])
        },
        groupName: (e) => {
          const { normalize: t } = e
          return t(['نام گروه'])
        },
        openedShowcase: (e) => {
          const { normalize: t } = e
          return t(['ویترین جدید باز شد'])
        },
        withTheme: (e) => {
          const { normalize: t } = e
          return t(['با موضوع بازار'])
        },
        updatedStatusTo: (e) => {
          const { normalize: t } = e
          return t(['وضعیت به‌روزرسانی شد به'])
        },
        projectCreated: (e) => {
          const { normalize: t } = e
          return t(['پروژه'])
        },
        wasCreated: (e) => {
          const { normalize: t } = e
          return t(['ایجاد شد'])
        },
      },
      actions: {
        export: (e) => {
          const { normalize: t } = e
          return t(['صادرات'])
        },
      },
      months: {
        jan: (e) => {
          const { normalize: t } = e
          return t(['ژانویه'])
        },
        feb: (e) => {
          const { normalize: t } = e
          return t(['فوریه'])
        },
        mar: (e) => {
          const { normalize: t } = e
          return t(['مارس'])
        },
        apr: (e) => {
          const { normalize: t } = e
          return t(['آوریل'])
        },
        may: (e) => {
          const { normalize: t } = e
          return t(['مه'])
        },
        jun: (e) => {
          const { normalize: t } = e
          return t(['ژوئن'])
        },
        jul: (e) => {
          const { normalize: t } = e
          return t(['ژوئیه'])
        },
        aug: (e) => {
          const { normalize: t } = e
          return t(['اوت'])
        },
        sep: (e) => {
          const { normalize: t } = e
          return t(['سپتامبر'])
        },
        oct: (e) => {
          const { normalize: t } = e
          return t(['اکتبر'])
        },
        nov: (e) => {
          const { normalize: t } = e
          return t(['نوامبر'])
        },
        dec: (e) => {
          const { normalize: t } = e
          return t(['دسامبر'])
        },
      },
      charts: {
        trendyTrends: (e) => {
          const { normalize: t } = e
          return t(['ترند های روز'])
        },
        showInMoreDetail: (e) => {
          const { normalize: t } = e
          return t(['نمایش جزییات بیشتر'])
        },
        showInLessDetail: (e) => {
          const { normalize: t } = e
          return t(['نمایش جزییات کمتر'])
        },
        loadingSpeed: (e) => {
          const { normalize: t } = e
          return t(['سرعت بارگزاری'])
        },
        topContributors: (e) => {
          const { normalize: t } = e
          return t(['مشارکت کنندگان برتر'])
        },
        showNextFive: (e) => {
          const { normalize: t } = e
          return t(['نمایش پنج تای بعدی'])
        },
        commits: (e) => {
          const { normalize: t } = e
          return t(['کامیت ها'])
        },
      },
      info: {
        componentRichTheme: (e) => {
          const { normalize: t } = e
          return t(['تم غنی از کامپوننت'])
        },
        completedPullRequests: (e) => {
          const { normalize: t } = e
          return t(['درخواست های کشیدن کامل شده'])
        },
        users: (e) => {
          const { normalize: t } = e
          return t(['کاربران'])
        },
        points: (e) => {
          const { normalize: t } = e
          return t(['امتیازات'])
        },
        units: (e) => {
          const { normalize: t } = e
          return t(['واحد ها'])
        },
        exploreGallery: (e) => {
          const { normalize: t } = e
          return t(['گشت و گذار در گالری'])
        },
        viewLibrary: (e) => {
          const { normalize: t } = e
          return t(['مشاهده کتابخانه'])
        },
        commits: (e) => {
          const { normalize: t } = e
          return t(['کامیت ها'])
        },
        components: (e) => {
          const { normalize: t } = e
          return t(['کامپوننت ها'])
        },
        teamMembers: (e) => {
          const { normalize: t } = e
          return t(['اعضای تیم'])
        },
      },
      tabs: {
        overview: {
          title: (e) => {
            const { normalize: t } = e
            return t(['نمای کلی'])
          },
          built: (e) => {
            const { normalize: t } = e
            return t(['ساخته شده با فریم ورک Vue.js'])
          },
          free: (e) => {
            const { normalize: t } = e
            return t(['کاملا رایگان برای همه'])
          },
          fresh: (e) => {
            const { normalize: t } = e
            return t(['طراحی تازه و باحال'])
          },
          mobile: (e) => {
            const { normalize: t } = e
            return t(['واکنش گرا و بهینه سازی برای موبایل'])
          },
          components: (e) => {
            const { normalize: t } = e
            return t(['پر از مولفه های باحال'])
          },
          nojQuery: (e) => {
            const { normalize: t } = e
            return t(['کاملا بدون jQuery'])
          },
        },
        billingAddress: {
          title: (e) => {
            const { normalize: t } = e
            return t(['نشانی صورتحساب'])
          },
          personalInfo: (e) => {
            const { normalize: t } = e
            return t(['اطلاعات شخصی'])
          },
          firstName: (e) => {
            const { normalize: t } = e
            return t(['نام و نام خانوادگی'])
          },
          email: (e) => {
            const { normalize: t } = e
            return t(['رایانما'])
          },
          address: (e) => {
            const { normalize: t } = e
            return t(['نشانی'])
          },
          companyInfo: (e) => {
            const { normalize: t } = e
            return t(['اطلاعات شرکت'])
          },
          city: (e) => {
            const { normalize: t } = e
            return t(['شهر'])
          },
          country: (e) => {
            const { normalize: t } = e
            return t(['کشور'])
          },
          infiniteConnections: (e) => {
            const { normalize: t } = e
            return t(['اتصالات نامحدود'])
          },
          addConnection: (e) => {
            const { normalize: t } = e
            return t(['افزودن اتصال'])
          },
        },
        bankDetails: {
          title: (e) => {
            const { normalize: t } = e
            return t(['اطلاعات بانکی'])
          },
          detailsFields: (e) => {
            const { normalize: t } = e
            return t(['فیلد های جزئیات'])
          },
          bankName: (e) => {
            const { normalize: t } = e
            return t(['نام بانک'])
          },
          accountName: (e) => {
            const { normalize: t } = e
            return t(['نام حساب'])
          },
          sortCode: (e) => {
            const { normalize: t } = e
            return t(['کد مرتب سازی'])
          },
          accountNumber: (e) => {
            const { normalize: t } = e
            return t(['شماره حساب'])
          },
          notes: (e) => {
            const { normalize: t } = e
            return t(['یادداشت ها'])
          },
          sendDetails: (e) => {
            const { normalize: t } = e
            return t(['ارسال جزئیات'])
          },
        },
      },
      navigationLayout: (e) => {
        const { normalize: t } = e
        return t(['چیدمان ناوبری'])
      },
      topBarButton: (e) => {
        const { normalize: t } = e
        return t(['دکمه نوار بالا'])
      },
      sideBarButton: (e) => {
        const { normalize: t } = e
        return t(['دکمه نوار کناری'])
      },
    },
    language: {
      brazilian_portuguese: (e) => {
        const { normalize: t } = e
        return t(['پرتغالی برزیل'])
      },
      english: (e) => {
        const { normalize: t } = e
        return t(['انگلیسی'])
      },
      spanish: (e) => {
        const { normalize: t } = e
        return t(['اسپانیایی'])
      },
      simplified_chinese: (e) => {
        const { normalize: t } = e
        return t(['چینی ساده شده'])
      },
      persian: (e) => {
        const { normalize: t } = e
        return t(['فارسی'])
      },
    },
    menu: {
      auth: (e) => {
        const { normalize: t } = e
        return t(['احراز هویت'])
      },
      buttons: (e) => {
        const { normalize: t } = e
        return t(['دکمه ها'])
      },
      timelines: (e) => {
        const { normalize: t } = e
        return t(['جدول زمانی'])
      },
      dashboard: (e) => {
        const { normalize: t } = e
        return t(['داشبورد'])
      },
      billing: (e) => {
        const { normalize: t } = e
        return t(['صورتحساب'])
      },
      login: (e) => {
        const { normalize: t } = e
        return t(['ورود'])
      },
      signUp: (e) => {
        const { normalize: t } = e
        return t(['ثبت نام'])
      },
      preferences: (e) => {
        const { normalize: t } = e
        return t(['ترجیحات'])
      },
      payments: (e) => {
        const { normalize: t } = e
        return t(['پرداخت ها'])
      },
      'pricing-plans': (e) => {
        const { normalize: t } = e
        return t(['طرح های قیمت گذاری'])
      },
      'login-singup': (e) => {
        const { normalize: t } = e
        return t(['ورود/ثبت نام'])
      },
      404: (e) => {
        const { normalize: t } = e
        return t(['صفحات 404'])
      },
      faq: (e) => {
        const { normalize: t } = e
        return t(['سوالات متداول'])
      },
      users: (e) => {
        const { normalize: t } = e
        return t(['کاربران'])
      },
      projects: (e) => {
        const { normalize: t } = e
        return t(['مدیریت مواد'])
      },
      testingItem: (e) => {
        const { normalize: t } = e
        return t(['آیتم تست'])
      },
    },
    projects: {
      viewMode: {
        cards: (e) => {
          const { normalize: t } = e
          return t(['کارت ها'])
        },
        table: (e) => {
          const { normalize: t } = e
          return t(['جدول'])
        },
      },
      table: {
        projectName: (e) => {
          const { normalize: t } = e
          return t(['نام مواد'])
        },
        projectOwner: (e) => {
          const { normalize: t } = e
          return t(['مالک'])
        },
        team: (e) => {
          const { normalize: t } = e
          return t(['تیم'])
        },
        status: (e) => {
          const { normalize: t } = e
          return t(['وضعیت'])
        },
        creationDate: (e) => {
          const { normalize: t } = e
          return t(['تاریخ ایجاد'])
        },
        actions: (e) => {
          const { normalize: t } = e
          return t(['عملیات'])
        },
        editProject: (e) => {
          const { normalize: t } = e
          return t(['ویرایش مواد'])
        },
        deleteProject: (e) => {
          const { normalize: t } = e
          return t(['حذف مواد'])
        },
        results: (e) => {
          const { normalize: t } = e
          return t(['نتایج'])
        },
        resultsPerPage: (e) => {
          const { normalize: t } = e
          return t(['نتایج در هر صفحه'])
        },
        previousPage: (e) => {
          const { normalize: t } = e
          return t(['صفحه قبلی'])
        },
        nextPage: (e) => {
          const { normalize: t } = e
          return t(['صفحه بعدی'])
        },
      },
      status: {
        inProgress: (e) => {
          const { normalize: t } = e
          return t(['در حال انجام'])
        },
        archived: (e) => {
          const { normalize: t } = e
          return t(['بایگانی شده'])
        },
        completed: (e) => {
          const { normalize: t } = e
          return t(['تکمیل شده'])
        },
        important: (e) => {
          const { normalize: t } = e
          return t(['مهم'])
        },
      },
    },
    messages: {
      all: (e) => {
        const { normalize: t } = e
        return t(['مشاهده تمام پیام ها'])
      },
      new: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['پیام های جدید از ', n(o('name'))])
      },
      mark_as_read: (e) => {
        const { normalize: t } = e
        return t(['علامت زدن به عنوان خوانده شده'])
      },
    },
    navbar: {
      messageUs: (e) => {
        const { normalize: t } = e
        return t(['پرسش های مربوط به توسعه وب:'])
      },
      repository: (e) => {
        const { normalize: t } = e
        return t(['مخزن گیت هاب'])
      },
    },
    notifications: {
      all: (e) => {
        const { normalize: t } = e
        return t(['مشاهده تمام اعلان ها'])
      },
      mark_as_read: (e) => {
        const { normalize: t } = e
        return t(['علامت زدن به عنوان خوانده شده'])
      },
      sentMessage: (e) => {
        const { normalize: t } = e
        return t(['پیامی برای شما فرستاد'])
      },
      uploadedZip: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['یک فایل زیپ جدید با ', n(o('type')), ' آپلود کرد'])
      },
      startedTopic: (e) => {
        const { normalize: t } = e
        return t(['یک موضوع جدید را شروع کرد'])
      },
    },
    user: {
      language: (e) => {
        const { normalize: t } = e
        return t(['تغییر زبان'])
      },
      logout: (e) => {
        const { normalize: t } = e
        return t(['خروج'])
      },
      profile: (e) => {
        const { normalize: t } = e
        return t(['پروفایل من'])
      },
      settings: (e) => {
        const { normalize: t } = e
        return t(['تنظیمات'])
      },
      billing: (e) => {
        const { normalize: t } = e
        return t(['صورتحساب'])
      },
      faq: (e) => {
        const { normalize: t } = e
        return t(['سؤالات متداول'])
      },
      helpAndSupport: (e) => {
        const { normalize: t } = e
        return t(['کمک و پشتیبانی'])
      },
      projects: (e) => {
        const { normalize: t } = e
        return t(['مدیریت مواد'])
      },
      account: (e) => {
        const { normalize: t } = e
        return t(['حساب'])
      },
      explore: (e) => {
        const { normalize: t } = e
        return t(['کاوش'])
      },
    },
    treeView: {
      basic: (e) => {
        const { normalize: t } = e
        return t(['اصلی'])
      },
      icons: (e) => {
        const { normalize: t } = e
        return t(['آيکون ها'])
      },
      selectable: (e) => {
        const { normalize: t } = e
        return t(['قابل انتخاب'])
      },
      editable: (e) => {
        const { normalize: t } = e
        return t(['قابل ویرایش'])
      },
      advanced: (e) => {
        const { normalize: t } = e
        return t(['پیشرفته'])
      },
    },
    chat: {
      title: (e) => {
        const { normalize: t } = e
        return t(['گفتگو'])
      },
    },
    spacingPlayground: {
      value: (e) => {
        const { normalize: t } = e
        return t(['مقدار'])
      },
      margin: (e) => {
        const { normalize: t } = e
        return t(['حاشیه'])
      },
      padding: (e) => {
        const { normalize: t } = e
        return t(['پدینگ'])
      },
    },
    cards: {
      cards: (e) => {
        const { normalize: t } = e
        return t(['کارت ها'])
      },
      fixed: (e) => {
        const { normalize: t } = e
        return t(['ثابت'])
      },
      floating: (e) => {
        const { normalize: t } = e
        return t(['شناور'])
      },
      contentText: (e) => {
        const { normalize: t } = e
        return t(['از قیافت معلومه خیلی وقته روی صندلی نشستی. کپک نزنی! پاشو یه تکونی بده '])
      },
      contentTextLong: (e) => {
        const { normalize: t } = e
        return t([
          'یک برنامه نویس حتما نباید سیگار دستش باشد تا جامعه متوجه بشود که او برنامه نویس است. مشخص نیست این تصور غلط از کجا و به چه شکل به وجود آمد اما اصلا درست نیست. برنامه نویس‌های بزرگ و موفق غیرسیگاری زیاد هستند. اشخاصی مثل بیل گیتس، ریچارد استالمن یا علی شریفی نیستانی که در دنیای برنامه نویسی کاملا شناخته شده می‌باشند و سیگاری نیستند. در مقابل بعضی از برنامه نویس‌ها هم سیگار می‌کشند و این موضوع کاملا به خود شخص برمی‌گردد',
        ])
      },
      rowHeight: (e) => {
        const { normalize: t } = e
        return t(['ارتفاع سطر'])
      },
      title: {
        default: (e) => {
          const { normalize: t } = e
          return t(['پیش فرض'])
        },
        withControls: (e) => {
          const { normalize: t } = e
          return t(['همراه کنترل'])
        },
        customHeader: (e) => {
          const { normalize: t } = e
          return t(['سربرگ سفارشی'])
        },
        withoutHeader: (e) => {
          const { normalize: t } = e
          return t(['بدون سربرگ'])
        },
        withImage: (e) => {
          const { normalize: t } = e
          return t(['همراه تصویر'])
        },
        withTitleOnImage: (e) => {
          const { normalize: t } = e
          return t(['همراه عنوان و بدون تصویر'])
        },
        withCustomTitleOnImage: (e) => {
          const { normalize: t } = e
          return t(['بدون تصویر یا عنوان'])
        },
        withStripe: (e) => {
          const { normalize: t } = e
          return t(['همراه نوار'])
        },
        withBackground: (e) => {
          const { normalize: t } = e
          return t(['همراه پس زمینه'])
        },
      },
      button: {
        main: (e) => {
          const { normalize: t } = e
          return t(['اصلی'])
        },
        cancel: (e) => {
          const { normalize: t } = e
          return t(['لغو'])
        },
      },
      link: {
        edit: (e) => {
          const { normalize: t } = e
          return t(['ویرایش'])
        },
        setAsDefault: (e) => {
          const { normalize: t } = e
          return t(['تنظیم به عنوان پیش فرض'])
        },
        delete: (e) => {
          const { normalize: t } = e
          return t(['حذف'])
        },
        traveling: (e) => {
          const { normalize: t } = e
          return t(['مسافرت'])
        },
        france: (e) => {
          const { normalize: t } = e
          return t(['فرانسیه'])
        },
        review: (e) => {
          const { normalize: t } = e
          return t(['بررسی'])
        },
        feedback: (e) => {
          const { normalize: t } = e
          return t(['ترک کردن بازخورد'])
        },
        readFull: (e) => {
          const { normalize: t } = e
          return t(['خواندن تمام مقالات'])
        },
        secondaryAction: (e) => {
          const { normalize: t } = e
          return t(['افدام دوم'])
        },
        action1: (e) => {
          const { normalize: t } = e
          return t(['اقدام یک'])
        },
        action2: (e) => {
          const { normalize: t } = e
          return t(['اقدام دو'])
        },
      },
    },
    helpAndSupport: (e) => {
      const { normalize: t } = e
      return t(['کمک و پشتیبانی'])
    },
    aboutVuesticAdmin: (e) => {
      const { normalize: t } = e
      return t(['درباره Vuestic Admin'])
    },
    search: {
      placeholder: (e) => {
        const { normalize: t } = e
        return t(['جستجو...'])
      },
    },
    vuestic: {
      search: (e) => {
        const { normalize: t } = e
        return t(['جستجو'])
      },
      noOptions: (e) => {
        const { normalize: t } = e
        return t(['موردی یافت نشد'])
      },
      ok: (e) => {
        const { normalize: t } = e
        return t(['تأیید'])
      },
      cancel: (e) => {
        const { normalize: t } = e
        return t(['لغو'])
      },
      uploadFile: (e) => {
        const { normalize: t } = e
        return t(['بارگذاری فایل'])
      },
      undo: (e) => {
        const { normalize: t } = e
        return t(['واگرد'])
      },
      dropzone: (e) => {
        const { normalize: t } = e
        return t(['فایل‌ها را اینجا رها کنید تا بارگذاری شوند'])
      },
      fileDeleted: (e) => {
        const { normalize: t } = e
        return t(['فایل حذف شد'])
      },
      closeAlert: (e) => {
        const { normalize: t } = e
        return t(['بستن هشدار'])
      },
      backToTop: (e) => {
        const { normalize: t } = e
        return t(['بازگشت به بالا'])
      },
      toggleDropdown: (e) => {
        const { normalize: t } = e
        return t(['باز و بسته کردن منوی کشویی'])
      },
      carousel: (e) => {
        const { normalize: t } = e
        return t(['چرخ و فلک'])
      },
      goPreviousSlide: (e) => {
        const { normalize: t } = e
        return t(['رفتن به اسلاید قبلی'])
      },
      goNextSlide: (e) => {
        const { normalize: t } = e
        return t(['رفتن به اسلاید بعدی'])
      },
      goSlide: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['رفتن به اسلاید ', n(o('index'))])
      },
      slideOf: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['اسلاید ', n(o('index')), ' از ', n(o('length'))])
      },
      close: (e) => {
        const { normalize: t } = e
        return t(['بستن'])
      },
      openColorPicker: (e) => {
        const { normalize: t } = e
        return t(['باز کردن انتخاب‌گر رنگ'])
      },
      colorSelection: (e) => {
        const { normalize: t } = e
        return t(['انتخاب رنگ'])
      },
      colorName: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['رنگ ', n(o('color'))])
      },
      decreaseCounter: (e) => {
        const { normalize: t } = e
        return t(['کاهش شمارنده'])
      },
      increaseCounter: (e) => {
        const { normalize: t } = e
        return t(['افزایش شمارنده'])
      },
      selectAllRows: (e) => {
        const { normalize: t } = e
        return t(['انتخاب همه سطرها'])
      },
      sortColumnBy: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['مرتب‌سازی ستون بر اساس ', n(o('name'))])
      },
      selectRowByIndex: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['انتخاب سطر ', n(o('index'))])
      },
      resetDate: (e) => {
        const { normalize: t } = e
        return t(['بازنشانی تاریخ'])
      },
      nextPeriod: (e) => {
        const { normalize: t } = e
        return t(['دوره بعدی'])
      },
      switchView: (e) => {
        const { normalize: t } = e
        return t(['تغییر نما'])
      },
      previousPeriod: (e) => {
        const { normalize: t } = e
        return t(['دوره قبلی'])
      },
      removeFile: (e) => {
        const { normalize: t } = e
        return t(['حذف فایل'])
      },
      reset: (e) => {
        const { normalize: t } = e
        return t(['بازنشانی'])
      },
      pagination: (e) => {
        const { normalize: t } = e
        return t(['صفحه‌بندی'])
      },
      goToTheFirstPage: (e) => {
        const { normalize: t } = e
        return t(['رفتن به اولین صفحه'])
      },
      goToPreviousPage: (e) => {
        const { normalize: t } = e
        return t(['رفتن به صفحه قبلی'])
      },
      goToSpecificPage: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['رفتن به صفحه ', n(o('page'))])
      },
      goToSpecificPageInput: (e) => {
        const { normalize: t } = e
        return t(['شماره صفحه را وارد کنید'])
      },
      goNextPage: (e) => {
        const { normalize: t } = e
        return t(['رفتن به صفحه بعدی'])
      },
      goLastPage: (e) => {
        const { normalize: t } = e
        return t(['رفتن به آخرین صفحه'])
      },
      currentRating: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['رتبه فعلی ', n(o('value')), ' از ', n(o('max'))])
      },
      voteRating: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['رتبه‌دهی ', n(o('value')), ' از ', n(o('max'))])
      },
      optionsFilter: (e) => {
        const { normalize: t } = e
        return t(['فیلتر گزینه‌ها'])
      },
      splitPanels: (e) => {
        const { normalize: t } = e
        return t(['تقسیم پنل‌ها'])
      },
      movePaginationLeft: (e) => {
        const { normalize: t } = e
        return t(['انتقال صفحه‌بندی به چپ'])
      },
      movePaginationRight: (e) => {
        const { normalize: t } = e
        return t(['انتقال صفحه‌بندی به راست'])
      },
      resetTime: (e) => {
        const { normalize: t } = e
        return t(['بازنشانی زمان'])
      },
      closeToast: (e) => {
        const { normalize: t } = e
        return t(['بستن اعلان'])
      },
      selectedOption: (e) => {
        const { normalize: t } = e
        return t(['گزینه انتخاب‌شده'])
      },
      noSelectedOption: (e) => {
        const { normalize: t } = e
        return t(['گزینه‌ای انتخاب نشده است'])
      },
      breadcrumbs: (e) => {
        const { normalize: t } = e
        return t(['مسیرها'])
      },
      counterValue: (e) => {
        const { normalize: t } = e
        return t(['مقدار شمارنده'])
      },
      selectedDate: (e) => {
        const { normalize: t } = e
        return t(['تاریخ انتخاب‌شده'])
      },
      selectedTime: (e) => {
        const { normalize: t } = e
        return t(['زمان انتخاب‌شده'])
      },
      progressState: (e) => {
        const { normalize: t } = e
        return t(['وضعیت پیشرفت'])
      },
      color: (e) => {
        const { normalize: t } = e
        return t(['رنگ'])
      },
      next: (e) => {
        const { normalize: t } = e
        return t(['بعدی'])
      },
      back: (e) => {
        const { normalize: t } = e
        return t(['قبلی'])
      },
      finish: (e) => {
        const { normalize: t } = e
        return t(['پایان'])
      },
      step: (e) => {
        const { normalize: t } = e
        return t(['مرحله'])
      },
      progress: (e) => {
        const { normalize: t } = e
        return t(['پیشرفت'])
      },
      loading: (e) => {
        const { normalize: t } = e
        return t(['در حال بارگذاری'])
      },
      sliderValue: (e) => {
        const { normalize: t, interpolate: n, named: o } = e
        return t(['مقدار فعلی لغزنده ', n(o('value')), ' است'])
      },
      switch: (e) => {
        const { normalize: t } = e
        return t(['تغییر'])
      },
      inputField: (e) => {
        const { normalize: t } = e
        return t(['فیلد ورودی'])
      },
      fileTypeIncorrect: (e) => {
        const { normalize: t } = e
        return t(['نوع فایل نادرست است'])
      },
      select: (e) => {
        const { normalize: t } = e
        return t(['یک گزینه انتخاب کنید'])
      },
    },
  },
  g0 = Object.freeze(Object.defineProperty({ __proto__: null, default: v0 }, Symbol.toStringTag, { value: 'Module' }))
/*!
 * shared v9.6.5
 * (c) 2023 kazuya kawaguchi
 * Released under the MIT License.
 */ const Gi = typeof window < 'u',
  xo = (e, t = !1) => (t ? Symbol.for(e) : Symbol(e)),
  h0 = (e, t, n) => y0({ l: e, k: t, s: n }),
  y0 = (e) =>
    JSON.stringify(e)
      .replace(/\u2028/g, '\\u2028')
      .replace(/\u2029/g, '\\u2029')
      .replace(/\u0027/g, '\\u0027'),
  Rt = (e) => typeof e == 'number' && isFinite(e),
  _0 = (e) => Rv(e) === '[object Date]',
  Gl = (e) => Rv(e) === '[object RegExp]',
  zs = (e) => st(e) && Object.keys(e).length === 0,
  Gt = Object.assign
let Vd
const Ku = () =>
  Vd ||
  (Vd =
    typeof globalThis < 'u'
      ? globalThis
      : typeof self < 'u'
        ? self
        : typeof window < 'u'
          ? window
          : typeof global < 'u'
            ? global
            : {})
function Pd(e) {
  return e.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&apos;')
}
const b0 = Object.prototype.hasOwnProperty
function Ia(e, t) {
  return b0.call(e, t)
}
const Lt = Array.isArray,
  Et = (e) => typeof e == 'function',
  Me = (e) => typeof e == 'string',
  Pt = (e) => typeof e == 'boolean',
  ht = (e) => e !== null && typeof e == 'object',
  Nv = Object.prototype.toString,
  Rv = (e) => Nv.call(e),
  st = (e) => {
    if (!ht(e)) return !1
    const t = Object.getPrototypeOf(e)
    return t === null || t.constructor === Object
  },
  z0 = (e) => (e == null ? '' : Lt(e) || (st(e) && e.toString === Nv) ? JSON.stringify(e, null, 2) : String(e))
function C0(e, t = '') {
  return e.reduce((n, o, r) => (r === 0 ? n + o : n + t + o), '')
}
function qu(e) {
  let t = e
  return () => ++t
}
function S0(e, t) {
  typeof console < 'u' && (console.warn('[intlify] ' + e), t && console.warn(t.stack))
}
/*!
 * message-compiler v9.6.5
 * (c) 2023 kazuya kawaguchi
 * Released under the MIT License.
 */ const w0 = /\{([0-9a-zA-Z]+)\}/g
function $0(e, ...t) {
  return (
    t.length === 1 && k0(t[0]) && (t = t[0]),
    (!t || !t.hasOwnProperty) && (t = {}),
    e.replace(w0, (n, o) => (t.hasOwnProperty(o) ? t[o] : ''))
  )
}
const k0 = (e) => e !== null && typeof e == 'object',
  jt = {
    EXPECTED_TOKEN: 1,
    INVALID_TOKEN_IN_PLACEHOLDER: 2,
    UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER: 3,
    UNKNOWN_ESCAPE_SEQUENCE: 4,
    INVALID_UNICODE_ESCAPE_SEQUENCE: 5,
    UNBALANCED_CLOSING_BRACE: 6,
    UNTERMINATED_CLOSING_BRACE: 7,
    EMPTY_PLACEHOLDER: 8,
    NOT_ALLOW_NEST_PLACEHOLDER: 9,
    INVALID_LINKED_FORMAT: 10,
    MUST_HAVE_MESSAGES_IN_PLURAL: 11,
    UNEXPECTED_EMPTY_LINKED_MODIFIER: 12,
    UNEXPECTED_EMPTY_LINKED_KEY: 13,
    UNEXPECTED_LEXICAL_ANALYSIS: 14,
    UNHANDLED_CODEGEN_NODE_TYPE: 15,
    UNHANDLED_MINIFIER_NODE_TYPE: 16,
    __EXTEND_POINT__: 17,
  },
  T0 = {
    [jt.EXPECTED_TOKEN]: "Expected token: '{0}'",
    [jt.INVALID_TOKEN_IN_PLACEHOLDER]: "Invalid token in placeholder: '{0}'",
    [jt.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER]: 'Unterminated single quote in placeholder',
    [jt.UNKNOWN_ESCAPE_SEQUENCE]: 'Unknown escape sequence: \\{0}',
    [jt.INVALID_UNICODE_ESCAPE_SEQUENCE]: 'Invalid unicode escape sequence: {0}',
    [jt.UNBALANCED_CLOSING_BRACE]: 'Unbalanced closing brace',
    [jt.UNTERMINATED_CLOSING_BRACE]: 'Unterminated closing brace',
    [jt.EMPTY_PLACEHOLDER]: 'Empty placeholder',
    [jt.NOT_ALLOW_NEST_PLACEHOLDER]: 'Not allowed nest placeholder',
    [jt.INVALID_LINKED_FORMAT]: 'Invalid linked format',
    [jt.MUST_HAVE_MESSAGES_IN_PLURAL]: 'Plural must have messages',
    [jt.UNEXPECTED_EMPTY_LINKED_MODIFIER]: 'Unexpected empty linked modifier',
    [jt.UNEXPECTED_EMPTY_LINKED_KEY]: 'Unexpected empty linked key',
    [jt.UNEXPECTED_LEXICAL_ANALYSIS]: "Unexpected lexical analysis in token: '{0}'",
    [jt.UNHANDLED_CODEGEN_NODE_TYPE]: "unhandled codegen node type: '{0}'",
    [jt.UNHANDLED_MINIFIER_NODE_TYPE]: "unhandled mimifier node type: '{0}'",
  }
function Dv(e, t, n = {}) {
  const { domain: o, messages: r, args: a } = n,
    l = $0((r || T0)[e] || '', ...(a || [])),
    s = new SyntaxError(String(l))
  return (s.code = e), (s.domain = o), s
}
/*!
 * core-base v9.6.5
 * (c) 2023 kazuya kawaguchi
 * Released under the MIT License.
 */ function V0() {
  typeof __INTLIFY_PROD_DEVTOOLS__ != 'boolean' && (Ku().__INTLIFY_PROD_DEVTOOLS__ = !1)
}
const Oo = []
Oo[0] = { w: [0], i: [3, 0], '[': [4], o: [7] }
Oo[1] = { w: [1], '.': [2], '[': [4], o: [7] }
Oo[2] = { w: [2], i: [3, 0], 0: [3, 0] }
Oo[3] = { i: [3, 0], 0: [3, 0], w: [1, 1], '.': [2, 1], '[': [4, 1], o: [7, 1] }
Oo[4] = { "'": [5, 0], '"': [6, 0], '[': [4, 2], ']': [1, 3], o: 8, l: [4, 0] }
Oo[5] = { "'": [4, 0], o: 8, l: [5, 0] }
Oo[6] = { '"': [4, 0], o: 8, l: [6, 0] }
const P0 = /^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/
function A0(e) {
  return P0.test(e)
}
function E0(e) {
  const t = e.charCodeAt(0),
    n = e.charCodeAt(e.length - 1)
  return t === n && (t === 34 || t === 39) ? e.slice(1, -1) : e
}
function I0(e) {
  if (e == null) return 'o'
  switch (e.charCodeAt(0)) {
    case 91:
    case 93:
    case 46:
    case 34:
    case 39:
      return e
    case 95:
    case 36:
    case 45:
      return 'i'
    case 9:
    case 10:
    case 13:
    case 160:
    case 65279:
    case 8232:
    case 8233:
      return 'w'
  }
  return 'i'
}
function x0(e) {
  const t = e.trim()
  return e.charAt(0) === '0' && isNaN(parseInt(e)) ? !1 : A0(t) ? E0(t) : '*' + t
}
function O0(e) {
  const t = []
  let n = -1,
    o = 0,
    r = 0,
    a,
    l,
    s,
    i,
    u,
    c,
    d
  const m = []
  ;(m[0] = () => {
    l === void 0 ? (l = s) : (l += s)
  }),
    (m[1] = () => {
      l !== void 0 && (t.push(l), (l = void 0))
    }),
    (m[2] = () => {
      m[0](), r++
    }),
    (m[3] = () => {
      if (r > 0) r--, (o = 4), m[0]()
      else {
        if (((r = 0), l === void 0 || ((l = x0(l)), l === !1))) return !1
        m[1]()
      }
    })
  function v() {
    const g = e[n + 1]
    if ((o === 5 && g === "'") || (o === 6 && g === '"')) return n++, (s = '\\' + g), m[0](), !0
  }
  for (; o !== null; )
    if ((n++, (a = e[n]), !(a === '\\' && v()))) {
      if (
        ((i = I0(a)),
        (d = Oo[o]),
        (u = d[i] || d.l || 8),
        u === 8 || ((o = u[0]), u[1] !== void 0 && ((c = m[u[1]]), c && ((s = a), c() === !1))))
      )
        return
      if (o === 7) return t
    }
}
const Ad = new Map()
function L0(e, t) {
  return ht(e) ? e[t] : null
}
function B0(e, t) {
  if (!ht(e)) return null
  let n = Ad.get(t)
  if ((n || ((n = O0(t)), n && Ad.set(t, n)), !n)) return null
  const o = n.length
  let r = e,
    a = 0
  for (; a < o; ) {
    const l = r[n[a]]
    if (l === void 0 || Et(r)) return null
    ;(r = l), a++
  }
  return r
}
const N0 = (e) => e,
  R0 = (e) => '',
  D0 = 'text',
  M0 = (e) => (e.length === 0 ? '' : C0(e)),
  F0 = z0
function Ed(e, t) {
  return (e = Math.abs(e)), t === 2 ? (e ? (e > 1 ? 1 : 0) : 1) : e ? Math.min(e, 2) : 0
}
function j0(e) {
  const t = Rt(e.pluralIndex) ? e.pluralIndex : -1
  return e.named && (Rt(e.named.count) || Rt(e.named.n))
    ? Rt(e.named.count)
      ? e.named.count
      : Rt(e.named.n)
        ? e.named.n
        : t
    : t
}
function H0(e, t) {
  t.count || (t.count = e), t.n || (t.n = e)
}
function U0(e = {}) {
  const t = e.locale,
    n = j0(e),
    o = ht(e.pluralRules) && Me(t) && Et(e.pluralRules[t]) ? e.pluralRules[t] : Ed,
    r = ht(e.pluralRules) && Me(t) && Et(e.pluralRules[t]) ? Ed : void 0,
    a = (y) => y[o(n, y.length, r)],
    l = e.list || [],
    s = (y) => l[y],
    i = e.named || {}
  Rt(e.pluralIndex) && H0(n, i)
  const u = (y) => i[y]
  function c(y) {
    const b = Et(e.messages) ? e.messages(y) : ht(e.messages) ? e.messages[y] : !1
    return b || (e.parent ? e.parent.message(y) : R0)
  }
  const d = (y) => (e.modifiers ? e.modifiers[y] : N0),
    m = st(e.processor) && Et(e.processor.normalize) ? e.processor.normalize : M0,
    v = st(e.processor) && Et(e.processor.interpolate) ? e.processor.interpolate : F0,
    g = st(e.processor) && Me(e.processor.type) ? e.processor.type : D0,
    _ = {
      list: s,
      named: u,
      plural: a,
      linked: (y, ...b) => {
        const [w, S] = b
        let $ = 'text',
          k = ''
        b.length === 1
          ? ht(w)
            ? ((k = w.modifier || k), ($ = w.type || $))
            : Me(w) && (k = w || k)
          : b.length === 2 && (Me(w) && (k = w || k), Me(S) && ($ = S || $))
        const z = c(y)(_),
          V = $ === 'vnode' && Lt(z) && k ? z[0] : z
        return k ? d(k)(V, $) : V
      },
      message: c,
      type: g,
      interpolate: v,
      normalize: m,
      values: Gt({}, l, i),
    }
  return _
}
let xa = null
function W0(e) {
  xa = e
}
function G0(e, t, n) {
  xa && xa.emit('i18n:init', { timestamp: Date.now(), i18n: e, version: t, meta: n })
}
const K0 = q0('function:translate')
function q0(e) {
  return (t) => xa && xa.emit(e, t)
}
const Y0 = {
  NOT_FOUND_KEY: 1,
  FALLBACK_TO_TRANSLATE: 2,
  CANNOT_FORMAT_NUMBER: 3,
  FALLBACK_TO_NUMBER_FORMAT: 4,
  CANNOT_FORMAT_DATE: 5,
  FALLBACK_TO_DATE_FORMAT: 6,
  EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER: 7,
  __EXTEND_POINT__: 8,
}
function Yu(e, t) {
  return t.locale != null ? Id(t.locale) : Id(e.locale)
}
let ii
function Id(e) {
  return Me(e) ? e : ii != null && e.resolvedOnce ? ii : (ii = e())
}
function X0(e, t, n) {
  return [...new Set([n, ...(Lt(t) ? t : ht(t) ? Object.keys(t) : Me(t) ? [t] : [n])])]
}
function Mv(e, t, n) {
  const o = Me(n) ? n : Kl,
    r = e
  r.__localeChainCache || (r.__localeChainCache = new Map())
  let a = r.__localeChainCache.get(o)
  if (!a) {
    a = []
    let l = [n]
    for (; Lt(l); ) l = xd(a, l, t)
    const s = Lt(t) || !st(t) ? t : t.default ? t.default : null
    ;(l = Me(s) ? [s] : s), Lt(l) && xd(a, l, !1), r.__localeChainCache.set(o, a)
  }
  return a
}
function xd(e, t, n) {
  let o = !0
  for (let r = 0; r < t.length && Pt(o); r++) {
    const a = t[r]
    Me(a) && (o = J0(e, t[r], n))
  }
  return o
}
function J0(e, t, n) {
  let o
  const r = t.split('-')
  do {
    const a = r.join('-')
    ;(o = Q0(e, a, n)), r.splice(-1, 1)
  } while (r.length && o === !0)
  return o
}
function Q0(e, t, n) {
  let o = !1
  if (!e.includes(t) && ((o = !0), t)) {
    o = t[t.length - 1] !== '!'
    const r = t.replace(/!/g, '')
    e.push(r), (Lt(n) || st(n)) && n[r] && (o = n[r])
  }
  return o
}
const Z0 = '9.6.5',
  Cs = -1,
  Kl = 'en-US',
  Od = '',
  Ld = (e) => `${e.charAt(0).toLocaleUpperCase()}${e.substr(1)}`
function eC() {
  return {
    upper: (e, t) =>
      t === 'text' && Me(e)
        ? e.toUpperCase()
        : t === 'vnode' && ht(e) && '__v_isVNode' in e
          ? e.children.toUpperCase()
          : e,
    lower: (e, t) =>
      t === 'text' && Me(e)
        ? e.toLowerCase()
        : t === 'vnode' && ht(e) && '__v_isVNode' in e
          ? e.children.toLowerCase()
          : e,
    capitalize: (e, t) =>
      t === 'text' && Me(e) ? Ld(e) : t === 'vnode' && ht(e) && '__v_isVNode' in e ? Ld(e.children) : e,
  }
}
let tC, Fv
function nC(e) {
  Fv = e
}
let jv
function oC(e) {
  jv = e
}
let Hv = null
const rC = (e) => {
    Hv = e
  },
  aC = () => Hv
let Uv = null
const Bd = (e) => {
    Uv = e
  },
  lC = () => Uv
let Nd = 0
function sC(e = {}) {
  const t = Et(e.onWarn) ? e.onWarn : S0,
    n = Me(e.version) ? e.version : Z0,
    o = Me(e.locale) || Et(e.locale) ? e.locale : Kl,
    r = Et(o) ? Kl : o,
    a =
      Lt(e.fallbackLocale) || st(e.fallbackLocale) || Me(e.fallbackLocale) || e.fallbackLocale === !1
        ? e.fallbackLocale
        : r,
    l = st(e.messages) ? e.messages : { [r]: {} },
    s = st(e.datetimeFormats) ? e.datetimeFormats : { [r]: {} },
    i = st(e.numberFormats) ? e.numberFormats : { [r]: {} },
    u = Gt({}, e.modifiers || {}, eC()),
    c = e.pluralRules || {},
    d = Et(e.missing) ? e.missing : null,
    m = Pt(e.missingWarn) || Gl(e.missingWarn) ? e.missingWarn : !0,
    v = Pt(e.fallbackWarn) || Gl(e.fallbackWarn) ? e.fallbackWarn : !0,
    g = !!e.fallbackFormat,
    h = !!e.unresolving,
    _ = Et(e.postTranslation) ? e.postTranslation : null,
    y = st(e.processor) ? e.processor : null,
    b = Pt(e.warnHtmlMessage) ? e.warnHtmlMessage : !0,
    w = !!e.escapeParameter,
    S = Et(e.messageCompiler) ? e.messageCompiler : tC,
    $ = Et(e.messageResolver) ? e.messageResolver : Fv || L0,
    k = Et(e.localeFallbacker) ? e.localeFallbacker : jv || X0,
    z = ht(e.fallbackContext) ? e.fallbackContext : void 0,
    V = e,
    T = ht(V.__datetimeFormatters) ? V.__datetimeFormatters : new Map(),
    B = ht(V.__numberFormatters) ? V.__numberFormatters : new Map(),
    K = ht(V.__meta) ? V.__meta : {}
  Nd++
  const j = {
    version: n,
    cid: Nd,
    locale: o,
    fallbackLocale: a,
    messages: l,
    modifiers: u,
    pluralRules: c,
    missing: d,
    missingWarn: m,
    fallbackWarn: v,
    fallbackFormat: g,
    unresolving: h,
    postTranslation: _,
    processor: y,
    warnHtmlMessage: b,
    escapeParameter: w,
    messageCompiler: S,
    messageResolver: $,
    localeFallbacker: k,
    fallbackContext: z,
    onWarn: t,
    __meta: K,
  }
  return (
    (j.datetimeFormats = s),
    (j.numberFormats = i),
    (j.__datetimeFormatters = T),
    (j.__numberFormatters = B),
    __INTLIFY_PROD_DEVTOOLS__ && G0(j, n, K),
    j
  )
}
function Xu(e, t, n, o, r) {
  const { missing: a, onWarn: l } = e
  if (a !== null) {
    const s = a(e, n, t, r)
    return Me(s) ? s : t
  } else return t
}
function oa(e, t, n) {
  const o = e
  ;(o.__localeChainCache = new Map()), e.localeFallbacker(e, n, t)
}
const Wv = jt.__EXTEND_POINT__,
  _l = qu(Wv),
  Ko = {
    INVALID_ARGUMENT: Wv,
    INVALID_DATE_ARGUMENT: _l(),
    INVALID_ISO_DATE_ARGUMENT: _l(),
    NOT_SUPPORT_NON_STRING_MESSAGE: _l(),
    __EXTEND_POINT__: _l(),
  }
function kr(e) {
  return Dv(e, null, void 0)
}
const Br = (e) => ht(e) && (e.t === 0 || e.type === 0) && ('b' in e || 'body' in e),
  Rd = () => '',
  hn = (e) => Et(e)
function Dd(e, ...t) {
  const {
      fallbackFormat: n,
      postTranslation: o,
      unresolving: r,
      messageCompiler: a,
      fallbackLocale: l,
      messages: s,
    } = e,
    [i, u] = Ki(...t),
    c = Pt(u.missingWarn) ? u.missingWarn : e.missingWarn,
    d = Pt(u.fallbackWarn) ? u.fallbackWarn : e.fallbackWarn,
    m = Pt(u.escapeParameter) ? u.escapeParameter : e.escapeParameter,
    v = !!u.resolvedMessage,
    g = Me(u.default) || Pt(u.default) ? (Pt(u.default) ? (a ? i : () => i) : u.default) : n ? (a ? i : () => i) : '',
    h = n || g !== '',
    _ = Yu(e, u)
  m && iC(u)
  let [y, b, w] = v ? [i, _, s[_] || {}] : Gv(e, i, _, l, d, c),
    S = y,
    $ = i
  if ((!v && !(Me(S) || Br(S) || hn(S)) && h && ((S = g), ($ = S)), !v && (!(Me(S) || Br(S) || hn(S)) || !Me(b))))
    return r ? Cs : i
  let k = !1
  const z = () => {
      k = !0
    },
    V = hn(S) ? S : Kv(e, i, b, S, $, z)
  if (k) return S
  const T = dC(e, b, w, u),
    B = U0(T),
    K = uC(e, V, B),
    j = o ? o(K, i) : K
  if (__INTLIFY_PROD_DEVTOOLS__) {
    const U = {
      timestamp: Date.now(),
      key: Me(i) ? i : hn(S) ? S.key : '',
      locale: b || (hn(S) ? S.locale : ''),
      format: Me(S) ? S : hn(S) ? S.source : '',
      message: j,
    }
    ;(U.meta = Gt({}, e.__meta, aC() || {})), K0(U)
  }
  return j
}
function iC(e) {
  Lt(e.list)
    ? (e.list = e.list.map((t) => (Me(t) ? Pd(t) : t)))
    : ht(e.named) &&
      Object.keys(e.named).forEach((t) => {
        Me(e.named[t]) && (e.named[t] = Pd(e.named[t]))
      })
}
function Gv(e, t, n, o, r, a) {
  const { messages: l, onWarn: s, messageResolver: i, localeFallbacker: u } = e,
    c = u(e, o, n)
  let d = {},
    m,
    v = null
  const g = 'translate'
  for (
    let h = 0;
    h < c.length && ((m = c[h]), (d = l[m] || {}), (v = i(d, t)) === null && (v = d[t]), !(Me(v) || Br(v) || hn(v)));
    h++
  ) {
    const _ = Xu(e, t, m, a, g)
    _ !== t && (v = _)
  }
  return [v, m, d]
}
function Kv(e, t, n, o, r, a) {
  const { messageCompiler: l, warnHtmlMessage: s } = e
  if (hn(o)) {
    const u = o
    return (u.locale = u.locale || n), (u.key = u.key || t), u
  }
  if (l == null) {
    const u = () => o
    return (u.locale = n), (u.key = t), u
  }
  const i = l(o, cC(e, n, r, o, s, a))
  return (i.locale = n), (i.key = t), (i.source = o), i
}
function uC(e, t, n) {
  return t(n)
}
function Ki(...e) {
  const [t, n, o] = e,
    r = {}
  if (!Me(t) && !Rt(t) && !hn(t) && !Br(t)) throw kr(Ko.INVALID_ARGUMENT)
  const a = Rt(t) ? String(t) : (hn(t), t)
  return (
    Rt(n) ? (r.plural = n) : Me(n) ? (r.default = n) : st(n) && !zs(n) ? (r.named = n) : Lt(n) && (r.list = n),
    Rt(o) ? (r.plural = o) : Me(o) ? (r.default = o) : st(o) && Gt(r, o),
    [a, r]
  )
}
function cC(e, t, n, o, r, a) {
  return {
    locale: t,
    key: n,
    warnHtmlMessage: r,
    onError: (l) => {
      throw (a && a(l), l)
    },
    onCacheKey: (l) => h0(t, n, l),
  }
}
function dC(e, t, n, o) {
  const {
      modifiers: r,
      pluralRules: a,
      messageResolver: l,
      fallbackLocale: s,
      fallbackWarn: i,
      missingWarn: u,
      fallbackContext: c,
    } = e,
    m = {
      locale: t,
      modifiers: r,
      pluralRules: a,
      messages: (v) => {
        let g = l(n, v)
        if (g == null && c) {
          const [, , h] = Gv(c, v, t, s, i, u)
          g = l(h, v)
        }
        if (Me(g) || Br(g)) {
          let h = !1
          const y = Kv(e, v, t, g, v, () => {
            h = !0
          })
          return h ? Rd : y
        } else return hn(g) ? g : Rd
      },
    }
  return (
    e.processor && (m.processor = e.processor),
    o.list && (m.list = o.list),
    o.named && (m.named = o.named),
    Rt(o.plural) && (m.pluralIndex = o.plural),
    m
  )
}
function Md(e, ...t) {
  const { datetimeFormats: n, unresolving: o, fallbackLocale: r, onWarn: a, localeFallbacker: l } = e,
    { __datetimeFormatters: s } = e,
    [i, u, c, d] = qi(...t),
    m = Pt(c.missingWarn) ? c.missingWarn : e.missingWarn
  Pt(c.fallbackWarn) ? c.fallbackWarn : e.fallbackWarn
  const v = !!c.part,
    g = Yu(e, c),
    h = l(e, r, g)
  if (!Me(i) || i === '') return new Intl.DateTimeFormat(g, d).format(u)
  let _ = {},
    y,
    b = null
  const w = 'datetime format'
  for (let k = 0; k < h.length && ((y = h[k]), (_ = n[y] || {}), (b = _[i]), !st(b)); k++) Xu(e, i, y, m, w)
  if (!st(b) || !Me(y)) return o ? Cs : i
  let S = `${y}__${i}`
  zs(d) || (S = `${S}__${JSON.stringify(d)}`)
  let $ = s.get(S)
  return $ || (($ = new Intl.DateTimeFormat(y, Gt({}, b, d))), s.set(S, $)), v ? $.formatToParts(u) : $.format(u)
}
const qv = [
  'localeMatcher',
  'weekday',
  'era',
  'year',
  'month',
  'day',
  'hour',
  'minute',
  'second',
  'timeZoneName',
  'formatMatcher',
  'hour12',
  'timeZone',
  'dateStyle',
  'timeStyle',
  'calendar',
  'dayPeriod',
  'numberingSystem',
  'hourCycle',
  'fractionalSecondDigits',
]
function qi(...e) {
  const [t, n, o, r] = e,
    a = {}
  let l = {},
    s
  if (Me(t)) {
    const i = t.match(/(\d{4}-\d{2}-\d{2})(T|\s)?(.*)/)
    if (!i) throw kr(Ko.INVALID_ISO_DATE_ARGUMENT)
    const u = i[3]
      ? i[3].trim().startsWith('T')
        ? `${i[1].trim()}${i[3].trim()}`
        : `${i[1].trim()}T${i[3].trim()}`
      : i[1].trim()
    s = new Date(u)
    try {
      s.toISOString()
    } catch {
      throw kr(Ko.INVALID_ISO_DATE_ARGUMENT)
    }
  } else if (_0(t)) {
    if (isNaN(t.getTime())) throw kr(Ko.INVALID_DATE_ARGUMENT)
    s = t
  } else if (Rt(t)) s = t
  else throw kr(Ko.INVALID_ARGUMENT)
  return (
    Me(n)
      ? (a.key = n)
      : st(n) &&
        Object.keys(n).forEach((i) => {
          qv.includes(i) ? (l[i] = n[i]) : (a[i] = n[i])
        }),
    Me(o) ? (a.locale = o) : st(o) && (l = o),
    st(r) && (l = r),
    [a.key || '', s, a, l]
  )
}
function Fd(e, t, n) {
  const o = e
  for (const r in n) {
    const a = `${t}__${r}`
    o.__datetimeFormatters.has(a) && o.__datetimeFormatters.delete(a)
  }
}
function jd(e, ...t) {
  const { numberFormats: n, unresolving: o, fallbackLocale: r, onWarn: a, localeFallbacker: l } = e,
    { __numberFormatters: s } = e,
    [i, u, c, d] = Yi(...t),
    m = Pt(c.missingWarn) ? c.missingWarn : e.missingWarn
  Pt(c.fallbackWarn) ? c.fallbackWarn : e.fallbackWarn
  const v = !!c.part,
    g = Yu(e, c),
    h = l(e, r, g)
  if (!Me(i) || i === '') return new Intl.NumberFormat(g, d).format(u)
  let _ = {},
    y,
    b = null
  const w = 'number format'
  for (let k = 0; k < h.length && ((y = h[k]), (_ = n[y] || {}), (b = _[i]), !st(b)); k++) Xu(e, i, y, m, w)
  if (!st(b) || !Me(y)) return o ? Cs : i
  let S = `${y}__${i}`
  zs(d) || (S = `${S}__${JSON.stringify(d)}`)
  let $ = s.get(S)
  return $ || (($ = new Intl.NumberFormat(y, Gt({}, b, d))), s.set(S, $)), v ? $.formatToParts(u) : $.format(u)
}
const Yv = [
  'localeMatcher',
  'style',
  'currency',
  'currencyDisplay',
  'currencySign',
  'useGrouping',
  'minimumIntegerDigits',
  'minimumFractionDigits',
  'maximumFractionDigits',
  'minimumSignificantDigits',
  'maximumSignificantDigits',
  'compactDisplay',
  'notation',
  'signDisplay',
  'unit',
  'unitDisplay',
  'roundingMode',
  'roundingPriority',
  'roundingIncrement',
  'trailingZeroDisplay',
]
function Yi(...e) {
  const [t, n, o, r] = e,
    a = {}
  let l = {}
  if (!Rt(t)) throw kr(Ko.INVALID_ARGUMENT)
  const s = t
  return (
    Me(n)
      ? (a.key = n)
      : st(n) &&
        Object.keys(n).forEach((i) => {
          Yv.includes(i) ? (l[i] = n[i]) : (a[i] = n[i])
        }),
    Me(o) ? (a.locale = o) : st(o) && (l = o),
    st(r) && (l = r),
    [a.key || '', s, a, l]
  )
}
function Hd(e, t, n) {
  const o = e
  for (const r in n) {
    const a = `${t}__${r}`
    o.__numberFormatters.has(a) && o.__numberFormatters.delete(a)
  }
}
V0()
/*!
 * vue-i18n v9.6.5
 * (c) 2023 kazuya kawaguchi
 * Released under the MIT License.
 */ const mC = '9.6.5'
function fC() {
  typeof __INTLIFY_PROD_DEVTOOLS__ != 'boolean' && (Ku().__INTLIFY_PROD_DEVTOOLS__ = !1)
}
const Xv = Y0.__EXTEND_POINT__,
  fo = qu(Xv)
fo(), fo(), fo(), fo(), fo(), fo(), fo(), fo()
const Jv = Ko.__EXTEND_POINT__,
  tn = qu(Jv),
  fn = {
    UNEXPECTED_RETURN_TYPE: Jv,
    INVALID_ARGUMENT: tn(),
    MUST_BE_CALL_SETUP_TOP: tn(),
    NOT_INSTALLED: tn(),
    NOT_AVAILABLE_IN_LEGACY_MODE: tn(),
    REQUIRED_VALUE: tn(),
    INVALID_VALUE: tn(),
    CANNOT_SETUP_VUE_DEVTOOLS_PLUGIN: tn(),
    NOT_INSTALLED_WITH_PROVIDE: tn(),
    UNEXPECTED_ERROR: tn(),
    NOT_COMPATIBLE_LEGACY_VUE_I18N: tn(),
    BRIDGE_SUPPORT_VUE_2_ONLY: tn(),
    MUST_DEFINE_I18N_OPTION_IN_ALLOW_COMPOSITION: tn(),
    NOT_AVAILABLE_COMPOSITION_IN_LEGACY: tn(),
    __EXTEND_POINT__: tn(),
  }
function zn(e, ...t) {
  return Dv(e, null, void 0)
}
const Xi = xo('__translateVNode'),
  Ji = xo('__datetimeParts'),
  Qi = xo('__numberParts'),
  pC = xo('__setPluralRules'),
  vC = xo('__injectWithOption'),
  Zi = xo('__dispose')
function Oa(e) {
  if (!ht(e)) return e
  for (const t in e)
    if (Ia(e, t))
      if (!t.includes('.')) ht(e[t]) && Oa(e[t])
      else {
        const n = t.split('.'),
          o = n.length - 1
        let r = e,
          a = !1
        for (let l = 0; l < o; l++) {
          if ((n[l] in r || (r[n[l]] = {}), !ht(r[n[l]]))) {
            a = !0
            break
          }
          r = r[n[l]]
        }
        a || ((r[n[o]] = e[t]), delete e[t]), ht(r[n[o]]) && Oa(r[n[o]])
      }
  return e
}
function Qv(e, t) {
  const { messages: n, __i18n: o, messageResolver: r, flatJson: a } = t,
    l = st(n) ? n : Lt(o) ? {} : { [e]: {} }
  if (
    (Lt(o) &&
      o.forEach((s) => {
        if ('locale' in s && 'resource' in s) {
          const { locale: i, resource: u } = s
          i ? ((l[i] = l[i] || {}), va(u, l[i])) : va(u, l)
        } else Me(s) && va(JSON.parse(s), l)
      }),
    r == null && a)
  )
    for (const s in l) Ia(l, s) && Oa(l[s])
  return l
}
const bl = (e) => !ht(e) || Lt(e)
function va(e, t) {
  if (bl(e) || bl(t)) throw zn(fn.INVALID_VALUE)
  for (const n in e) Ia(e, n) && (bl(e[n]) || bl(t[n]) ? (t[n] = e[n]) : va(e[n], t[n]))
}
function Zv(e) {
  return e.type
}
function gC(e, t, n) {
  let o = ht(t.messages) ? t.messages : {}
  '__i18nGlobal' in n && (o = Qv(e.locale.value, { messages: o, __i18n: n.__i18nGlobal }))
  const r = Object.keys(o)
  r.length &&
    r.forEach((a) => {
      e.mergeLocaleMessage(a, o[a])
    })
  {
    if (ht(t.datetimeFormats)) {
      const a = Object.keys(t.datetimeFormats)
      a.length &&
        a.forEach((l) => {
          e.mergeDateTimeFormat(l, t.datetimeFormats[l])
        })
    }
    if (ht(t.numberFormats)) {
      const a = Object.keys(t.numberFormats)
      a.length &&
        a.forEach((l) => {
          e.mergeNumberFormat(l, t.numberFormats[l])
        })
    }
  }
}
function Ud(e) {
  return ne(ur, null, e, 0)
}
const Wd = '__INTLIFY_META__',
  Gd = () => [],
  hC = () => !1
let Kd = 0
function qd(e) {
  return (t, n, o, r) => e(n, o, ct() || void 0, r)
}
const yC = () => {
  const e = ct()
  let t = null
  return e && (t = Zv(e)[Wd]) ? { [Wd]: t } : null
}
function eg(e = {}, t) {
  const { __root: n, __injectWithOption: o } = e,
    r = n === void 0,
    a = e.flatJson
  let l = Pt(e.inheritLocale) ? e.inheritLocale : !0
  const s = H(n && l ? n.locale.value : Me(e.locale) ? e.locale : Kl),
    i = H(
      n && l
        ? n.fallbackLocale.value
        : Me(e.fallbackLocale) || Lt(e.fallbackLocale) || st(e.fallbackLocale) || e.fallbackLocale === !1
          ? e.fallbackLocale
          : s.value,
    ),
    u = H(Qv(s.value, e)),
    c = H(st(e.datetimeFormats) ? e.datetimeFormats : { [s.value]: {} }),
    d = H(st(e.numberFormats) ? e.numberFormats : { [s.value]: {} })
  let m = n ? n.missingWarn : Pt(e.missingWarn) || Gl(e.missingWarn) ? e.missingWarn : !0,
    v = n ? n.fallbackWarn : Pt(e.fallbackWarn) || Gl(e.fallbackWarn) ? e.fallbackWarn : !0,
    g = n ? n.fallbackRoot : Pt(e.fallbackRoot) ? e.fallbackRoot : !0,
    h = !!e.fallbackFormat,
    _ = Et(e.missing) ? e.missing : null,
    y = Et(e.missing) ? qd(e.missing) : null,
    b = Et(e.postTranslation) ? e.postTranslation : null,
    w = n ? n.warnHtmlMessage : Pt(e.warnHtmlMessage) ? e.warnHtmlMessage : !0,
    S = !!e.escapeParameter
  const $ = n ? n.modifiers : st(e.modifiers) ? e.modifiers : {}
  let k = e.pluralRules || (n && n.pluralRules),
    z
  ;(z = (() => {
    r && Bd(null)
    const F = {
      version: mC,
      locale: s.value,
      fallbackLocale: i.value,
      messages: u.value,
      modifiers: $,
      pluralRules: k,
      missing: y === null ? void 0 : y,
      missingWarn: m,
      fallbackWarn: v,
      fallbackFormat: h,
      unresolving: !0,
      postTranslation: b === null ? void 0 : b,
      warnHtmlMessage: w,
      escapeParameter: S,
      messageResolver: e.messageResolver,
      messageCompiler: e.messageCompiler,
      __meta: { framework: 'vue' },
    }
    ;(F.datetimeFormats = c.value),
      (F.numberFormats = d.value),
      (F.__datetimeFormatters = st(z) ? z.__datetimeFormatters : void 0),
      (F.__numberFormatters = st(z) ? z.__numberFormatters : void 0)
    const Z = sC(F)
    return r && Bd(Z), Z
  })()),
    oa(z, s.value, i.value)
  function T() {
    return [s.value, i.value, u.value, c.value, d.value]
  }
  const B = p({
      get: () => s.value,
      set: (F) => {
        ;(s.value = F), (z.locale = s.value)
      },
    }),
    K = p({
      get: () => i.value,
      set: (F) => {
        ;(i.value = F), (z.fallbackLocale = i.value), oa(z, s.value, F)
      },
    }),
    j = p(() => u.value),
    U = p(() => c.value),
    D = p(() => d.value)
  function O() {
    return Et(b) ? b : null
  }
  function R(F) {
    ;(b = F), (z.postTranslation = F)
  }
  function N() {
    return _
  }
  function x(F) {
    F !== null && (y = qd(F)), (_ = F), (z.missing = y)
  }
  const ce = (F, Z, Ve, De, qe, Ye) => {
    T()
    let oe
    try {
      __INTLIFY_PROD_DEVTOOLS__, r || (z.fallbackContext = n ? lC() : void 0), (oe = F(z))
    } finally {
      __INTLIFY_PROD_DEVTOOLS__, r || (z.fallbackContext = void 0)
    }
    if ((Ve !== 'translate exists' && Rt(oe) && oe === Cs) || (Ve === 'translate exists' && !oe)) {
      const [de, Oe] = Z()
      return n && g ? De(n) : qe(de)
    } else {
      if (Ye(oe)) return oe
      throw zn(fn.UNEXPECTED_RETURN_TYPE)
    }
  }
  function ue(...F) {
    return ce(
      (Z) => Reflect.apply(Dd, null, [Z, ...F]),
      () => Ki(...F),
      'translate',
      (Z) => Reflect.apply(Z.t, Z, [...F]),
      (Z) => Z,
      (Z) => Me(Z),
    )
  }
  function be(...F) {
    const [Z, Ve, De] = F
    if (De && !ht(De)) throw zn(fn.INVALID_ARGUMENT)
    return ue(Z, Ve, Gt({ resolvedMessage: !0 }, De || {}))
  }
  function xe(...F) {
    return ce(
      (Z) => Reflect.apply(Md, null, [Z, ...F]),
      () => qi(...F),
      'datetime format',
      (Z) => Reflect.apply(Z.d, Z, [...F]),
      () => Od,
      (Z) => Me(Z),
    )
  }
  function we(...F) {
    return ce(
      (Z) => Reflect.apply(jd, null, [Z, ...F]),
      () => Yi(...F),
      'number format',
      (Z) => Reflect.apply(Z.n, Z, [...F]),
      () => Od,
      (Z) => Me(Z),
    )
  }
  function J(F) {
    return F.map((Z) => (Me(Z) || Rt(Z) || Pt(Z) ? Ud(String(Z)) : Z))
  }
  const Ce = { normalize: J, interpolate: (F) => F, type: 'vnode' }
  function I(...F) {
    return ce(
      (Z) => {
        let Ve
        const De = Z
        try {
          ;(De.processor = Ce), (Ve = Reflect.apply(Dd, null, [De, ...F]))
        } finally {
          De.processor = null
        }
        return Ve
      },
      () => Ki(...F),
      'translate',
      (Z) => Z[Xi](...F),
      (Z) => [Ud(Z)],
      (Z) => Lt(Z),
    )
  }
  function M(...F) {
    return ce(
      (Z) => Reflect.apply(jd, null, [Z, ...F]),
      () => Yi(...F),
      'number format',
      (Z) => Z[Qi](...F),
      Gd,
      (Z) => Me(Z) || Lt(Z),
    )
  }
  function ae(...F) {
    return ce(
      (Z) => Reflect.apply(Md, null, [Z, ...F]),
      () => qi(...F),
      'datetime format',
      (Z) => Z[Ji](...F),
      Gd,
      (Z) => Me(Z) || Lt(Z),
    )
  }
  function se(F) {
    ;(k = F), (z.pluralRules = k)
  }
  function Ee(F, Z) {
    return ce(
      () => {
        if (!F) return !1
        const Ve = Me(Z) ? Z : s.value,
          De = E(Ve),
          qe = z.messageResolver(De, F)
        return Br(qe) || hn(qe) || Me(qe)
      },
      () => [F],
      'translate exists',
      (Ve) => Reflect.apply(Ve.te, Ve, [F, Z]),
      hC,
      (Ve) => Pt(Ve),
    )
  }
  function He(F) {
    let Z = null
    const Ve = Mv(z, i.value, s.value)
    for (let De = 0; De < Ve.length; De++) {
      const qe = u.value[Ve[De]] || {},
        Ye = z.messageResolver(qe, F)
      if (Ye != null) {
        Z = Ye
        break
      }
    }
    return Z
  }
  function P(F) {
    const Z = He(F)
    return Z ?? (n ? n.tm(F) || {} : {})
  }
  function E(F) {
    return u.value[F] || {}
  }
  function X(F, Z) {
    if (a) {
      const Ve = { [F]: Z }
      for (const De in Ve) Ia(Ve, De) && Oa(Ve[De])
      Z = Ve[F]
    }
    ;(u.value[F] = Z), (z.messages = u.value)
  }
  function te(F, Z) {
    u.value[F] = u.value[F] || {}
    const Ve = { [F]: Z }
    for (const De in Ve) Ia(Ve, De) && Oa(Ve[De])
    ;(Z = Ve[F]), va(Z, u.value[F]), (z.messages = u.value)
  }
  function q(F) {
    return c.value[F] || {}
  }
  function Q(F, Z) {
    ;(c.value[F] = Z), (z.datetimeFormats = c.value), Fd(z, F, Z)
  }
  function ie(F, Z) {
    ;(c.value[F] = Gt(c.value[F] || {}, Z)), (z.datetimeFormats = c.value), Fd(z, F, Z)
  }
  function ve(F) {
    return d.value[F] || {}
  }
  function he(F, Z) {
    ;(d.value[F] = Z), (z.numberFormats = d.value), Hd(z, F, Z)
  }
  function fe(F, Z) {
    ;(d.value[F] = Gt(d.value[F] || {}, Z)), (z.numberFormats = d.value), Hd(z, F, Z)
  }
  Kd++,
    n &&
      Gi &&
      (ge(n.locale, (F) => {
        l && ((s.value = F), (z.locale = F), oa(z, s.value, i.value))
      }),
      ge(n.fallbackLocale, (F) => {
        l && ((i.value = F), (z.fallbackLocale = F), oa(z, s.value, i.value))
      }))
  const Ie = {
    id: Kd,
    locale: B,
    fallbackLocale: K,
    get inheritLocale() {
      return l
    },
    set inheritLocale(F) {
      ;(l = F), F && n && ((s.value = n.locale.value), (i.value = n.fallbackLocale.value), oa(z, s.value, i.value))
    },
    get availableLocales() {
      return Object.keys(u.value).sort()
    },
    messages: j,
    get modifiers() {
      return $
    },
    get pluralRules() {
      return k || {}
    },
    get isGlobal() {
      return r
    },
    get missingWarn() {
      return m
    },
    set missingWarn(F) {
      ;(m = F), (z.missingWarn = m)
    },
    get fallbackWarn() {
      return v
    },
    set fallbackWarn(F) {
      ;(v = F), (z.fallbackWarn = v)
    },
    get fallbackRoot() {
      return g
    },
    set fallbackRoot(F) {
      g = F
    },
    get fallbackFormat() {
      return h
    },
    set fallbackFormat(F) {
      ;(h = F), (z.fallbackFormat = h)
    },
    get warnHtmlMessage() {
      return w
    },
    set warnHtmlMessage(F) {
      ;(w = F), (z.warnHtmlMessage = F)
    },
    get escapeParameter() {
      return S
    },
    set escapeParameter(F) {
      ;(S = F), (z.escapeParameter = F)
    },
    t: ue,
    getLocaleMessage: E,
    setLocaleMessage: X,
    mergeLocaleMessage: te,
    getPostTranslationHandler: O,
    setPostTranslationHandler: R,
    getMissingHandler: N,
    setMissingHandler: x,
    [pC]: se,
  }
  return (
    (Ie.datetimeFormats = U),
    (Ie.numberFormats = D),
    (Ie.rt = be),
    (Ie.te = Ee),
    (Ie.tm = P),
    (Ie.d = xe),
    (Ie.n = we),
    (Ie.getDateTimeFormat = q),
    (Ie.setDateTimeFormat = Q),
    (Ie.mergeDateTimeFormat = ie),
    (Ie.getNumberFormat = ve),
    (Ie.setNumberFormat = he),
    (Ie.mergeNumberFormat = fe),
    (Ie[vC] = o),
    (Ie[Xi] = I),
    (Ie[Ji] = ae),
    (Ie[Qi] = M),
    Ie
  )
}
const Ju = {
  tag: { type: [String, Object] },
  locale: { type: String },
  scope: { type: String, validator: (e) => e === 'parent' || e === 'global', default: 'parent' },
  i18n: { type: Object },
}
function _C({ slots: e }, t) {
  return t.length === 1 && t[0] === 'default'
    ? (e.default ? e.default() : []).reduce((o, r) => [...o, ...(r.type === Te ? r.children : [r])], [])
    : t.reduce((n, o) => {
        const r = e[o]
        return r && (n[o] = r()), n
      }, {})
}
function tg(e) {
  return Te
}
const bC = re({
    name: 'i18n-t',
    props: Gt(
      {
        keypath: { type: String, required: !0 },
        plural: { type: [Number, String], validator: (e) => Rt(e) || !isNaN(e) },
      },
      Ju,
    ),
    setup(e, t) {
      const { slots: n, attrs: o } = t,
        r = e.i18n || Lo({ useScope: e.scope, __useComponent: !0 })
      return () => {
        const a = Object.keys(n).filter((d) => d !== '_'),
          l = {}
        e.locale && (l.locale = e.locale), e.plural !== void 0 && (l.plural = Me(e.plural) ? +e.plural : e.plural)
        const s = _C(t, a),
          i = r[Xi](e.keypath, s, l),
          u = Gt({}, o),
          c = Me(e.tag) || ht(e.tag) ? e.tag : tg()
        return Ze(c, u, i)
      }
    },
  }),
  Yd = bC
function zC(e) {
  return Lt(e) && !Me(e[0])
}
function ng(e, t, n, o) {
  const { slots: r, attrs: a } = t
  return () => {
    const l = { part: !0 }
    let s = {}
    e.locale && (l.locale = e.locale),
      Me(e.format)
        ? (l.key = e.format)
        : ht(e.format) &&
          (Me(e.format.key) && (l.key = e.format.key),
          (s = Object.keys(e.format).reduce((m, v) => (n.includes(v) ? Gt({}, m, { [v]: e.format[v] }) : m), {})))
    const i = o(e.value, l, s)
    let u = [l.key]
    Lt(i)
      ? (u = i.map((m, v) => {
          const g = r[m.type],
            h = g ? g({ [m.type]: m.value, index: v, parts: i }) : [m.value]
          return zC(h) && (h[0].key = `${m.type}-${v}`), h
        }))
      : Me(i) && (u = [i])
    const c = Gt({}, a),
      d = Me(e.tag) || ht(e.tag) ? e.tag : tg()
    return Ze(d, c, u)
  }
}
const CC = re({
    name: 'i18n-n',
    props: Gt({ value: { type: Number, required: !0 }, format: { type: [String, Object] } }, Ju),
    setup(e, t) {
      const n = e.i18n || Lo({ useScope: 'parent', __useComponent: !0 })
      return ng(e, t, Yv, (...o) => n[Qi](...o))
    },
  }),
  Xd = CC,
  SC = re({
    name: 'i18n-d',
    props: Gt({ value: { type: [Number, Date], required: !0 }, format: { type: [String, Object] } }, Ju),
    setup(e, t) {
      const n = e.i18n || Lo({ useScope: 'parent', __useComponent: !0 })
      return ng(e, t, qv, (...o) => n[Ji](...o))
    },
  }),
  Jd = SC
function wC(e, t) {
  const n = e
  if (e.mode === 'composition') return n.__getInstance(t) || e.global
  {
    const o = n.__getInstance(t)
    return o != null ? o.__composer : e.global.__composer
  }
}
function $C(e) {
  const t = (l) => {
    const { instance: s, modifiers: i, value: u } = l
    if (!s || !s.$) throw zn(fn.UNEXPECTED_ERROR)
    const c = wC(e, s.$),
      d = Qd(u)
    return [Reflect.apply(c.t, c, [...Zd(d)]), c]
  }
  return {
    created: (l, s) => {
      const [i, u] = t(s)
      Gi &&
        e.global === u &&
        (l.__i18nWatcher = ge(u.locale, () => {
          s.instance && s.instance.$forceUpdate()
        })),
        (l.__composer = u),
        (l.textContent = i)
    },
    unmounted: (l) => {
      Gi && l.__i18nWatcher && (l.__i18nWatcher(), (l.__i18nWatcher = void 0), delete l.__i18nWatcher),
        l.__composer && ((l.__composer = void 0), delete l.__composer)
    },
    beforeUpdate: (l, { value: s }) => {
      if (l.__composer) {
        const i = l.__composer,
          u = Qd(s)
        l.textContent = Reflect.apply(i.t, i, [...Zd(u)])
      }
    },
    getSSRProps: (l) => {
      const [s] = t(l)
      return { textContent: s }
    },
  }
}
function Qd(e) {
  if (Me(e)) return { path: e }
  if (st(e)) {
    if (!('path' in e)) throw zn(fn.REQUIRED_VALUE, 'path')
    return e
  } else throw zn(fn.INVALID_VALUE)
}
function Zd(e) {
  const { path: t, locale: n, args: o, choice: r, plural: a } = e,
    l = {},
    s = o || {}
  return Me(n) && (l.locale = n), Rt(r) && (l.plural = r), Rt(a) && (l.plural = a), [t, s, l]
}
function kC(e, t, ...n) {
  const o = st(n[0]) ? n[0] : {},
    r = !!o.useI18nComponentName
  ;(Pt(o.globalInstall) ? o.globalInstall : !0) &&
    ([r ? 'i18n' : Yd.name, 'I18nT'].forEach((l) => e.component(l, Yd)),
    [Xd.name, 'I18nN'].forEach((l) => e.component(l, Xd)),
    [Jd.name, 'I18nD'].forEach((l) => e.component(l, Jd))),
    e.directive('t', $C(t))
}
const TC = xo('global-vue-i18n')
function VC(e = {}, t) {
  const n = Pt(e.globalInjection) ? e.globalInjection : !0,
    o = !0,
    r = new Map(),
    [a, l] = PC(e),
    s = xo('')
  function i(d) {
    return r.get(d) || null
  }
  function u(d, m) {
    r.set(d, m)
  }
  function c(d) {
    r.delete(d)
  }
  {
    const d = {
      get mode() {
        return 'composition'
      },
      get allowComposition() {
        return o
      },
      async install(m, ...v) {
        if (((m.__VUE_I18N_SYMBOL__ = s), m.provide(m.__VUE_I18N_SYMBOL__, d), st(v[0]))) {
          const _ = v[0]
          ;(d.__composerExtend = _.__composerExtend), (d.__vueI18nExtend = _.__vueI18nExtend)
        }
        let g = null
        n && (g = NC(m, d.global)), kC(m, d, ...v)
        const h = m.unmount
        m.unmount = () => {
          g && g(), d.dispose(), h()
        }
      },
      get global() {
        return l
      },
      dispose() {
        a.stop()
      },
      __instances: r,
      __getInstance: i,
      __setInstance: u,
      __deleteInstance: c,
    }
    return d
  }
}
function Lo(e = {}) {
  const t = ct()
  if (t == null) throw zn(fn.MUST_BE_CALL_SETUP_TOP)
  if (!t.isCE && t.appContext.app != null && !t.appContext.app.__VUE_I18N_SYMBOL__) throw zn(fn.NOT_INSTALLED)
  const n = AC(t),
    o = IC(n),
    r = Zv(t),
    a = EC(e, r)
  if (a === 'global') return gC(o, e, r), o
  if (a === 'parent') {
    let i = xC(n, t, e.__useComponent)
    return i == null && (i = o), i
  }
  const l = n
  let s = l.__getInstance(t)
  if (s == null) {
    const i = Gt({}, e)
    '__i18n' in r && (i.__i18n = r.__i18n),
      o && (i.__root = o),
      (s = eg(i)),
      l.__composerExtend && (s[Zi] = l.__composerExtend(s)),
      LC(l, t, s),
      l.__setInstance(t, s)
  }
  return s
}
function PC(e, t, n) {
  const o = Cu()
  {
    const r = o.run(() => eg(e))
    if (r == null) throw zn(fn.UNEXPECTED_ERROR)
    return [o, r]
  }
}
function AC(e) {
  {
    const t = kt(e.isCE ? TC : e.appContext.app.__VUE_I18N_SYMBOL__)
    if (!t) throw zn(e.isCE ? fn.NOT_INSTALLED_WITH_PROVIDE : fn.UNEXPECTED_ERROR)
    return t
  }
}
function EC(e, t) {
  return zs(e) ? ('__i18n' in t ? 'local' : 'global') : e.useScope ? e.useScope : 'local'
}
function IC(e) {
  return e.mode === 'composition' ? e.global : e.global.__composer
}
function xC(e, t, n = !1) {
  let o = null
  const r = t.root
  let a = OC(t, n)
  for (; a != null; ) {
    const l = e
    if ((e.mode === 'composition' && (o = l.__getInstance(a)), o != null || r === a)) break
    a = a.parent
  }
  return o
}
function OC(e, t = !1) {
  return e == null ? null : (t && e.vnode.ctx) || e.parent
}
function LC(e, t, n) {
  et(() => {}, t),
    vs(() => {
      const o = n
      e.__deleteInstance(t)
      const r = o[Zi]
      r && (r(), delete o[Zi])
    }, t)
}
const BC = ['locale', 'fallbackLocale', 'availableLocales'],
  em = ['t', 'rt', 'd', 'n', 'tm', 'te']
function NC(e, t) {
  const n = Object.create(null)
  return (
    BC.forEach((r) => {
      const a = Object.getOwnPropertyDescriptor(t, r)
      if (!a) throw zn(fn.UNEXPECTED_ERROR)
      const l = nt(a.value)
        ? {
            get() {
              return a.value.value
            },
            set(s) {
              a.value.value = s
            },
          }
        : {
            get() {
              return a.get && a.get()
            },
          }
      Object.defineProperty(n, r, l)
    }),
    (e.config.globalProperties.$i18n = n),
    em.forEach((r) => {
      const a = Object.getOwnPropertyDescriptor(t, r)
      if (!a || !a.value) throw zn(fn.UNEXPECTED_ERROR)
      Object.defineProperty(e.config.globalProperties, `$${r}`, a)
    }),
    () => {
      delete e.config.globalProperties.$i18n,
        em.forEach((r) => {
          delete e.config.globalProperties[`$${r}`]
        })
    }
  )
}
fC()
nC(B0)
oC(Mv)
if (__INTLIFY_PROD_DEVTOOLS__) {
  const e = Ku()
  ;(e.__INTLIFY__ = !0), W0(e.__INTLIFY_DEVTOOLS_GLOBAL_HOOK__)
}
const RC = Object.assign({
    './locales/br.json': i0,
    './locales/cn.json': c0,
    './locales/es.json': m0,
    './locales/gb.json': p0,
    './locales/ir.json': g0,
  }),
  og = {}
Object.entries(RC)
  .map(([e, t]) => {
    const n = e.split('/')
    return [n[n.length - 1].split('.json')[0], t.default]
  })
  .forEach((e) => {
    og[e[0]] = e[1]
  })
const DC = VC({ legacy: !1, locale: 'cn', fallbackLocale: 'cn', messages: og }),
  tm = {
    light: {
      primary: '#154EC1',
      secondary: '#767C88',
      success: '#3D9209',
      info: '#158DE3',
      danger: '#E42222',
      warning: '#FFD43A',
      backgroundPrimary: '#f6f6f6',
      backgroundSecondary: '#FFFFFF',
      backgroundElement: '#ECF0F1',
      backgroundBorder: '#DEE5F2',
      textPrimary: '#262824',
      textInverted: '#FFFFFF',
      shadow: 'rgba(0, 0, 0, 0.12)',
      focus: '#49A8FF',
      transparent: 'rgba(0, 0, 0, 0)',
    },
    dark: {
      primary: '#3472F0',
      secondary: '#767C88',
      success: '#66BE33',
      info: '#3EAAF8',
      danger: '#F34030',
      warning: '#FFD952',
      backgroundPrimary: '#050A10',
      backgroundSecondary: '#1F262F',
      backgroundElement: '#131A22',
      backgroundBorder: '#3D4C58',
      textPrimary: '#F1F1F1',
      textInverted: '#0B121A',
      shadow: 'rgba(255, 255, 255, 0.12)',
      focus: '#49A8FF',
      transparent: 'rgba(0, 0, 0, 0)',
    },
  },
  rg = Symbol('vaBreakpoint'),
  MC = { xs: 0, sm: 640, md: 1024, lg: 1440, xl: 1920 },
  FC = () => ({ enabled: !0, bodyClass: !0, thresholds: MC }),
  jC = (e) => e,
  eu = (e, t = null) => G(() => [e], t),
  nm = (e) => (typeof e == 'string' ? Ze(ur, e) : tr(e) ? e : ee(e)),
  HC = (e, t = null) =>
    Object.keys(e).reduce((n, o) => {
      const r = e[o]
      return (n[o] = typeof r == 'function' ? r : eu(r, t)), n
    }, {}),
  UC = (e) => {
    const t = e.render || e.ssrRender
    if (!t) return
    const n = t.name === '_sfc_render' || t.name === '_sfc_ssrRender'
    return function (...o) {
      const r = o[0],
        a = r.$.slots,
        l = new Proxy(r, {
          get(i, u) {
            return u === '$slots' ? HC(a) : i[u]
          },
        }),
        s = n ? void 0 : l
      return t.call(s, l, ...o.slice(1))
    }
  },
  Rn = (e, t) =>
    Object.keys(e)
      .filter((n) => !t.includes(n))
      .reduce((n, o) => ((n[o] = e[o]), n), {}),
  tu = 'child:',
  ag = '$va:childComponents',
  lg = (e) =>
    Object.keys(e).reduce((t, n) => {
      const o = `${tu}${n}`
      return (t[o] = { type: Object, required: !1, default: void 0 }), t
    }, {}),
  sg = (e) => {
    const t = p(() =>
      Object.keys(e).reduce((o, r) => {
        if (r.startsWith(tu)) {
          const a = r.slice(tu.length)
          o[a] = e[r]
        }
        return o
      }, {}),
    )
    ln(ag, t)
  },
  Qu = () => {
    var e
    const t = (e = ct()) == null ? void 0 : e.attrs['va-child']
    if (!t) return null
    const n = kt(ag)
    return n != null && n.value ? p(() => n.value[t]) : null
  },
  WC = /([a-z0-9])([A-Z])/g,
  GC = (e) => e.replace(WC, '$1-$2').toLowerCase(),
  KC = (e, t) => (t in e ? e[t] : e[GC(t)]),
  qC = (e, t) => {
    const n = e.props,
      o = Qu()
    return new Proxy(n, {
      get: (r, a) => {
        var l, s
        if (typeof a != 'string') return r[a]
        const i = (l = o == null ? void 0 : o.value) == null ? void 0 : l[a]
        if (i !== void 0) return i
        const u = e.vnode.props || {},
          c = r[a]
        if (KC(u, a) !== void 0) return c
        const m = (s = t.value) == null ? void 0 : s[a]
        return m !== void 0 ? m : c
      },
    })
  },
  YC = (e, t) => {
    const n = e.attrs
    return new Proxy(n, {
      get: (o, r) => {
        var a
        if (typeof r != 'string') return o[r]
        if (r === 'class') return Pe([t.value.class, n.class])
        if (r === 'style') return me([t.value.style, n.style])
        const l = (a = t.value) == null ? void 0 : a[r]
        return l !== void 0 ? l : o[r]
      },
      ownKeys(o) {
        return [...new Set([...Object.keys(n), ...Object.keys(t.value)])]
      },
      getOwnPropertyDescriptor(o, r) {
        return Reflect.getOwnPropertyDescriptor(t.value, r) ?? Reflect.getOwnPropertyDescriptor(n, r)
      },
    })
  },
  ui = 'slot:',
  XC = (e, t) => {
    const n = e.slots,
      o = Qu(),
      r = p(() =>
        Object.keys(t.value).reduce((a, l) => (l.startsWith(ui) && (a[l.slice(ui.length)] = t.value[l]), a), {}),
      )
    return new Proxy(n, {
      get: (a, l) => {
        var s, i
        if (typeof l != 'string') return a[l]
        const u = `${ui}${l}`,
          c = (s = o == null ? void 0 : o.value) == null ? void 0 : s[u]
        if (c !== void 0) return eu(nm(c))
        const d = a[l]
        if (d !== void 0) return d
        const m = (i = r.value) == null ? void 0 : i[l]
        return m !== void 0 ? eu(nm(m)) : d
      },
      ownKeys(a) {
        return [...new Set([...Object.keys(n), ...Object.keys(r.value)])]
      },
      getOwnPropertyDescriptor(a, l) {
        return Reflect.getOwnPropertyDescriptor(r.value, l) ?? Reflect.getOwnPropertyDescriptor(n, l)
      },
    })
  },
  ig = 'VaLocalConfig',
  JC = p(() => [])
function Zu() {
  return kt(ig, JC)
}
function ug(e) {
  ln(ig, e)
}
function QC(e) {
  const t = Zu(),
    n = p(() => [...t.value, e.value])
  ug(n)
}
const ZC = [null, void 0, ''],
  eS = [null, void 0],
  sn = (e) => ZC.includes(e),
  om = (e) => !sn(e),
  ci = (e) => eS.includes(e),
  tS = typeof process < 'u' ? process : {},
  nS = tS.env || {},
  oS = nS.NODE_ENV || '',
  Kr = typeof __DEV__ < 'u' ? __DEV__ : !['prod', 'production'].includes(oS),
  ot = (...e) => (Kr && console.warn(...e), !1),
  rS = (e) => {
    throw new Error(`[Vuestic] ${e}`)
  }
let nu = null,
  ra = null
const rm = (e) => {
    ;(ra == null ? void 0 : ra._instance) === null && (ra = null), !(e === null && ra === null) && ((ra = nu), (nu = e))
  },
  cg = () => nu,
  dg = (e, t = void 0) => {
    var n
    const o = (n = cg()) == null ? void 0 : n._context.provides[e]
    return ct()
      ? kt(e, t)
      : o ??
          rS(
            "You're using Vuestic composable outside Vue app. Since you registered Vuestic in multiple apps, composables can not be used outside setup function anymore.",
          )
  },
  Qo = (e) => e !== null && typeof e == 'object',
  qo = (e) =>
    e === null || typeof e != 'object'
      ? e
      : Array.isArray(e)
        ? e.map(qo)
        : e instanceof Date
          ? new Date(e.getTime())
          : e instanceof RegExp
            ? new RegExp(e.source, e.flags)
            : e instanceof Map
              ? new Map(Array.from(e.entries()).map(([t, n]) => [t, qo(n)]))
              : e instanceof Set
                ? new Set(Array.from(e.values()).map(qo))
                : Qo(e)
                  ? Object.keys(e).reduce((t, n) => ((t[n] = qo(e[n])), t), {})
                  : e,
  di = (e) => e && typeof e == 'object' && !Array.isArray(e),
  or = (e, t) => (
    di(e) || (e = {}),
    Object.keys(t).forEach((n) => {
      const o = e[n],
        r = t[n]
      r instanceof RegExp || r instanceof Date
        ? (e[n] = r)
        : di(o) && di(r)
          ? (e[n] = or(Object.create(Object.getPrototypeOf(o), Object.getOwnPropertyDescriptors(o)), r))
          : (e[n] = r)
    }),
    e
  ),
  aS = (...e) => e.reduce((t, n) => or(t, n), {}),
  lS = [
    { prefix: 'bg', property: 'background-color' },
    { prefix: 'text', property: ['color', 'fill'] },
  ],
  sS = () => lS,
  mg = (e) => ({
    ...e,
    get variables() {
      return this.presets[this.currentPresetName]
    },
    set variables(t) {
      this.presets[this.currentPresetName] = t
    },
  }),
  iS = () => mg({ threshold: 150, presets: { light: tm.light, dark: tm.dark }, currentPresetName: 'light' }),
  uS = (e) => e,
  cS = uS([
    { name: 'va-unsorted', to: 'swap_vert' },
    { name: 'va-sort-asc', to: 'va-arrow-up' },
    { name: 'va-sort-desc', to: 'va-arrow-down' },
    { name: 'va-arrow-first', to: 'mi-first_page' },
    { name: 'va-arrow-last', to: 'mi-last_page' },
    { name: 'va-arrow-right', to: 'mi-chevron_right' },
    { name: 'va-arrow-left', to: 'mi-chevron_left' },
    { name: 'va-arrow-down', to: 'mi-expand_more' },
    { name: 'va-arrow-up', to: 'mi-expand_less' },
    { name: 'va-calendar', to: 'mi-calendar_today' },
    { name: 'va-delete', to: 'mi-delete_outline' },
    { name: 'va-check', to: 'mi-check' },
    { name: 'va-check-circle', to: 'mi-check_circle' },
    { name: 'va-warning', to: 'mi-warning' },
    { name: 'va-clear', to: 'mi-highlight_off' },
    { name: 'va-close', to: 'mi-close' },
    { name: 'va-loading', to: 'mi-loop' },
    { name: 'va-plus', to: 'mi-add' },
    { name: 'va-minus', to: 'mi-remove' },
  ]),
  dS = [
    { name: 'mi-{icon}', class: 'material-icons', resolve: ({ icon: e }) => ({ content: e }) },
    { name: '{icon}', class: 'material-icons', resolve: ({ icon: e }) => ({ content: e }) },
  ],
  fg = (e) => ((e.aliases = e.aliases || []), (e.fonts = e.fonts || []), [...e.aliases, ...cS, ...e.fonts, ...dS]),
  mS = () => fg({}),
  fS = () => ({
    VaIcon: { sizesConfig: { defaultSize: 18, sizes: { small: 14, medium: 18, large: 24 } } },
    VaRating: { sizesConfig: { defaultSize: 18, sizes: { small: 14, medium: 18, large: 24 } } },
    all: {},
    presets: {
      VaButton: {
        default: {
          backgroundOpacity: 1,
          hoverBehavior: 'mask',
          hoverOpacity: 0.15,
          pressedBehavior: 'mask',
          pressedOpacity: 0.13,
        },
        primary: {
          backgroundOpacity: 0.1,
          hoverBehavior: 'opacity',
          hoverOpacity: 0.07,
          pressedBehavior: 'opacity',
          pressedOpacity: 0.13,
        },
        secondary: {
          backgroundOpacity: 0,
          hoverBehavior: 'opacity',
          hoverOpacity: 0.07,
          pressedBehavior: 'opacity',
          pressedOpacity: 0.13,
        },
        plain: { plain: !0, hoverBehavior: 'mask', hoverOpacity: 0.15, pressedBehavior: 'mask', pressedOpacity: 0.13 },
        plainOpacity: {
          plain: !0,
          textOpacity: 0.6,
          hoverBehavior: 'opacity',
          hoverOpacity: 1,
          pressedBehavior: 'opacity',
          pressedOpacity: 0.9,
        },
      },
      VaInputWrapper: {
        solid: { background: 'backgroundElement' },
        bordered: { class: 'va-input-wrapper--bordered', background: 'backgroundElement' },
      },
      VaCheckbox: { solid: { style: '--va-checkbox-background: var(--va-background-element)' } },
      VaRadio: { solid: { style: '--va-radio-background: var(--va-background-element)' } },
      VaMenu: { context: { cursor: !0, placement: 'right-start', trigger: 'right-click' } },
    },
  }),
  pS = () => ({
    search: 'Search',
    noOptions: 'Items not found',
    ok: 'OK',
    cancel: 'Cancel',
    uploadFile: 'Upload file',
    undo: 'Undo',
    dropzone: 'Drop files here to upload',
    fileDeleted: 'File deleted',
    closeAlert: 'close alert',
    backToTop: 'back to top',
    toggleDropdown: 'toggle dropdown',
    carousel: 'carousel',
    goPreviousSlide: 'go previous slide',
    goNextSlide: 'go next slide',
    goSlide: 'go slide {index}',
    slideOf: 'slide {index} of {length}',
    close: 'close',
    openColorPicker: 'open color picker',
    colorSelection: 'color selection',
    colorName: 'color {color}',
    decreaseCounter: 'decrease counter',
    increaseCounter: 'increase counter',
    selectAllRows: 'select all rows',
    sortColumnBy: 'sort column by {name}',
    selectRowByIndex: 'select row {index}',
    resetDate: 'reset date',
    nextPeriod: 'next period',
    switchView: 'switch view',
    previousPeriod: 'previous period',
    removeFile: 'remove file',
    reset: 'reset',
    pagination: 'pagination',
    goToTheFirstPage: 'go to the first page',
    goToPreviousPage: 'go to the previous page',
    goToSpecificPage: 'go to the {page} page',
    goToSpecificPageInput: 'enter the page number to go',
    goNextPage: 'go next page',
    goLastPage: 'go last page',
    currentRating: 'current rating {value} of {max}',
    voteRating: 'vote rating {value} of {max}',
    optionsFilter: 'options filter',
    splitPanels: 'split panels',
    movePaginationLeft: 'move pagination left',
    movePaginationRight: 'move pagination right',
    resetTime: 'reset time',
    closeToast: 'close toast',
    selectedOption: 'Selected option',
    noSelectedOption: 'Option is not selected',
    breadcrumbs: 'breadcrumbs',
    counterValue: 'counter value',
    selectedDate: 'selected date',
    selectedTime: 'selected time',
    progressState: 'progress state',
    color: 'color',
    next: 'Next',
    back: 'Previous',
    finish: 'Finish',
    step: 'step',
    progress: 'progress',
    loading: 'Loading',
    sliderValue: 'Current slider value is {value}',
    switch: 'Switch',
    inputField: 'Input field',
    fileTypeIncorrect: 'File type is incorrect',
    select: 'Select an option',
  }),
  Ss = Symbol('GLOBAL_CONFIG'),
  vS = () => ({
    colors: iS(),
    icons: mS(),
    components: fS(),
    breakpoint: FC(),
    i18n: pS(),
    colorsClasses: sS(),
    routerComponent: void 0,
  }),
  pg = (e = {}) => {
    const t = H(or(vS(), e))
    return {
      getGlobalConfig: () => t.value,
      setGlobalConfig: (a) => {
        const l = typeof a == 'function' ? a(t.value) : a
        t.value = qo(l)
      },
      mergeGlobalConfig: (a) => {
        const l = typeof a == 'function' ? a(t.value) : a
        t.value = or(qo(t.value), l)
      },
      globalConfig: t,
    }
  },
  gS = (e) => {
    var t, n
    const o =
      ((t = ct()) == null ? void 0 : t.appContext.provides) || ((n = cg()) == null ? void 0 : n._context.provides)
    if (!o) throw new Error('Vue app not found for provide')
    return (o[Ss] = e), e
  }
function Mn() {
  let e = dg(Ss)
  return e || ((e = pg()), gS(e)), e
}
const hS = (e) => 'preset' in e,
  am = (e) => (hS(e) ? e.preset : void 0),
  yS = (e, t) => {
    const n = Zu(),
      { globalConfig: o } = Mn(),
      r = e.name,
      a = (s) =>
        (s instanceof Array ? s : [s]).reduce((i, u) => {
          var c, d, m
          const v =
            (m = (d = (c = o.value.components) == null ? void 0 : c.presets) == null ? void 0 : d[r]) == null
              ? void 0
              : m[u]
          if (!v) return i
          const g = am(v)
          return { ...i, ...(g ? a(g) : void 0), ...v }
        }, {}),
      l = Qu()
    return p(() => {
      var s, i
      const u = {
          ...((s = o.value.components) == null ? void 0 : s.all),
          ...((i = o.value.components) == null ? void 0 : i[r]),
        },
        c = n.value.reduce((v, g) => {
          const h = g[r]
          return h ? { ...v, ...h } : v
        }, {}),
        d = [t, l == null ? void 0 : l.value, c, u].filter(om).map(am).filter(om).at(0),
        m = d ? a(d) : void 0
      return { ...u, ...c, ...m }
    })
  },
  _S = (e) => (t, n) => {
    var o
    const r = ct(),
      a = yS(e, t),
      l = p(() => Rn(a.value, Object.keys(t))),
      s = qC(r, a),
      i = YC(r, l),
      u = XC(r, a)
    ;(r.props = s), (r.attrs = i), (r.slots = u)
    const c = (o = e.setup) == null ? void 0 : o.call(e, Uo(s), { ...n, attrs: i, slots: u })
    return typeof c == 'object' && !r.exposed && n.expose(c), c
  },
  ou = (e) => {
    const t = _S(e),
      n = UC(e)
    return new Proxy(e, {
      get(o, r) {
        return r in e
          ? r === 'setup'
            ? t
            : r === 'render' || r === 'ssrRender'
              ? n
              : Reflect.get(o, r)
          : Reflect.get(o, r)
      },
    })
  },
  ru = '__c',
  bS = (e) => ((e[ru] = ou(e[ru])), e),
  no = (e) => ('setup' in e ? ou(e) : ru in e ? bS(e) : ((e.setup = () => ({})), ou(e))),
  ye = no,
  zS = { defaultSize: 48, sizes: { small: 32, medium: 48, large: 64 } },
  CS = { defaultSize: 1, sizes: { small: 0.75, medium: 1, large: 1.25 } },
  dr = {
    size: { type: [String, Number], default: '', validator: (e) => typeof e == 'string' || typeof e == 'number' },
    sizesConfig: { type: Object, default: () => zS },
    fontSizesConfig: { type: Object, default: () => CS },
  },
  SS = /(?<fontSize>\d+)(?<extension>px|rem)/i,
  lm = (e) => e / 16 - 0.5,
  sm = (e) => (typeof e == 'number' ? `${e}px` : String(e)),
  wS = (e) => 'sizesConfig' in e,
  $S = (e) => {
    const t = 'size'
    return p(() => {
      let n = e[t]
      if (wS(e)) {
        const { defaultSize: o, sizes: r } = e.sizesConfig
        if ((sn(n) && (n = o), r)) {
          const a = r[n]
          if (a) return sm(a)
        }
      }
      return sm(n)
    })
  },
  mr = (e, t = ((n) => ((n = ct()) == null ? void 0 : n.type.name))()) => {
    const { getGlobalConfig: n } = Mn(),
      o = p(() => {
        var s, i
        return t ? ((i = (s = n().components) == null ? void 0 : s[t]) == null ? void 0 : i.sizesConfig) : void 0
      }),
      r = p(() => {
        var s, i, u
        const { defaultSize: c, sizes: d } = e.sizesConfig,
          m = (s = o.value) == null ? void 0 : s.defaultSize
        if (!e.size) return `${c || m}px`
        if (typeof e.size == 'string') {
          const v = (u = (i = o.value) == null ? void 0 : i.sizes) == null ? void 0 : u[e.size],
            g = d[e.size]
          return g ? `${g}px` : v ? `${v}px` : e.size
        }
        return `${e.size}px`
      }),
      a = p(() => {
        const { defaultSize: s, sizes: i } = e.fontSizesConfig
        if (!e.size) return s
        if (typeof e.size == 'string') {
          if (e.size in i) return i[e.size]
          const u = e.size.match(SS)
          if (!u || !u.groups) throw new Error('Size prop should be either valid string or number')
          const { extension: c, fontSize: d } = u.groups
          return c === 'rem' ? +d : lm(+d)
        }
        return lm(e.size)
      }),
      l = p(() => `${a.value}rem`)
    return { sizeComputed: r, fontSizeComputed: l, fontSizeInRem: a }
  },
  Le = { preset: { type: [String, Array], default: void 0 } },
  kS = (e, t) => t.test(e),
  vg = (e, t) => {
    if (typeof t != 'string' && t.global) return [...e.matchAll(t)].map((o) => o.slice(1))
    const n = e.match(t) || []
    return n ? (n.length > 1 ? n.slice(1) : n) : []
  },
  gg = /{[^}]*}/g,
  hg = (e) => e.replace(gg, '(.*)'),
  TS = (e) => (e.match(gg) || []).map((t) => t.replace(/{|}/g, '')),
  VS = (e, t) => vg(e, hg(t)),
  PS = (e, t) => {
    const n = TS(t),
      o = VS(e, t)
    return n.reduce((r, a, l) => ({ ...r, [a]: o[l] }), {})
  },
  AS = (e, t) => (e.match(t) || [])[0] === e,
  ES = (e, t) => {
    const n = hg(t)
    return AS(e, new RegExp(n))
  },
  yg = (e) => typeof e.name == 'string',
  _g = (e) => e.name instanceof RegExp,
  IS = (e, t) => (yg(t) ? ES(e, t.name) : _g(t) ? kS(e, t.name) : !1),
  xS = (e, t) => {
    const n = PS(e, t.name)
    return t.resolve && t.resolve(n)
  },
  OS = (e, t) => {
    if (t.name.global) throw new Error(`Bad icon config with name ${t.name}. Please, don't use global regex as name.`)
    const n = vg(e, t.name)
    return t.resolveFromRegex && t.resolveFromRegex(...n)
  },
  LS = (e, t) => {
    if (yg(t)) return xS(e, t)
    if (_g(t)) return OS(e, t)
    throw Error('Unknown icon config')
  },
  BS = (e, t, n = []) => {
    const o = t.find((r) => (n.includes(r.name.toString()) ? !1 : IS(e, r)))
    if (!o) throw new Error(`Can not find icon config from ${e}. Please provide default config.`)
    return o
  },
  bg = (e, t, n = []) => {
    if (!e) return
    const o = BS(e, t, n),
      r = or(LS(e, o), o)
    return (n = [...n, o.name.toString()]), or(bg(r.to, t, n), r)
  },
  NS = (e) => {
    const t = ['name', 'to', 'resolve', 'resolveFromRegex'],
      n = e
    return (
      t.forEach((o) => {
        delete n[o]
      }),
      n
    )
  },
  RS = (e, t) => {
    const n = bg(e, t)
    return n === void 0 ? {} : NS(n)
  },
  DS = () => {
    const { globalConfig: e } = Mn()
    return { getIcon: (t) => RS(t, e.value.icons) }
  },
  oo = (e) => e,
  zg = Symbol('VaAppCachePlugin'),
  MS = oo(() => ({
    install(e) {
      const t = { colorContrast: {} }
      e.provide(zg, t)
    },
  })),
  FS = () => {
    const e = dg(zg)
    return e || { colorContrast: {} }
  },
  ec = (e) => {
    const t = p(e),
      n = new Proxy(t, {
        get(o, r, a) {
          if (typeof t.value == 'object') return f(Reflect.get(t.value, r, a))
        },
        set(o, r, a) {
          return nt(t.value[r]) && !nt(a) ? (t.value[r].value = a) : (t.value[r] = a), !0
        },
        deleteProperty(o, r) {
          return Reflect.deleteProperty(t.value, r)
        },
        has(o, r) {
          return typeof t.value != 'object' ? !1 : Reflect.has(t.value, r)
        },
        ownKeys() {
          return typeof t.value != 'object' ? [] : Object.keys(t.value)
        },
        getOwnPropertyDescriptor() {
          return { enumerable: !0, configurable: !0 }
        },
      })
    return on(n)
  },
  Cg = (e) => e.charAt(0).toUpperCase() + e.slice(1).toLowerCase(),
  jS = /[A-Z0-9]*(?:[^\-_|A-Z|\s.])*/gm,
  tc = (e) => {
    var t
    return (
      ((t = e.match(jS)) == null
        ? void 0
        : t
            .map((n) => n.trim().split(/([0-9]+)|([a-zA-Z]+)/g))
            .flat()
            .filter(Boolean)) || []
    )
  },
  La = (e) =>
    tc(e)
      .map((t) => t.toLowerCase())
      .join('-'),
  HS = (e) =>
    tc(e)
      .map((t, n) => (n === 0 ? t.toLowerCase() : Cg(t)))
      .join(''),
  im = (e) => tc(e).map(Cg).join(' '),
  Sg = /^#([A-Fa-f0-9]{3,4}|[A-Fa-f0-9]{6,8})$/,
  wg = /^rgba?\(([\d.]+, ?){2}[\d.]+(, ?[\d.]+)?\)$/,
  $g = /hsla?\([\d.]+(deg|rad|turn|grad)?(,?\s?[\d.]+%?){2}(,?\s?(\/\s?)?[\d.]+%?)?\)/,
  US = (e) => Sg.test(e) || wg.test(e) || $g.test(e),
  nc = (e) => (typeof e != 'object' || e === null ? !1 : 'h' in e && 's' in e && 'l' in e),
  oc = (e) => (typeof e != 'object' || e === null ? !1 : 'r' in e && 'g' in e && 'b' in e),
  kg = (e) => {
    if (!Sg.test(e)) return null
    const t = e.replace('#', ''),
      n = t.length < 6,
      [o, r, a, l] = n ? t.split('').map((s) => parseInt(s + s, 16)) : t.match(/.{2}/g).map((s) => parseInt(s, 16))
    return { r: o, g: r, b: a, a: l ?? 1 }
  },
  Tg = (e) => {
    if (!wg.test(e)) return null
    const [t, n, o, r = 1] = e.match(/[\d.]+/g).map(Number)
    return { r: t, g: n, b: o, a: r }
  },
  Vg = (e) => {
    if (!$g.test(e)) return null
    const [t, n, o, r = '1'] = e.match(/[\d.]+%?/g)
    return {
      h: Number(t),
      s: Number(n.replace('%', '')),
      l: Number(o.replace('%', '')),
      a: r.endsWith('%') ? Number(r.replace('%', '')) / 100 : Number(r),
    }
  },
  um = (e) => {
    const t = e.r / 255,
      n = e.g / 255,
      o = e.b / 255,
      r = Math.max(t, n, o),
      a = Math.min(t, n, o)
    let l = 0,
      s = 0
    const i = (r + a) / 2
    if (r !== a) {
      const u = r - a
      switch (((s = i > 0.5 ? u / (2 - r - a) : u / (r + a)), r)) {
        case t:
          l = (n - o) / u + (n < o ? 6 : 0)
          break
        case n:
          l = (o - t) / u + 2
          break
        case o:
          l = (t - n) / u + 4
          break
      }
      l *= 60
    }
    return { h: Math.round(l), s: Math.round(s * 100), l: Math.round(i * 100), a: e.a }
  },
  mi = (e, t, n) => (
    n < 0 && (n += 1),
    n > 1 && (n -= 1),
    n < 1 / 6 ? e + (t - e) * 6 * n : n < 1 / 2 ? t : n < 2 / 3 ? e + (t - e) * (2 / 3 - n) * 6 : e
  ),
  cm = (e) => {
    const t = e.h / 360,
      n = e.s / 100,
      o = e.l / 100,
      r = o < 0.5 ? o * (1 + n) : o + n - o * n,
      a = 2 * o - r,
      l = mi(a, r, t + 1 / 3),
      s = mi(a, r, t),
      i = mi(a, r, t - 1 / 3)
    return { r: Math.round(l * 255), g: Math.round(s * 255), b: Math.round(i * 255), a: e.a }
  },
  qa = (e) => {
    if (nc(e)) return { ...e }
    if (oc(e)) return um(e)
    const t = kg(e) ?? Tg(e)
    if (t) return um(t)
    const n = Vg(e)
    if (n) return n
    throw new Error(`Color ${e} is not valid. Please, provide valid color.`)
  },
  rc = ({ h: e, s: t, l: n, a: o }) => `hsla(${e},${t}%,${n}%,${o ?? 1})`,
  Ba = (e) => {
    if (oc(e)) return { ...e }
    if (nc(e)) return cm(e)
    const t = Vg(e)
    if (t) return cm(t)
    const n = kg(e) ?? Tg(e)
    if (n) return n
    throw new Error(`Color ${e} is not valid. Please, provide valid color.`)
  },
  ga = ({ r: e, g: t, b: n, a: o }) => (o === 1 ? `rgb(${e},${t},${n})` : `rgba(${e},${t},${n},${o ?? 1})`),
  WS = (e) => {
    if (nc(e)) return rc(e)
    if (oc(e)) return ga(e)
    if (typeof e == 'string') return e
    throw new Error(`Color ${e} is not valid. Please, provide valid color.`)
  },
  GS = (e, { h: t, s: n, l: o, a: r }) => {
    const a = qa(e)
    return (
      (a.a = a.a ?? 1),
      (a.h = t ?? a.h),
      (a.s = n ?? a.s),
      (a.l = o ?? a.l),
      (a.a = r ?? a.a),
      a.h < 0 && (a.h = 360 + a.h),
      a.h > 360 && (a.h = a.h - 360),
      (a.s = Math.max(0, Math.min(100, a.s))),
      (a.l = Math.max(0, Math.min(100, a.l))),
      (a.a = Math.max(0, Math.min(1, a.a))),
      a
    )
  },
  KS = (e, { h: t, s: n, l: o, a: r }) => {
    const a = qa(e)
    return (
      (a.a = a.a ?? 1),
      (a.h += t ?? 0),
      (a.s += n ?? 0),
      (a.l += o ?? 0),
      (a.a += r ?? 0),
      a.h < 0 && (a.h = 360 + a.h),
      a.h > 360 && (a.h = a.h - 360),
      (a.s = Math.max(0, Math.min(100, a.s))),
      (a.l = Math.max(0, Math.min(100, a.l))),
      (a.a = Math.max(0, Math.min(1, a.a))),
      a
    )
  },
  qS = (e) => /var\(--.+\)/.test(e),
  ql = (e) => `--va-${La(e)}`,
  dm = (e) => HS(e),
  fr = (e, t) => {
    const { r: n, g: o, b: r } = Ba(e)
    return ga({ r: n, g: o, b: r, a: t })
  },
  mm = (e) => {
    const { r: t, g: n, b: o } = Ba(e)
    return Math.sqrt(t * t * 0.241 + n * n * 0.691 + o * o * 0.068)
  },
  Pg = (e, t = 0.4) => fr(e, t),
  YS = (e, t = 0.4) => fr(e, t),
  Ag = (e, t = 0.2) => fr(e, t),
  Eg = (e, t = 0.3) => fr(e, t),
  Go = (e, t) => rc(KS(qa(e), t)),
  XS = (e, t) => rc(GS(qa(e), t)),
  JS = (e) => {
    const t = qa(e)
    if (t.s < 10) return Go(t, { h: 2, s: 5, l: 10 })
    if (t.s < 30) return Go(t, { s: -14, l: 11 })
    if ((t.h >= 0 && t.h < 44) || t.h >= 285) return Go(t, { h: 11, s: 27, l: 8 })
    if (t.h >= 44 && t.h < 85) return Go(t, { h: 3, l: 9 })
    if (t.h >= 85 && t.h < 165) return Go(t, { h: 16, l: 14 })
    if (t.h >= 165 && t.h < 285) return Go(t, { h: -15, s: 3, l: 2 })
    throw new Error("This method should handle all colors. But it didn't for some reason.")
  },
  ac = (e) => `linear-gradient(to right, ${JS(e)}, ${WS(e)})`,
  QS = (e, t, n) => {
    const o = fr(t, n)
    return `linear-gradient(0deg, ${o}, ${o}), ${e}`
  },
  ZS = (e, t) => {
    const n = Ba(e),
      o = Ba(t),
      r = o.a
    return ga(
      r === 1
        ? o
        : r === 0
          ? n
          : {
              r: Math.round(n.r * (1 - r) + o.r * r),
              g: Math.round(n.g * (1 - r) + o.g * r),
              b: Math.round(n.b * (1 - r) + o.b * r),
              a: n.a,
            },
    )
  },
  ew = (e) => (e ? (e === 'transparent' ? !0 : Ba(e).a <= 0.1) : !1),
  lc = { color: { type: String, default: '' } },
  Re = () => {
    const e = Mn()
    if (!e) throw new Error('useColors must be used in setup function or Vuestic GlobalConfigPlugin is not registered!')
    const { globalConfig: t } = e,
      n = ec({
        get: () => t.value.colors.presets[t.value.colors.currentPresetName],
        set: (_) => {
          o(_)
        },
      }),
      o = (_) => {
        t.value.colors.presets[t.value.colors.currentPresetName] = { ...t.value.colors.variables, ..._ }
      },
      r = () => n,
      a = (_, y, b) => {
        if ((y || (y = n.primary), _ === 'transparent')) return '#ffffff00'
        if (_ === 'currentColor') return _
        if (_ != null && _.startsWith('on')) {
          const S = _.slice(2)
          if (n[dm(S)]) return a(m(a(S)), void 0, b)
        }
        _ || (_ = a(y))
        const w = n[_] || n[dm(_)]
        return w
          ? b
            ? `var(${ql(_)})`
            : w
          : US(_) || (b && qS(_))
            ? _
            : (ot(`'${_}' is not a proper color! Use HEX or default color themes
      names (https://vuestic.dev/en/styles/colors#default-color-themes)`),
              a(y))
      },
      l = (_) =>
        p({
          get() {
            return a(_)
          },
          set(y) {
            o({ [_]: y })
          },
        }),
      s = (_, y = 'va') =>
        Object.keys(_)
          .filter((b) => _[b] !== void 0)
          .reduce(
            (b, w) => (
              (b[`--${y}-${La(w)}`] = a(_[w], void 0, !0)), (b[`--${y}-on-${La(w)}`] = a(m(a(_[w])), void 0, !0)), b
            ),
            {},
          ),
      i = FS(),
      u = (_) =>
        typeof _ != 'string' ? mm(_) : (i.colorContrast[_] || (i.colorContrast[_] = mm(_)), i.colorContrast[_]),
      c = p(() => (u(a('textPrimary')) > 255 / 2 ? 'textInverted' : 'textPrimary')),
      d = p(() => (u(a('textPrimary')) > 255 / 2 ? 'textPrimary' : 'textInverted')),
      m = (_, y, b) => {
        const w = `on${ms(String(_))}`
        return n[w] ? n[w] : ((y = y || c.value), (b = b || d.value), u(_) > t.value.colors.threshold ? y : b)
      },
      v = p({
        get: () => t.value.colors.currentPresetName,
        set: (_) => {
          h(_)
        },
      }),
      g = p(() => t.value.colors.presets),
      h = (_) => {
        if (((t.value.colors.currentPresetName = _), !t.value.colors.presets[_]))
          return ot(`Preset ${_} does not exist`)
      }
    return {
      colors: n,
      currentPresetName: v,
      presets: g,
      applyPreset: h,
      setColors: o,
      getColors: r,
      getColor: a,
      getComputedColor: l,
      getBoxShadowColor: Pg,
      getBoxShadowColorFromBg: YS,
      getHoverColor: Ag,
      getFocusColor: Eg,
      getGradientBackground: ac,
      getTextColor: m,
      shiftHSLAColor: Go,
      setHSLAColor: XS,
      colorsToCSSVariable: s,
      colorToRgba: fr,
      getStateMaskGradientBackground: QS,
    }
  },
  Ig = re({
    name: 'VaIcon',
    __name: 'VaIcon',
    props: {
      ...dr,
      ...Le,
      name: { type: String, default: '' },
      tag: { type: String },
      component: { type: Object },
      color: { type: String },
      rotation: { type: [String, Number] },
      spin: { type: [String, Boolean] },
      flip: { type: String, default: 'off', validator: (e) => ['off', 'horizontal', 'vertical', 'both'].includes(e) },
    },
    setup(e) {
      const t = e,
        { getColor: n } = Re(),
        { sizeComputed: o } = mr(t),
        { getIcon: r } = DS(),
        a = p(() => r(t.name)),
        l = p(() => t.component || t.tag || a.value.component || a.value.tag || 'i'),
        s = Io(),
        i = p(() => ({ ...a.value.attrs, ...Rn(s, ['class']) })),
        u = (h) => {
          if (!(h === void 0 || h === !1)) return h === 'counter-clockwise' ? 'va-icon--spin-reverse' : 'va-icon--spin'
        },
        c = p(() => [a.value.class, u(t.spin ?? a.value.spin)]),
        d = p(() => {
          const h = t.rotation ? `rotate(${t.rotation}deg)` : '',
            _ = t.flip === 'vertical' || t.flip === 'both' ? -1 : 1,
            y = t.flip === 'horizontal' || t.flip === 'both' ? -1 : 1
          return `${t.flip === 'off' ? '' : `scale(${_}, ${y})`} ${h}`.trim()
        }),
        m = p(() => ({
          transform: d.value,
          cursor: s.onClick ? 'pointer' : null,
          color: t.color ? n(t.color, void 0, !0) : a.value.color,
          fontSize: o.value,
          height: o.value,
          lineHeight: o.value,
        })),
        v = p(() => s.tabindex ?? -1),
        g = p(() => s.role !== 'button' || v.value < 0)
      return (h, _) => (
        C(),
        ee(
          an(l.value),
          le({ class: ['va-icon', c.value], style: m.value, 'aria-hidden': g.value, notranslate: '' }, i.value),
          {
            default: G(() => [
              L(h.$slots, 'default', {}, () => [
                a.value.content ? (C(), A(Te, { key: 0 }, [Fe(Ae(a.value.content), 1)], 64)) : W('', !0),
              ]),
            ]),
            _: 3,
          },
          16,
          ['class', 'style', 'aria-hidden'],
        )
      )
    },
  }),
  Ke = ye(Ig),
  tw = () => {
    const e = ct(),
      t = e == null ? void 0 : e.appContext.app,
      { globalProperties: n } = t.config
    return '$vaGlobalVariable' in n || (n.$vaGlobalVariable = on({})), n.$vaGlobalVariable
  },
  xg = (e, t) => {
    const n = tw()
    return (
      e in n || (n[e] = t),
      p({
        get: () => n[e],
        set: (o) => {
          n[e] = o
        },
      })
    )
  },
  Fn = () => {
    const e = ct(),
      t = xg('uuidCounter', 0)
    return (e.$vaUuid = e.$vaUuid || `va-${t.value++}`), `va-${t.value}`
  },
  nw = (e) => {
    const n = `message-list-${Fn()}`,
      o = p(() => ({ id: n, role: 'alert' })),
      r = p(
        () =>
          !!(
            (typeof e.modelValue == 'string' && e.modelValue.length > 0) ||
            (Array.isArray(e.modelValue) && e.modelValue.length > 0)
          ),
      ),
      a = p(() => ({ 'aria-describedby': r.value ? n : void 0, 'aria-invalid': e.hasError }))
    return { messageListAttributes: o, childAttributes: a }
  },
  We = (e) => {
    const t = ct().props
    return p(() => {
      const o = t == null ? void 0 : t[e]
      return o === void 0 ? o : Number(o)
    })
  },
  ow = { class: 'va-message-list__list' },
  rw = re({
    name: 'VaMessageList',
    inheritAttrs: !1,
    __name: 'VaMessageList',
    props: {
      modelValue: { type: [String, Array], default: '' },
      limit: { type: [Number, String], default: 1 },
      color: { type: String },
      hasError: { type: Boolean, default: !1 },
    },
    setup(e, { expose: t }) {
      const n = e,
        { getColor: o } = Re(),
        { childAttributes: r, messageListAttributes: a } = nw(n),
        l = We('limit'),
        s = p(() =>
          n.modelValue ? (Array.isArray(n.modelValue) ? n.modelValue.slice(0, l.value) : [n.modelValue]) : [],
        ),
        i = p(() => (n.color ? { color: o(n.color) } : {}))
      return (
        t({ messages: s }),
        (u, c) => (
          C(),
          A(
            Te,
            null,
            [
              L(u.$slots, 'default', pe(ke({ ariaAttributes: f(r), messages: s.value, attrs: u.$attrs }))),
              L(u.$slots, 'messages', pe(ke({ ariaAttributes: f(a), messages: s.value })), () => [
                s.value.length > 0
                  ? (C(),
                    A(
                      'div',
                      le({ key: 0, class: 'va-message-list', style: i.value }, f(a)),
                      [
                        Y('ul', ow, [
                          (C(!0),
                          A(
                            Te,
                            null,
                            Ue(
                              s.value,
                              (d, m) => (
                                C(),
                                A('li', { key: m, class: 'va-message-list__message' }, [
                                  L(u.$slots, 'message', pe(ke({ messages: s.value, message: d })), () => [
                                    e.hasError
                                      ? (C(),
                                        ee(f(Ke), {
                                          key: 0,
                                          class: 'va-message-list__icon',
                                          name: 'va-warning',
                                          size: 16,
                                        }))
                                      : W('', !0),
                                    Fe(Ae(d), 1),
                                  ]),
                                ])
                              ),
                            ),
                            128,
                          )),
                        ]),
                      ],
                      16,
                    ))
                  : W('', !0),
              ]),
            ],
            64,
          )
        )
      )
    },
  }),
  ws = ye(rw)
function rr(e, t, n, o) {
  const r = ct(),
    a = p(() => {
      const i = t[e]
      return r != null && r.vnode.props ? e in r.vnode.props && r.vnode.props[e] !== void 0 : i !== void 0
    })
  if (o === void 0)
    return [
      p({
        set(i) {
          n(`update:${e}`, i)
        },
        get() {
          return t[e]
        },
      }),
    ]
  const l = t[e],
    s = H(l === void 0 ? o : l)
  return (
    ge(
      () => t[e],
      (i) => {
        i !== void 0 && (s.value = i)
      },
    ),
    [
      p({
        set(i) {
          ;(s.value = i), n(`update:${e}`, i)
        },
        get() {
          return a.value ? t[e] : s.value
        },
      }),
    ]
  )
}
const aw = (e) => typeof e == 'object' && '_setter' in e,
  lw = (e, t) => {
    if (!aw(e)) return
    const n = e._setter
    e._setter = (o) => {
      t(o), n(o)
    }
  },
  Na = (e) => typeof e == 'function',
  Yl = (e) => typeof e == 'string',
  Og = Symbol('FormService'),
  Lg = (e) => {
    const t = kt(Og, null)
    if (!t)
      return {
        forceDirty: H(!1),
        forceHideErrorMessages: H(!1),
        forceHideErrors: H(!1),
        forceHideLoading: H(!1),
        fields: p(() => []),
        registerField: () => {},
        unregisterField: () => {},
        immediate: p(() => !1),
      }
    const n = Fn()
    return (
      et(() => {
        t.registerField(n, e)
      }),
      wt(() => {
        t.unregisterField(n)
      }),
      t
    )
  },
  fm = (e = [], t = null) => (Yl(e) && (e = [e]), e.map((n) => (Na(n) ? n(t) : n))),
  ro = {
    name: { type: String, default: void 0 },
    rules: { type: Array, default: () => [] },
    dirty: { type: Boolean, default: !1 },
    error: { type: Boolean, default: void 0 },
    errorMessages: { type: [Array, String], default: void 0 },
    errorCount: { type: [String, Number], default: 1 },
    success: { type: Boolean, default: !1 },
    messages: { type: [Array, String], default: () => [] },
    immediateValidation: { type: Boolean, default: !1 },
    modelValue: {},
  },
  Bo = ['update:error', 'update:errorMessages', 'update:dirty'],
  zl = (e) => typeof e == 'object' && typeof e.then == 'function',
  sw = (e, t, n) => {
    const o = H(t.dirty || !1)
    return (
      lw(e, () => {
        ;(o.value = !0), n('update:dirty', !0)
      }),
      ge(
        e,
        (r, a) => {
          r === a && (o.value = !0)
        },
        { deep: !0 },
      ),
      ge(
        () => t.dirty,
        (r) => {
          o.value !== r && (o.value = r)
        },
      ),
      { isDirty: o }
    )
  },
  iw = () => {
    const e = H(!1)
    return {
      isTouched: e,
      onBlur: () => {
        e.value = !0
      },
    }
  },
  uw = (e) => {
    let t = !0
    return (...n) => {
      if (!t) return
      t = !1
      const o = e(...n)
      return (
        dt(() => {
          t = !0
        }),
        o
      )
    }
  },
  ao = (e, t, n) => {
    const { reset: o, focus: r } = n,
      [a] = rr('error', e, t, !1),
      [l] = rr('errorMessages', e, t, []),
      s = H(!1),
      { isTouched: i, onBlur: u } = iw(),
      c = p(() => ({
        'aria-invalid': a.value,
        'aria-errormessage': typeof l.value == 'string' ? l.value : l.value.join(', '),
      })),
      d = () => {
        ;(l.value = []), (a.value = !1), (h.value = !1), (i.value = !1), (s.value = !1)
      },
      m = (V) => {
        let T = !1,
          B = []
        return (
          V.forEach((K) => {
            Yl(K) ? ((B = [...B, K]), (T = !0)) : K === !1 && (T = !0)
          }),
          (l.value = B),
          (a.value = T),
          !T
        )
      },
      v = async () => {
        if (!e.rules || !e.rules.length) return !0
        const V = fm(e.rules.flat(), n.value.value),
          T = V.filter((K) => zl(K)),
          B = V.filter((K) => !zl(K))
        return T.length
          ? ((s.value = !0),
            Promise.all(T)
              .then((K) => m([...B, ...K]))
              .finally(() => {
                s.value = !1
              }))
          : m(B)
      },
      g = uw(() => {
        if (!e.rules || !e.rules.length) return !0
        const V = e.rules.flat(),
          T = fm(V, n.value.value),
          B = T.filter((U) => zl(U)),
          K = T.filter((U) => !zl(U)),
          j = K.some((U) => (Yl(U) ? U : U === !1))
        return B.length && !j
          ? ((s.value = !0),
            Promise.all(B).then((U) => {
              m([...K, ...U]), (s.value = !1)
            }),
            j)
          : m(K)
      })
    vn(() => g())
    const { isDirty: h } = sw(n.value, e, t),
      {
        forceHideErrors: _,
        forceHideLoading: y,
        forceHideErrorMessages: b,
        forceDirty: w,
        immediate: S,
      } = Lg({
        isTouched: i,
        isDirty: h,
        isValid: p(() => !a.value),
        isLoading: s,
        errorMessages: l,
        validate: g,
        validateAsync: v,
        resetValidation: d,
        focus: r,
        reset: () => {
          o(), d(), g()
        },
        value: p(() => n.value || e.modelValue),
        name: Ut(e, 'name'),
      }),
      $ = p(() => e.immediateValidation || S.value)
    let k = !0
    const z = (V) => {
      ;(k = !1),
        V(),
        dt(() => {
          k = !0
        })
    }
    return (
      ge(
        n.value,
        () => {
          if (k) return g()
        },
        { immediate: $.value },
      ),
      {
        isDirty: h,
        isValid: p(() => !a.value),
        isError: a,
        isTouched: i,
        isLoading: p({
          get: () => (_.value ? !1 : $.value || i.value || h.value || w.value ? s.value : !1),
          set(V) {
            s.value = V
          },
        }),
        computedError: p(() => (_.value ? !1 : $.value || i.value || h.value || w.value ? a.value : !1)),
        computedErrorMessages: p(() => (b.value ? [] : l.value)),
        listeners: { onBlur: u },
        validate: g,
        resetValidation: d,
        withoutValidation: z,
        validationAriaAttributes: c,
      }
    )
  },
  cw = { class: 'va-message-list-wrapper' },
  $s = re({
    name: 'VaMessageListWrapper',
    __name: 'VaMessageListWrapper',
    props: { ...ro },
    setup(e) {
      const t = e,
        n = p(() => (t.error ? 'danger' : t.success ? 'success' : '')),
        o = Ut(t, 'error'),
        r = p(() => (t.error ? t.errorMessages : t.messages)),
        a = p(() => (t.error ? Number(t.errorCount) : 99))
      return (l, s) => (
        C(),
        A('div', cw, [
          ne(
            f(ws),
            {
              color: n.value,
              limit: a.value,
              'has-error': o.value,
              'model-value': r.value,
              'inherit-slots': ['message'],
            },
            { default: G((i) => [L(l.$slots, 'default', pe(ke(i)))]), _: 3 },
            8,
            ['color', 'limit', 'has-error', 'model-value'],
          ),
        ])
      )
    },
  }),
  dw = (e) => {
    const { globalConfig: t, mergeGlobalConfig: n, setGlobalConfig: o, getGlobalConfig: r } = Mn(),
      a = p(() => {
        var l
        const s = qo(t.value),
          i = { ...s, colors: mg(s.colors) },
          u = or(i, e.value)
        return (
          (l = e.value.colors) != null &&
            l.variables &&
            Object.keys(e.value.colors.variables).forEach((c) => {
              u.colors.variables[c] = e.value.colors.variables[c]
            }),
          u
        )
      })
    return ln(Ss, { mergeGlobalConfig: n, setGlobalConfig: o, getGlobalConfig: r, globalConfig: a }), a
  },
  ha = (e, t) => {
    if (!e) return null
    if (!('type' in e) || e.type === ur || typeof e == 'string') return Ze('div', t, e)
    if (e.type === It) return e
    if ('$el' in e) return ha(e.$el, t)
    if (e.type === Ub) return Ze(e.ssContent, t)
    if (e.type === Ta) {
      if (e.children === null) return e
      const n = ha(e.children[0], t)
      return n && (e.children[0] = Ze(n, t)), e
    }
    if (e.type === Te)
      return e.children === null
        ? e
        : e.children.length === 1
          ? Ze(Te, e.props, [ha(e.children[0], t)])
          : Ze('div', t, e)
    if (typeof e.type.render == 'function') {
      const n = Ze(e, t)
      if (Array.isArray(n.children) && n.children.length > 1) return Ze('div', t, n.children)
    }
    return Ze(e, t)
  },
  pm = (e, t = {}, n = {}) => {
    const o = e == null ? void 0 : e(t)
    if (!o) return null
    const r = o.filter((a) => a.type !== It)
    return r.length === 0 ? null : r.length === 1 ? ha(r[0], n) : Ze('div', n, o)
  },
  Bg = (e, t = {}, n = {}) => {
    const o = e == null ? void 0 : e(t)
    return o ? o.map((r) => ha(r, n)) : null
  },
  mw = re({
    name: 'VaCssVarsRenderer',
    inheritAttrs: !1,
    setup(e, { slots: t, attrs: n }) {
      const { colorsToCSSVariable: o, colors: r } = Re(),
        a = p(() => o(r))
      return () => Ze(Te, n, Bg(t.default, {}, { style: a.value }) || void 0)
    },
  }),
  Ya = re({
    name: 'VaConfig',
    inheritAttrs: !1,
    __name: 'VaConfig',
    props: {
      ...Le,
      components: { type: Object, default: () => ({}) },
      colors: { type: Object },
      i18n: { type: Object },
    },
    setup(e) {
      const t = e,
        n = Zu(),
        o = p(() => [...n.value, t.components])
      ug(o),
        dw(
          p(() => {
            const a = {}
            return t.colors && (a.colors = t.colors), t.i18n && (a.i18n = t.i18n), a
          }),
        )
      const r = p(() => !!t.colors)
      return (a, l) =>
        r.value
          ? (C(), ee(f(mw), pe(le({ key: 0 }, a.$attrs)), { default: G(() => [L(a.$slots, 'default')]), _: 3 }, 16))
          : L(a.$slots, 'default', { key: 1 })
    },
  }),
  fw = { class: 'va-separator', 'aria-hidden': 'true' },
  pw = re({
    name: 'VaSeparator',
    __name: 'VaSeparator',
    setup(e) {
      return (t, n) => (C(), A('div', fw))
    },
  }),
  vw = { class: 'va-spacer', 'aria-hidden': 'true' },
  gw = re({
    name: 'VaSpacer',
    __name: 'VaSpacer',
    setup(e) {
      return (t, n) => (C(), A('div', vw))
    },
  }),
  hw = (e) => {
    if (!e) return 0
    const t = e.offsetWidth - e.clientWidth,
      n = e.offsetHeight - e.clientHeight
    return Math.max(t, n)
  },
  yw = (e) => {
    const t = H({ top: 0, left: 0, width: 0, height: 0, bottom: 0, right: 0 })
    let n, o
    const r = () => {
      e.value && (t.value = e.value.getBoundingClientRect())
    }
    return (
      et(() => {
        ;(n = new ResizeObserver(r)),
          (o = new MutationObserver(r)),
          e.value && n.observe(e.value),
          e.value && o.observe(e.value, { attributes: !0, childList: !0, subtree: !0 }),
          window.addEventListener('resize', r),
          window.addEventListener('scroll', r),
          r()
      }),
      wt(() => {
        n == null || n.disconnect(),
          o == null || o.disconnect(),
          window.removeEventListener('resize', r),
          window.removeEventListener('scroll', r),
          (n = void 0),
          (o = void 0)
      }),
      t
    )
  },
  pr = () => typeof window > 'u',
  sc = () => !pr(),
  Ng = () => (typeof window > 'u' ? void 0 : window),
  _w = {},
  Ln = () => (pr() ? (typeof globalThis > 'u' ? _w : globalThis) : window),
  Rg = (e) => {
    const t = p(sc),
      n = H(null)
    return (
      ge(
        t,
        () => {
          t.value && (n.value = e())
        },
        { immediate: !0 },
      ),
      n
    )
  },
  ks = () => Rg(() => window),
  St = (e) => {
    if (e && typeof e == 'object' && ((e = f(e)), !!e)) return typeof e.$el < 'u' ? e.$el : e
  },
  au = (e, ...t) => {
    if (!(!e || typeof e != 'object')) {
      if ('addEventListener' in e && typeof e.addEventListener == 'function') {
        e.addEventListener(...t)
        return
      }
      'parentElement' in e && au(e.parentElement, ...t)
    }
  },
  lu = (e, ...t) => {
    if (!(!e || typeof e != 'object')) {
      if ('removeEventListener' in e && typeof e.removeEventListener == 'function') {
        e.removeEventListener(...t)
        return
      }
      'parentElement' in e && lu(e.parentElement, ...t)
    }
  },
  ft = (e, t, n) => {
    const o = n && typeof n != 'boolean' ? n : ks(),
      r = typeof n == 'boolean' ? n : !1
    ge(
      o,
      (a, l) => {
        Array.isArray(e)
          ? e.forEach((s) => {
              au(St(f(a)), s, t, r), lu(St(f(l)), s, t, r)
            })
          : (au(St(f(a)), e, t, r), lu(St(f(l)), e, t, r))
      },
      { immediate: !0 },
    )
  },
  vm = (e) => {
    if (Array.isArray(e)) return e.map(f)
    const t = f(e)
    return Array.isArray(t) ? t : [t]
  },
  ar = (e, t) => {
    let n
    const o = (r) => {
      r.forEach((a) => {
        const l = f(a)
        if (l) {
          if (!(l instanceof Element))
            throw (
              (console.error('Vuestic: Trying to observe non-HTMLElement', { target: l, array: e }),
              new Error('Vuestic: Unable to observe non-HTMLElement'))
            )
          l && (n == null || n.observe(l))
        }
      })
    }
    return (
      ge(e, (r) => {
        n == null || n.disconnect(), o(vm(r))
      }),
      et(() => {
        ;(n = new ResizeObserver(t)), o(vm(e))
      }),
      wt(() => (n == null ? void 0 : n.disconnect())),
      n
    )
  },
  bw = re({
    __name: 'VaStickyScrollbar',
    props: { el: {}, direction: { default: 'horizontal' }, offset: { default: 0 } },
    setup(e) {
      const t = e,
        n = H(null),
        o = We('offset'),
        r = p(() => {
          var c
          return t.el ? t.el : ((c = n.value) == null ? void 0 : c.parentNode) ?? null
        }),
        a = yw(r),
        l = p(() => {
          const c = r.value
          if (!c) return {}
          const d = c,
            m = hw(d),
            { bottom: v, left: g, right: h, top: _ } = a.value
          return t.direction === 'vertical'
            ? g > window.innerWidth
              ? { display: 'none' }
              : h < window.innerWidth
                ? { display: 'none' }
                : {
                    position: 'fixed',
                    top: `${_}px`,
                    right: 0,
                    height: `${d.clientHeight}px`,
                    overflowY: 'auto',
                    overflowX: 'hidden',
                  }
            : _ > window.innerHeight
              ? { display: 'none' }
              : v < window.innerHeight
                ? { display: 'none' }
                : {
                    position: 'fixed',
                    top: `${Math.min(v, window.innerHeight) - m - Number(o.value)}px`,
                    width: `${d.clientWidth}px`,
                    overflowX: 'auto',
                    overflowY: 'hidden',
                  }
        })
      ft(
        'scroll',
        (c) => {
          var d, m
          n.value &&
            (t.direction === 'horizontal'
              ? (d = r.value) == null || d.scrollTo({ left: n.value.scrollLeft })
              : (m = r.value) == null || m.scrollTo({ top: n.value.scrollTop }))
        },
        n,
      ),
        ft(
          'scroll',
          (c) => {
            var d, m, v, g
            if (n.value)
              if (t.direction === 'horizontal') {
                if (((d = r.value) == null ? void 0 : d.scrollLeft) === n.value.scrollLeft) return
                n.value.scrollTo({ left: (m = r.value) == null ? void 0 : m.scrollLeft })
              } else {
                if (((v = r.value) == null ? void 0 : v.scrollTop) === n.value.scrollTop) return
                n.value.scrollTo({ top: (g = r.value) == null ? void 0 : g.scrollTop })
              }
          },
          r,
        )
      const s = H(0),
        i = H(0)
      ar(
        p(() => (r.value ? [...r.value.children] : [])),
        () => {
          ;(s.value = r.value.scrollWidth), (i.value = r.value.scrollHeight)
        },
      )
      const u = p(() =>
        t.direction === 'vertical'
          ? { width: '1px', height: `${i.value}px` }
          : { height: '1px', width: `${s.value}px` },
      )
      return (c, d) => (
        C(),
        A('div', { style: me(l.value), ref_key: 'currentEl', ref: n }, [Y('div', { style: me(u.value) }, null, 4)], 4)
      )
    },
  }),
  Xa = () => {
    const e = H(!1)
    return (
      et(() => {
        e.value = !0
      }),
      wt(() => {
        e.value = !1
      }),
      e
    )
  },
  zw = ['xs', 'sm', 'md', 'lg', 'xl', 'smUp', 'mdUp', 'lgUp', 'smDown', 'mdDown', 'lgDown'],
  Cw = zw.reduce((e, t) => ((e[t] = !1), e), {}),
  Dg = () => {
    const e = kt(rg, {}),
      t = Xa(),
      { globalConfig: n } = Mn(),
      o = p(() => {
        const a = n.value.breakpoint
        return a || ot('useBreakpoint: breakpointConfig is not defined!'), a ?? {}
      }),
      r = p(() =>
        o.value.enabled
          ? { width: void 0, height: void 0, current: void 0, thresholds: o.value.thresholds, ...Cw }
          : {},
      )
    return ec(() => (t.value ? e : r.value))
  },
  su = (e) => {
    const t = ct()
    let n = () => {}
    const o = x_(
      (r, a) => (
        (n = a),
        {
          get() {
            var l
            return r(), (l = t.proxy) == null ? void 0 : l.$refs[e]
          },
          set(l) {},
        }
      ),
    )
    return et(n), ps(n), o
  },
  Mg = (e) => {
    let t
    return (
      e.startsWith('rgba')
        ? (t = e.substring(5, e.length - 1).split(','))
        : (t = e.substring(4, e.length - 1).split(',')),
      (t[0] = Number(t[0])),
      (t[1] = Number(t[1])),
      (t[2] = Number(t[2])),
      t[3] === void 0 ? (t[3] = 1) : (t[3] = Number(t[3])),
      t
    )
  },
  gm = (e) =>
    '#' +
    (e[0] | 256).toString(16).slice(1) +
    (e[1] | 256).toString(16).slice(1) +
    (e[2] | 256).toString(16).slice(1) +
    ((e[3] * 255) | 256).toString(16).slice(1),
  Sw = (e) => {
    const t = []
    let n = e
    for (; n; ) {
      if (!(n instanceof HTMLElement) || !n) return t
      const { backgroundColor: o, willChange: r } = window.getComputedStyle(n),
        a = r.includes('background'),
        l = Mg(o)
      if (l[3] === 1 && !a) return t.push(n), t
      ;(l[3] !== 0 || a) && t.push(n), (n = n.parentElement)
    }
    return t
  },
  hm = 'va-background-watcher',
  ww = (e, t) => (
    (e.className = hm + ' ' + e.className),
    e.addEventListener('transitionend', (n) => {
      n.target === e && t()
    }),
    () => {
      ;(e.className = e.className.replace(hm, '')), e.removeEventListener('transitionend', t)
    }
  ),
  $w = (e, t) => {
    const n = e.map((o) => ww(o, t))
    return () => {
      n.forEach((o) => o())
    }
  },
  kw = (e, t) => {
    const n = t[3]
    if (n === 1) return t
    if (n === 0) return e
    const o = Math.round(e[0] * (1 - n) + t[0] * n),
      r = Math.round(e[1] * (1 - n) + t[1] * n),
      a = Math.round(e[2] * (1 - n) + t[2] * n)
    return [o, r, a, 1]
  },
  ym = (e) => {
    let t = [0, 0, 0, 0]
    for (let n = e.length - 1; n >= 0; n--) t = kw(t, Mg(window.getComputedStyle(e[n]).backgroundColor))
    return t
  },
  Fg = (e) => {
    const t = H('#000000')
    let n = () => {}
    return (
      vn(() => {
        if ((n(), e.value)) {
          const o = Sw(e.value)
          ;(n = $w(o, () => {
            t.value = gm(ym(o))
          })),
            (t.value = gm(ym(o)))
        }
      }),
      t
    )
  },
  jg = (e) => e.config.globalProperties,
  ko = (e, t, n) => {
    const o = jg(e)
    o[t] = n
  },
  Tw = (e, t) => jg(e)[t],
  Vw = oo((e = {}) => ({
    install(t) {
      const n = pg(e)
      e != null &&
        e.componentsAll &&
        console.warn(
          'Global config -> `componentsAll` was moved to Global config -> components.all. Please replace this to make it work. More info here: https://github.com/epicmaxco/vuestic-ui/issues/1967',
        ),
        t.provide(Ss, n),
        ko(t, '$vaConfig', n)
    },
  })),
  ic = (e, t) => {
    if (pr()) return
    let n = document.getElementById(e)
    n
      ? (n.innerHTML = t())
      : ((n = document.createElement('style')),
        n.setAttribute('type', 'text/css'),
        n.setAttribute('id', e),
        (n.innerHTML = t()),
        document.head.append(n))
  },
  Pw = (e) => {
    var t
    ;(t = document.getElementById(e)) == null || t.remove()
  },
  _m = (e, t) => `${ql(e)}: ${t};
`,
  fi = 'data-va-app',
  bm = (e) => `va-color-variables-${e}`,
  Aw = (e, t) => {
    const { colors: n, getTextColor: o, getColor: r, currentPresetName: a, applyPreset: l } = Re(),
      s = (g = n) => {
        if (!g) return
        const h = Object.keys(g),
          _ = h.map((b) => `${ql(b)}: ${g[b]}`).join(';'),
          y = h.map((b) => `${ql(`on-${b}`)}: ${r(o(g[b]))}`).join(';')
        return `${_};${y}`
      },
      i = (g = n, h = ':root, :host') => {
        const _ = Object.keys(g)
        let y = `${h} {
`
        return (
          _.forEach((b) => {
            y += _m(b, g[b])
          }),
          _.forEach((b) => {
            y += _m(`on-${b}`, r(o(g[b])))
          }),
          (y += `}
`),
          y
        )
      },
      u = p(() => e._uid),
      c = p(() => ':root, :host'),
      d = (g) => {
        if (!g || pr()) return
        const h = i(g, c.value)
        ic(bm(u.value), () => h)
      }
    function m() {
      return { [fi]: u.value }
    }
    const v = e.mount
    return (
      (e.mount = function (...g) {
        const h = v.apply(this, g),
          _ = e._container,
          y = _.getAttribute(fi)
        return y && y !== u.value.toString() && Pw(bm(y)), _.setAttribute(fi, u.value.toString()), h
      }),
      ge(
        n,
        (g) => {
          d(g)
        },
        { immediate: !0, deep: !0 },
      ),
      {
        colors: n,
        currentPresetName: a,
        getAppStylesRootAttribute: m,
        renderCSSVariables: s,
        updateColors: d,
        renderCSSVariablesStyleContent: i,
      }
    )
  },
  Ew = oo((e) => ({
    install(t) {
      ko(t, '$vaColorConfig', Aw(t))
    },
  }))
let Iw = 0
const pi = (e = 4) =>
    Math.random()
      .toString(36)
      .substring(2, e + 2),
  Hg = () => `${pi(8)}-${pi(4)}-${pi(4)}-${++Iw}`
function xw() {
  const e = on({ width: void 0, height: void 0 }),
    t = () => {
      ;(e.width = window == null ? void 0 : window.innerWidth),
        (e.height = window == null ? void 0 : window.innerHeight)
    },
    n = p(sc)
  return (
    ge(
      n,
      (o) => {
        o && t()
      },
      { immediate: !0 },
    ),
    ft('resize', t, !0),
    { windowSizes: e }
  )
}
const vr = () => Rg(() => document),
  Ow = (e) => {
    var t
    const n = (t = Tw(e, '$vaConfig')) == null ? void 0 : t.globalConfig
    if (!n) return ot('createBreakpointConfigPlugin: globalConfig is not defined!'), {}
    const o = p(() => {
      const m = n.value.breakpoint
      return m || ot('createBreakpointConfigPlugin: breakpointConfig is not defined!'), m ?? {}
    })
    if (!o.value.enabled) return {}
    if (!o.value.thresholds || !Object.values(o.value.thresholds).length)
      return ot('createBreakpointConfigPlugin: there are no defined thresholds!'), {}
    const { windowSizes: r } = xw(),
      a = p(sc),
      l = p(() => {
        if (!(!a.value || !r.width))
          return Object.entries(o.value.thresholds).reduce((m, [v, g]) => (r.width >= g && (m = v), m), 'xs')
      }),
      s = p(() => Object.keys(o.value.thresholds).reduce((m, v) => ((m[v] = `va-screen-${v}`), m), {})),
      i = () => {
        let m = ''
        return (
          Object.values(o.value.thresholds).forEach((v, g) => {
            ;(m += `@media screen and (min-width: ${v}px) {`),
              (m += `:root { --va-media-ratio: ${(g + 1) * 0.2} }`),
              (m += `}
`)
          }),
          m
        )
      },
      u = p(Hg)
    ic(`va-helpers-media-${u.value}`, i)
    const c = vr()
    ge(
      l,
      (m) => {
        !m ||
          !o.value.bodyClass ||
          !c.value ||
          (c.value.body.classList.forEach((v) => {
            Object.values(s.value).includes(v) && c.value.body.classList.remove(v)
          }),
          c.value.body.classList.add(s.value[m]))
      },
      { immediate: !0 },
    )
    const d = p(() => {
      const m = l.value === 'xs',
        v = l.value === 'sm',
        g = l.value === 'md',
        h = l.value === 'lg',
        _ = l.value === 'xl'
      return {
        xs: m,
        sm: v,
        md: g,
        lg: h,
        xl: _,
        smUp: v || g || h || _,
        mdUp: g || h || _,
        lgUp: h || _,
        smDown: m || v,
        mdDown: m || v || g,
        lgDown: m || v || g || h,
      }
    })
    return ec(() => ({
      width: r.width,
      height: r.height,
      current: l.value,
      thresholds: o.value.thresholds,
      ...d.value,
    }))
  },
  Lw = oo(() => ({
    install(e) {
      const t = Ow(e)
      e.provide(rg, t), ko(e, '$vaBreakpoint', t)
    },
  })),
  Bw = 5,
  jo = H([]),
  Nw = (e) => {
    var t
    return ((t = e.component) == null ? void 0 : t.props) || {}
  },
  Rw = (e) => (e.el ? e.el.offsetHeight + Bw : 0),
  Dw = (e) => {
    const t = ct(),
      n = p(() => {
        const o = jo.value.findIndex((r) => r === t.vnode)
        return o === -1
          ? 0
          : jo.value.slice(o + 1).reduce((r, a) => {
              const { position: l } = Nw(a),
                { position: s } = e
              return s === l ? Rw(a) + r : r
            }, 0)
      })
    return (
      et(() => {
        jo.value.unshift(t.vnode)
      }),
      wt(() => {
        jo.value = jo.value.filter((o) => o !== t.vnode)
      }),
      {
        yOffset: n,
        updateYOffset: () => {
          jo.value = jo.value.filter((o) => o !== t.vnode)
        },
      }
    )
  },
  Mw = () => {
    let e
    return { start: (...o) => ((e = window.setTimeout(...o)), e), clear: () => e && window.clearTimeout(e) }
  },
  Fw = (e) => e.startsWith('$t:'),
  Be = (e) => ({ type: String, default: e }),
  zm = (e, t) => (
    t &&
      Object.keys(t).forEach((n) => {
        e = e.replace(`{${n}}`, String(t[n]))
      }),
    e
  ),
  ut = () => {
    const { globalConfig: e } = Mn(),
      t = p(() => e.value.i18n)
    function n(r, a) {
      var l
      const s = (l = ct()) == null ? void 0 : l.appContext.config.globalProperties.$t
      if (typeof s == 'function') {
        const u = s(`vuestic.${r}`, a)
        if (u) return u
      }
      const i = t.value[r]
      return i ? zm(i, a) || r : (ot(`${r} not found in VuesticUI i18n config`), r)
    }
    function o(r, a) {
      return r ? (Fw(r) ? n(r.slice(3), a) : zm(r, a) || r) : ''
    }
    return { tp: o, t: n }
  },
  Vt = (e, t = !1) => {
    const { props: n } = ct(),
      { getColor: o, getTextColor: r } = Re()
    return {
      textColorComputed: p(() => {
        if (n.textColor) return o(n.textColor)
        const l = e ? f(e) : n.color
        if (!l) return 'currentColor'
        const s = o(l)
        return ew(s) ? 'currentColor' : f(t) ? s : o(r(s))
      }),
    }
  },
  jw = ['role', 'aria-live'],
  Hw = { class: 'va-toast__group' },
  Uw = ['textContent'],
  Ww = { class: 'va-toast__content' },
  Gw = ['innerHTML'],
  Kw = ['textContent'],
  qw = { key: 1, class: 'va-toast__content' },
  Yw = re({
    name: 'VaToast',
    __name: 'VaToast',
    props: {
      ...Le,
      title: { type: String, default: '' },
      offsetY: { type: [Number, String], default: 16 },
      offsetX: { type: [Number, String], default: 16 },
      message: { type: [String, Function], default: '' },
      dangerouslyUseHtmlString: { type: Boolean, default: !1 },
      icon: { type: String, default: 'close' },
      customClass: { type: String, default: '' },
      duration: { type: [Number, String], default: 5e3 },
      color: { type: String, default: 'primary' },
      closeable: { type: Boolean, default: !0 },
      onClose: { type: Function },
      onClick: { type: Function },
      multiLine: { type: Boolean, default: !1 },
      position: {
        type: String,
        default: 'top-right',
        validator: (e) =>
          ['top-right', 'top-center', 'top-left', 'bottom-right', 'bottom-center', 'bottom-left'].includes(e),
      },
      render: { type: Function },
      ariaCloseLabel: Be('$t:close'),
      role: { type: String, default: void 0 },
      inline: { type: Boolean, default: !1 },
    },
    emits: ['on-click', 'on-close'],
    setup(e, { emit: t }) {
      const n = re({
          name: 'VaToastRenderer',
          props: { render: { type: Function, required: !0 } },
          setup: (j) => () => j.render(),
        }),
        { tp: o } = ut(),
        r = e,
        a = t,
        l = je(),
        { getColor: s } = Re(),
        { textColorComputed: i } = Vt(p(() => s(r.color))),
        u = We('offsetY'),
        c = We('offsetX'),
        d = We('duration'),
        m = H(!1),
        { yOffset: v, updateYOffset: g } = Dw(r),
        h = p(() => ({
          vertical: r.position.includes('top') ? 'top' : 'bottom',
          horizontal: r.position.includes('center') ? 'center' : r.position.includes('right') ? 'right' : 'left',
        })),
        _ = () => {
          const j = h.value.vertical,
            U = h.value.horizontal
          return U === 'center'
            ? { [j]: `${u.value + v.value}px`, left: '50%', '--va-toast-x-shift': '-50%' }
            : { [j]: `${u.value + v.value}px`, [U]: `${c.value}px` }
        },
        y = p(() => [
          r.customClass,
          r.multiLine ? 'va-toast--multiline' : '',
          r.inline ? 'va-toast--inline' : '',
          [`va-toast--${r.position}`],
        ]),
        b = p(() => ({ ..._(), backgroundColor: s(r.color), color: i.value })),
        w = p(() => (r.role === 'status' ? 'polite' : 'assertive')),
        S = p(() => (typeof r.message == 'function' ? r.message() : r.message)),
        $ = () => {
          var j, U
          ;(j = l.value) == null || j.removeEventListener('transitionend', $), (U = l.value) == null || U.remove()
        },
        k = () => {
          typeof r.onClick == 'function' ? r.onClick() : a('on-click')
        },
        z = () => {
          ;(m.value = !1), g()
        },
        V = () => {
          typeof r.onClose == 'function' ? r.onClose() : a('on-close'), $()
        },
        T = Mw(),
        B = T.clear,
        K = () => {
          d.value > 0 && T.start(() => m.value && z(), d.value)
        }
      return (
        et(() => {
          ;(m.value = !0), K()
        }),
        (j, U) => (
          C(),
          ee(
            Ka,
            { name: 'va-toast-fade', onAfterLeave: V },
            {
              default: G(() => [
                Pn(
                  Y(
                    'div',
                    {
                      ref_key: 'rootElement',
                      ref: l,
                      role: j.$props.role ?? j.$props.closeable ? 'alertdialog' : 'alert',
                      'aria-live': w.value,
                      'aria-atomic': 'true',
                      class: Pe(['va-toast', y.value]),
                      style: me(b.value),
                      onMouseenter: U[0] || (U[0] = (...D) => f(B) && f(B)(...D)),
                      onMouseleave: K,
                      onClick: k,
                    },
                    [
                      Y('div', Hw, [
                        j.$props.title
                          ? (C(),
                            A('h2', { key: 0, class: 'va-toast__title', textContent: Ae(j.$props.title) }, null, 8, Uw))
                          : W('', !0),
                        Pn(
                          Y(
                            'div',
                            Ww,
                            [
                              j.$props.dangerouslyUseHtmlString
                                ? (C(), A('div', { key: 0, innerHTML: S.value }, null, 8, Gw))
                                : (C(), A('p', { key: 1, textContent: Ae(S.value) }, null, 8, Kw)),
                            ],
                            512,
                          ),
                          [[Aa, j.$props.message]],
                        ),
                        j.$props.render
                          ? (C(), A('div', qw, [ne(f(n), { render: j.$props.render }, null, 8, ['render'])]))
                          : W('', !0),
                        j.$props.closeable
                          ? (C(),
                            ee(
                              Ig,
                              {
                                key: 2,
                                class: 'va-toast__close-icon',
                                role: 'button',
                                'aria-label': f(o)(j.$props.ariaCloseLabel),
                                tabindex: '0',
                                size: '1rem',
                                name: j.$props.icon,
                                onClick: Se(z, ['stop']),
                                onKeydown: $e(Se(z, ['stop']), ['enter']),
                              },
                              null,
                              8,
                              ['aria-label', 'name', 'onKeydown'],
                            ))
                          : W('', !0),
                      ]),
                    ],
                    46,
                    jw,
                  ),
                  [[Aa, m.value]],
                ),
              ]),
              _: 1,
            },
          )
        )
      )
    },
  }),
  Ug = no(Yw)
let Ra = 1
Ln().vaToastInstances = []
const uc = (e) => {
    var t
    return ((t = e.component) == null ? void 0 : t.props) || {}
  },
  Xw = (e, t) => {
    if (!e) return
    if (!Ln().vaToastInstances.length) {
      Ra = 1
      return
    }
    Ln().vaToastInstances.findIndex((o) => o === e) < 0 ||
      (t(),
      (Ln().vaToastInstances = Ln().vaToastInstances.reduce((o, r, a) => (r === e ? o : [...o, r]), [])),
      Ln().vaToastInstances.length || (Ra = 1))
  },
  Jw = (e, t) => {
    e && (Ea(null, e), e.remove()), (e = null)
  },
  Qw = (e, { props: t, children: n, element: o, appContext: r } = {}) => {
    let a = o,
      l
    return (
      (l = ne(
        e,
        {
          ...t,
          onClose: () => {
            Xw(l, () => Jw(a)), t != null && t.onClose && t.onClose()
          },
        },
        n,
      )),
      r && (l.appContext = r),
      a ? Ea(l, a) : typeof document < 'u' && Ea(l, (a = document.createElement('div'))),
      { vNode: l, el: a }
    )
  },
  Zw = (e) => {
    if (!Ln().vaToastInstances.length) {
      Ra = 1
      return
    }
    Ln().vaToastInstances.forEach((t) => {
      ;(e && t.appContext !== e) || uc(t).onClose()
    })
  },
  e1 = (e) => {
    const t = Ln().vaToastInstances.find((n) => {
      var o
      return ((o = n.el) == null ? void 0 : o.id) === e
    })
    t && uc(t).onClose()
  },
  t1 = (e) => (typeof e == 'string' ? { message: e } : e),
  n1 = (e, t) => {
    const { vNode: n, el: o } = Qw(Ug, { appContext: t, props: t1(e) }),
      r = uc(n)
    return o && n.el && r
      ? (document.body.appendChild(o.childNodes[0]),
        (n.el.id = 'notification_' + Ra),
        (Ra += 1),
        Ln().vaToastInstances.push(n),
        n.el.id)
      : null
  },
  o1 = (e) => ({
    init(t) {
      return n1(t, e == null ? void 0 : e._context)
    },
    close(t) {
      e1(t)
    },
    closeAll(t = !1) {
      Zw(t || e == null ? void 0 : e._context)
    },
  }),
  r1 = oo(() => ({
    install(e) {
      ko(e, '$vaToast', o1(e))
    },
  })),
  Cm = {
    closeDropdown() {
      let e = this
      for (; (e = e.$parent); )
        if (e.$options.name === 'VaDropdown') {
          e.hide()
          break
        }
    },
  },
  a1 = oo(() => ({
    install(e) {
      ko(e, '$closeDropdown', Cm.closeDropdown), ko(e, '$vaDropdown', Cm)
    },
  })),
  l1 = (e, t, n) => {
    const o = ct()
    if (!o) throw new Error('`useButtonBackground` hook must be used only inside of setup function!')
    const r = o.props,
      { getColor: a, getGradientBackground: l } = Re(),
      s = p(() => (r.plain ? 'transparent' : r.gradient ? l(e.value) : e.value)),
      i = p(() => !r.plain && n.value),
      u = p(() => !r.plain && t.value),
      c = p(() =>
        u.value && r.pressedBehavior === 'opacity'
          ? r.pressedOpacity
          : i.value && r.hoverBehavior === 'opacity'
            ? Number(r.hoverOpacity)
            : Number(r.backgroundOpacity),
      ),
      d = p(() => i.value && r.hoverBehavior === 'mask'),
      m = p(() => u.value && r.pressedBehavior === 'mask'),
      v = p(() => (m.value ? r.pressedOpacity : d.value ? Number(r.hoverOpacity) : 0)),
      g = p(() => (m.value ? a(r.pressedMaskColor) : d.value ? a(r.hoverMaskColor) : 'transparent'))
    return { backgroundColor: s, backgroundColorOpacity: c, backgroundMaskOpacity: v, backgroundMaskColor: g }
  },
  gr = {
    tag: { type: String, default: 'span' },
    to: { type: [String, Object], default: void 0 },
    replace: { type: Boolean, default: void 0 },
    append: { type: Boolean, default: void 0 },
    exact: { type: Boolean, default: void 0 },
    activeClass: { type: String, default: void 0 },
    exactActiveClass: { type: String, default: void 0 },
    href: { type: String, default: void 0 },
    target: { type: String, default: void 0 },
    disabled: { type: Boolean, default: !1 },
  },
  No = (e) => {
    const t = ct(),
      n = p(() => (t == null ? void 0 : t.appContext.config.globalProperties)),
      o = p(() => {
        var d
        return (d = n.value) == null ? void 0 : d.$router
      }),
      r = p(() => {
        var d
        return (d = n.value) == null ? void 0 : d.$route
      }),
      { getGlobalConfig: a } = Mn(),
      l = p(() => {
        if (e.disabled) return e.tag
        if (e.href && !e.to) return 'a'
        const d = a()
        return d.routerComponent && e.to
          ? d.routerComponent
          : e.to && o.value !== void 0
            ? 'router-link'
            : e.to && o.value === void 0
              ? 'a'
              : e.tag || 'div'
      }),
      s = p(() => (e.disabled ? !1 : !!(e.href || e.to))),
      i = p(() =>
        s.value
          ? l.value === 'a'
            ? { target: e.target, href: c.value }
            : {
                target: e.target,
                to: e.to,
                replace: e.replace,
                append: e.append,
                activeClass: e.activeClass,
                exact: e.exact,
                exactActiveClass: e.exactActiveClass,
              }
          : {},
      ),
      u = p(() => {
        if (!o.value || !e.to) return !1
        const d = o.value.resolve(e.to).href,
          m = o.value.currentRoute.value.path
        return d.replace('#', '') === m.replace('#', '')
      }),
      c = p(() => {
        var d
        return e.href
          ? e.href
          : r.value === void 0 && e.to
            ? e.to
            : e.to
              ? (d = o.value) == null
                ? void 0
                : d.resolve(e.to, r.value).href
              : void 0
      })
    return { isLinkTag: s, tagComputed: l, hrefComputed: c, isActiveRouterLink: u, linkAttributesComputed: i }
  },
  s1 = (e) => {
    const { linkAttributesComputed: t, isLinkTag: n } = No(e),
      o = p(() => (n.value ? void 0 : e.type)),
      r = p(() => {
        const a = { 'aria-disabled': !!e.disabled, disabled: !!e.disabled }
        return n.value ? a : { type: o.value, tabindex: e.loading || e.disabled ? -1 : 0, ...a }
      })
    return p(() => ({ ...t.value, ...r.value }))
  },
  i1 = (e) => {
    var t, n, o
    if (pr()) return e
    if (e > 0) {
      const r = (t = window == null ? void 0 : window.navigator) == null ? void 0 : t.userAgent,
        a =
          r &&
          /^((?!chrome|android).)*safari/i.test(
            (n = window == null ? void 0 : window.navigator) == null ? void 0 : n.userAgent,
          ),
        l =
          r && /(version.)15|16/i.test((o = window == null ? void 0 : window.navigator) == null ? void 0 : o.userAgent)
      if (a && !l) return e < 1 ? 1 - e : e
    }
    return e
  },
  u1 = (e, t, n, o) => {
    const r = ct()
    if (!r) throw new Error('`useButtonTextColor` hook must be used only inside of setup function!')
    const a = r.props,
      { getColor: l, colorToRgba: s, getStateMaskGradientBackground: i } = Re(),
      u = p(() => ({
        background: 'transparent',
        color: e.value,
        '-webkit-background-clip': 'text',
        'background-clip': 'text',
        opacity: v.value,
      })),
      c = (g, h, _) => {
        const y = l(g)
        let b
        return (
          _ === 'opacity'
            ? (b = { color: s(e.value, h) })
            : (b = { background: i(t.value, y, h), color: h < 1 ? s(e.value, i1(h)) : y }),
          { ...u.value, ...b }
        )
      },
      d = p(() => c(a.hoverMaskColor, Number(a.hoverOpacity), a.hoverBehavior)),
      m = p(() => c(a.pressedMaskColor, a.pressedOpacity, a.pressedBehavior)),
      v = p(() => {
        if (!a.disabled) return a.textOpacity === 1 || (o.value && !n.value) ? 1 : n.value ? 0.9 : a.textOpacity
      })
    return p(() => {
      const g = { color: e.value, background: 'transparent' }
      return (
        a.plain && Object.assign(g, u.value, { background: e.value }),
        a.plain ? (n.value ? m.value : o.value ? d.value : g) : g
      )
    })
  },
  lr = (e, t, n) => Math.min(Math.max(e, t), n),
  c1 = { class: 'va-progress-circle__wrapper', viewBox: '0 0 40 40' },
  d1 = ['r', 'stroke', 'stroke-width', 'stroke-dasharray', 'stroke-dashoffset'],
  m1 = re({
    name: 'VaProgressCircle',
    __name: 'VaProgressCircle',
    props: {
      ...dr,
      ...Le,
      modelValue: { type: [Number, String], default: 0 },
      indeterminate: { type: Boolean, default: !1 },
      thickness: { type: [Number, String], default: 0.06 },
      color: { type: String, default: 'primary' },
      ariaLabel: Be('$t:progressState'),
    },
    setup(e) {
      const t = e,
        { getColor: n } = Re(),
        { sizeComputed: o } = mr(t),
        r = p(() => (lr(Number(t.thickness), 0, 1) / 2) * 100),
        a = p(() => 20 - (20 * r.value) / 100),
        l = p(() => 2 * Math.PI * a.value),
        s = p(() => l.value * (1 - lr(Number(t.modelValue), 0, 100) / 100)),
        i = p(() => n(t.color, void 0, !0)),
        { tp: u } = ut(),
        c = p(() => ({ color: i.value })),
        d = p(() => ({ width: o.value, height: o.value })),
        m = p(() => ({ 'va-progress-circle--indeterminate': t.indeterminate })),
        v = p(() => ({
          role: 'progressbar',
          'aria-label': u(t.ariaLabel),
          'aria-valuenow': t.indeterminate ? void 0 : t.modelValue,
        }))
      return (g, h) => (
        C(),
        A(
          'div',
          le({ class: ['va-progress-circle', m.value], style: d.value }, v.value),
          [
            (C(),
            A('svg', c1, [
              Y(
                'circle',
                {
                  class: 'va-progress-circle__overlay',
                  cx: '50%',
                  cy: '50%',
                  r: a.value,
                  fill: 'none',
                  stroke: i.value,
                  'stroke-width': r.value + '%',
                  'stroke-dasharray': l.value,
                  'stroke-dashoffset': s.value,
                },
                null,
                8,
                d1,
              ),
            ])),
            g.$slots.default
              ? (C(),
                A(
                  'div',
                  { key: 0, style: me(c.value), class: 'va-progress-circle__info' },
                  [L(g.$slots, 'default')],
                  4,
                ))
              : W('', !0),
          ],
          16,
        )
      )
    },
  }),
  qr = ye(m1),
  yt = (e, t) =>
    Object.keys(e)
      .filter((n) => t.includes(n))
      .reduce((n, o) => ((n[o] = e[o]), n), {}),
  f1 = {
    hoverBehavior: { type: String, default: 'mask', validator: (e) => ['opacity', 'mask'].includes(e) },
    hoverOpacity: { type: [Number, String], default: 0.15 },
    hoverMaskColor: { type: String, default: 'textInverted' },
  },
  p1 = {
    pressedBehavior: { type: String, default: 'mask', validator: (e) => ['opacity', 'mask'].includes(e) },
    pressedOpacity: { type: Number, default: 0.13 },
    pressedMaskColor: { type: String, default: 'textPrimary' },
  },
  Ja = { loading: { type: Boolean, default: !1 } },
  Wg = (e) => e instanceof HTMLElement,
  Bn = (e) => {
    !e || !Wg(e) || (e.focus(), e.dispatchEvent(new FocusEvent('focus', { bubbles: !0 })))
  },
  Ts = (e) => {
    !e || !Wg(e) || (e.blur(), e.dispatchEvent(new Event('blur', { bubbles: !0 })))
  },
  iu = (e) => {
    if (e.tabIndex !== -1) {
      Bn(e)
      return
    }
    const t = e.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])')
    t && Bn(t)
  },
  uu = (e, t, n = {}) => {
    et(() => window.addEventListener(e, t, { capture: !0, ...n })),
      wt(() => window.removeEventListener(e, t, { capture: !0, ...n }))
  },
  Gg = () => {
    const e = je(),
      t = () => {
        e.value = document.activeElement
      }
    return et(t), uu('focus', t), uu('blur', t), e
  },
  Vs = ['focus', 'blur']
function lo(e, t) {
  const n = Gg(),
    o = p({
      get: () => (sn(n.value) || sn(e == null ? void 0 : e.value) ? !1 : n.value === (e == null ? void 0 : e.value)),
      set: (i) => {
        i ? l() : s()
      },
    }),
    r = (i) => {
      t == null || t('focus', i)
    },
    a = (i) => {
      t == null || t('blur', i)
    },
    l = () => {
      e != null && e.value && Bn(St(e == null ? void 0 : e.value))
    },
    s = () => {
      e != null && e.value && Ts(St(e == null ? void 0 : e.value))
    }
  return ft('focus', r, e), ft('blur', a, e), { isFocused: o, onFocus: r, onBlur: a, focus: l, blur: s }
}
const Yr = (e) => {
  if (nt(e))
    return p({
      get() {
        return St(e.value)
      },
      set(n) {
        e.value = n
      },
    })
  if (e) {
    const n = su(e)
    return p({
      get() {
        return St(n.value)
      },
      set(o) {
        n.value = o
      },
    })
  }
  const t = je()
  return p({
    set(n) {
      t.value = St(n)
    },
    get() {
      return t.value
    },
  })
}
function Qa(e, t) {
  const n = H(!1),
    o = () => {
      ;(t != null && t.value) || (n.value = !0)
    },
    r = () => {
      n.value = !1
    }
  t &&
    ge(t, (l) => {
      l && (n.value = !1)
    })
  const a = Yr(e)
  return ft('mouseenter', o, a), ft('mouseleave', r, a), { isHovered: n, onMouseEnter: o, onMouseLeave: r }
}
function v1(e) {
  const t = H(!1),
    n = () => {
      t.value = !0
    },
    o = () => {
      t.value = !1
    },
    r = Yr(e)
  return (
    ft(['mousedown', 'touchstart', 'dragstart'], n, r),
    ft(['mouseup', 'mouseleave', 'touchend', 'touchcancel', 'drop', 'dragend'], o, !0),
    { isPressed: t, onMouseDown: n, onMouseUp: o }
  )
}
const Kg = (e, t = !0) => {
    var n
    if (tr(e)) return !0
    if (!e || (t && (!Na(e) || !((n = e()) != null && n.length)))) return !1
    const o = t ? e() : e
    return Array.isArray(o)
      ? o.some((r) => (Array.isArray(r.children) ? Kg(r.children, !1) : r.children || r.props))
      : !!o.children
  },
  g1 = (e = 'default') => {
    const { slots: t } = ct()
    return p(() => Kg(t[e]))
  },
  rt = (e, t) => {
    Kr && !e && console.warn('You must pass the @param "prefix" to the useBem hook!')
    const n = p(() => (typeof t == 'function' ? t() : f(t))),
      o = p(() => Object.entries(f(n)).reduce((l, [s, i]) => (i && (l[`${e}--${La(s)}`] = !0), l), {})),
      r = p(() => Object.keys(o.value)),
      a = p(() => r.value.join(' '))
    return new Proxy(
      {},
      {
        ownKeys() {
          return Reflect.ownKeys(o.value)
        },
        getOwnPropertyDescriptor(l, s) {
          return Reflect.getOwnPropertyDescriptor(o.value, s)
        },
        get(l, s, i) {
          switch (s) {
            case 'asArray':
              return r
            case 'asString':
              return a
            case 'asObject':
              return o
            default:
              return Reflect.get(o.value, s, i)
          }
        },
      },
    )
  },
  h1 = re({
    name: 'VaButton',
    __name: 'VaButton',
    props: {
      ...Le,
      ...dr,
      ...f1,
      ...p1,
      ...Ja,
      ...gr,
      tag: { type: String, default: 'button' },
      type: { type: String, default: 'button' },
      block: { type: Boolean, default: !1 },
      disabled: { type: Boolean, default: !1 },
      color: { type: String, default: 'primary' },
      textColor: { type: String, default: '' },
      textOpacity: { type: [Number, String], default: 1 },
      backgroundOpacity: { type: [Number, String], default: 1 },
      borderColor: { type: String, default: '' },
      gradient: { type: Boolean, default: !1 },
      plain: { type: Boolean, default: !1 },
      round: { type: Boolean, default: !1 },
      size: { type: String, default: 'medium', validator: (e) => ['small', 'medium', 'large'].includes(e) },
      icon: { type: String, default: '' },
      iconRight: { type: String, default: '' },
      iconColor: { type: String, default: '' },
    },
    setup(e, { expose: t }) {
      const n = e,
        { getColor: o } = Re(),
        r = p(() => o(n.color)),
        { sizeComputed: a } = mr(n),
        l = p(() => {
          const R = /([0-9]*)(px)/.exec(a.value)
          return R ? `${+R[1] / 2}${R[2]}` : a.value
        }),
        { tagComputed: s } = No(n),
        i = s1(n),
        { disabled: u } = Sn(n),
        c = je(),
        { focus: d, blur: m } = lo(c),
        { isHovered: v } = Qa(c, u),
        { isPressed: g } = v1(c),
        h = p(() => (n.iconColor ? o(n.iconColor) : T.value)),
        _ = p(() => ({ color: h.value, size: n.size })),
        y = p(() => ({ 'va-button__content--loading': n.loading })),
        b = g1(),
        w = p(() => !!((n.iconRight && !n.icon) || (!n.iconRight && n.icon))),
        S = p(() => !b.value && w.value),
        $ = We('textOpacity'),
        k = We('backgroundOpacity'),
        z = rt('va-button', () => ({
          ...yt(n, ['disabled', 'block', 'loading', 'round', 'plain']),
          small: n.size === 'small',
          normal: !n.size || n.size === 'medium',
          large: n.size === 'large',
          opacity: $.value < 1,
          bordered: !!n.borderColor,
          iconOnly: S.value,
          leftIcon: !S.value && !!n.icon && !n.iconRight,
          rightIcon: !S.value && !n.icon && !!n.iconRight,
        })),
        V = p(() => n.plain || k.value < 0.5),
        { textColorComputed: T } = Vt(r, V),
        {
          backgroundColor: B,
          backgroundColorOpacity: K,
          backgroundMaskOpacity: j,
          backgroundMaskColor: U,
        } = l1(r, g, v),
        D = u1(T, r, g, v),
        O = p(() => ({ borderColor: n.borderColor ? o(n.borderColor) : 'transparent', ...D.value }))
      return (
        t({ focus: d, blur: m }),
        (R, N) => (
          C(),
          ee(
            an(f(s)),
            le(
              {
                ref_key: 'button',
                ref: c,
                class: ['va-button', f(z)],
                style: [
                  O.value,
                  `--va-background-color: ${String(f(B))};--va-background-color-opacity: ${String(
                    f(K),
                  )};--va-background-mask-color: ${String(f(U))};--va-background-mask-opacity: ${String(f(j))}`,
                ],
              },
              f(i),
            ),
            {
              default: G(() => [
                Y(
                  'span',
                  { class: Pe(['va-button__content', y.value]) },
                  [
                    L(R.$slots, 'prepend', pe(ke({ icon: e.icon, iconAttributes: _.value })), () => [
                      e.icon
                        ? (C(),
                          ee(f(Ke), le({ key: 0, class: 'va-button__left-icon', name: e.icon }, _.value), null, 16, [
                            'name',
                          ]))
                        : W('', !0),
                    ]),
                    L(R.$slots, 'default'),
                    L(R.$slots, 'append', pe(ke({ icon: e.iconRight, iconAttributes: _.value })), () => [
                      e.iconRight
                        ? (C(),
                          ee(
                            f(Ke),
                            le({ key: 0, class: 'va-button__right-icon', name: e.iconRight }, _.value),
                            null,
                            16,
                            ['name'],
                          ))
                        : W('', !0),
                    ]),
                  ],
                  2,
                ),
                R.loading
                  ? L(R.$slots, 'loading', pe(le({ key: 0 }, { size: l.value, color: f(T) })), () => [
                      ne(
                        f(qr),
                        { class: 'va-button__loader', size: l.value, color: f(T), thickness: 0.15, indeterminate: '' },
                        null,
                        8,
                        ['size', 'color'],
                      ),
                    ])
                  : W('', !0),
              ]),
              _: 3,
            },
            16,
            ['class', 'style'],
          )
        )
      )
    },
  }),
  Xe = ye(h1),
  qg = () => {
    const e = ct()
    return e.appContext.app ? `${e.appContext.app._uid}_${e.uid}` : String(e.uid)
  },
  aa = [],
  y1 = (e, t) => {
    const n = qg(),
      o = vr(),
      r = () => {
        var l
        aa.includes(n) ||
          (aa.push(n), (l = o.value) == null || l.body.classList.add('va-modal-overlay-background--blurred'))
      },
      a = () => {
        var l
        const s = aa.indexOf(n)
        s !== -1 &&
          (aa.splice(s, 1),
          aa.length === 0 && ((l = o.value) == null || l.body.classList.remove('va-modal-overlay-background--blurred')))
      }
    vn(() => {
      e.value && (t.value ? r() : a())
    }),
      wt(a)
  },
  _1 = () => Hg(),
  br = us([]),
  Yg = (e) => {
    const t = _1(),
      n = () => {
        br.includes(t) || br.push(t)
      },
      o = () => {
        const s = br.findIndex((i) => i === t)
        s !== -1 && br.splice(s, 1)
      },
      r = p(() => {
        const s = br.findIndex((i) => i === t)
        return s === -1 ? -1 : s + 1
      }),
      a = p(() => r.value === br.length - 1),
      l = p(() => r.value === 0)
    return (
      et(() => {
        e.value && n()
      }),
      wt(() => {
        o()
      }),
      ge(e, (s) => {
        s ? n() : o()
      }),
      { zIndex: r, isTop: a, isLowest: l, register: n, unregister: o }
    )
  },
  Xl = Symbol('NOT_PROVIDED'),
  b1 = (e, t) => {
    const n = ct()
    return p(() => {
      if (!(n != null && n.vnode.props)) return Xl
      const o = t[e]
      return e in n.vnode.props ? o : Xl
    })
  },
  Tt = { stateful: { type: Boolean, default: !1 }, modelValue: { type: void 0 } },
  Xg = (e = !1) => ({ stateful: { type: Boolean, default: e } }),
  Mt = ['update:modelValue'],
  vt = (e, t, n = 'modelValue', o = {}) => {
    const { eventName: r, defaultValue: a } = o,
      l = r || `update:${n.toString()}`,
      s = b1(n, e),
      i = 'defaultValue' in o,
      u = H(s.value === Xl ? (i ? a : e[n]) : s.value)
    let c
    const d = () => {
      c = ge(
        () => e[n],
        (v) => {
          u.value = v
        },
      )
    }
    ge(
      () => e.stateful,
      (v) => {
        v ? d() : c == null || c()
      },
      { immediate: !0 },
    )
    const m = p({
      get: () => (e.stateful ? u.value : e[n]),
      set: (v) => {
        e.stateful && (u.value = v), t(l, v)
      },
    })
    return (
      Object.defineProperty(m, 'stateful', { get: () => e.stateful }),
      Object.defineProperty(m, 'userProvided', { get: () => s.value !== Xl }),
      { valueComputed: m }
    )
  },
  z1 = ':where(a, button, input, textarea, select):not([disabled]), *[tabindex]',
  Jg = () => {
    const e = vr(),
      t = ks(),
      n = xg('trapInEl', null)
    let o = [],
      r = null,
      a = null
    const l = (v) => {
        var g
        return ((g = n.value) == null ? void 0 : g.contains(v.target)) || !1
      },
      s = () => {
        r == null || r.focus()
      },
      i = () => {
        a == null || a.focus()
      },
      u = (v) => {
        var g, h
        const _ = v.code === 'Tab',
          y = v.shiftKey
        if (_) {
          if (!l(v)) {
            v.preventDefault(), y ? i() : s()
            return
          }
          if (((g = e.value) == null ? void 0 : g.activeElement) === a && !y) {
            v.preventDefault(), s()
            return
          }
          ;((h = e.value) == null ? void 0 : h.activeElement) === r && y && (v.preventDefault(), i())
        }
      },
      c = (v) => {
        ;(n.value = v), m(), d()
      },
      d = () => {
        var v
        n.value &&
          ((o = Array.from(n.value.querySelectorAll(z1))),
          (r = o[0]),
          (a = o[o.length - 1]),
          (v = t.value) == null || v.addEventListener('keydown', u))
      },
      m = () => {
        var v
        ;(o = []), (r = null), (a = null), (v = t.value) == null || v.removeEventListener('keydown', u)
      }
    return { trapFocus: d, freeFocus: m, trapFocusIn: c }
  },
  la = us([]),
  C1 = () => {
    const e = Fn(),
      t = p(() => la.findIndex(({ id: s }) => s === String(e))),
      n = () => {
        t.value === -1 && la.push({ id: String(e) })
      },
      o = () => {
        t.value !== -1 && la.splice(t.value, 1)
      },
      r = p(() => t.value !== -1 && t.value === la.length - 1),
      a = p(() => t.value === 0),
      l = p(() => la.length > 1)
    return {
      modalId: e,
      modalLevel: t,
      registerModal: n,
      unregisterModal: o,
      isTopLevelModal: r,
      isLowestLevelModal: a,
      isMoreThenOneModalOpen: l,
    }
  },
  Qg = 'data-va-teleported-from',
  Zg = 'data-va-teleported',
  cc = (e) => {
    if (!e) return null
    const t = e.getAttribute(Zg)
    return t === null ? cc(e.parentElement) : document.querySelector(`[${Qg}="${t}"]`)
  },
  eh = () => {
    var e, t
    const n = qg(),
      o = ct(),
      r = o == null ? void 0 : o.vnode.scopeId
    return {
      teleportFromAttrs: { [Qg]: n },
      teleportedAttrs: {
        [Zg]: n,
        ...(r ? { [r]: '' } : void 0),
        ...((t = (e = o == null ? void 0 : o.appContext.config) == null ? void 0 : e.globalProperties) == null
          ? void 0
          : t.$vaColorConfig.getAppStylesRootAttribute()),
      },
      findTeleportedFrom: cc,
    }
  },
  vi = (e, t) => (t ? (t.parentElement === e ? !0 : e.contains(t)) : !1),
  S1 = (e) => (Array.isArray(e) ? e : [e]),
  Ps = (e, t) => {
    uu('mousedown', (n) => {
      const o = n.target
      if (n.target.shadowRoot) return
      const r = cc(o)
      S1(e).some((l) => {
        const s = St(f(l))
        return s ? (r ? vi(s, o) || vi(s, r) : vi(s, o)) : !1
      }) || t(o)
    })
  },
  w1 = ['aria-labelledby'],
  $1 = { key: 2, class: 'va-modal__inner' },
  k1 = { class: 'va-modal__header' },
  T1 = { key: 0, class: 'va-modal__message' },
  V1 = { key: 1, class: 'va-modal__message' },
  P1 = { key: 2, class: 'va-modal__footer' },
  A1 = { key: 3, class: 'va-modal__footer' },
  E1 = re({
    name: 'ModalElement',
    inheritAttrs: !1,
    props: { ...Le, isTransition: { type: Boolean, default: !0 } },
    setup:
      (e, { slots: t, attrs: n }) =>
      () => {
        var o
        return e.isTransition ? Ze(Ka, { ...n }, t) : (o = t.default) == null ? void 0 : o.call(t, n)
      },
  }),
  I1 = re({
    name: 'VaModal',
    inheritAttrs: !1,
    __name: 'VaModal',
    props: {
      ...lg({ cancelButton: Xe, okButton: Xe, closeButton: Ke }),
      ...Tt,
      modelValue: { type: Boolean, default: !1 },
      attachElement: { type: String, default: 'body' },
      allowBodyScroll: { type: Boolean, default: !1 },
      disableAttachment: { type: Boolean, default: !1 },
      title: { type: String, default: '' },
      message: { type: String, default: '' },
      okText: Be('$t:ok'),
      cancelText: Be('$t:cancel'),
      hideDefaultActions: { type: Boolean, default: !1 },
      fullscreen: { type: Boolean, default: !1 },
      closeButton: { type: Boolean, default: !1 },
      mobileFullscreen: { type: Boolean, default: !0 },
      noDismiss: { type: Boolean, default: !1 },
      noOutsideDismiss: { type: Boolean, default: !1 },
      noEscDismiss: { type: Boolean, default: !1 },
      maxWidth: { type: String, default: '' },
      maxHeight: { type: String, default: '' },
      anchorClass: { type: String },
      size: { type: String, default: 'medium' },
      sizesConfig: {
        type: Object,
        default: () => ({ defaultSize: 'medium', sizes: { small: 576, medium: 768, large: 992, auto: 'max-content' } }),
      },
      fixedLayout: { type: Boolean, default: !1 },
      withoutTransitions: { type: Boolean, default: !1 },
      overlay: { type: Boolean, default: !0 },
      overlayOpacity: { type: [Number, String], default: 0.6 },
      showNestedOverlay: { type: Boolean, default: !1 },
      blur: { type: Boolean, default: !1 },
      zIndex: { type: [Number, String], default: void 0 },
      backgroundColor: { type: String, default: 'background-secondary' },
      noPadding: { type: Boolean, default: !1 },
      beforeClose: { type: Function },
      beforeOk: { type: Function },
      beforeCancel: { type: Function },
      ariaCloseLabel: Be('$t:close'),
    },
    emits: [...Mt, 'cancel', 'ok', 'before-open', 'open', 'before-close', 'close', 'click-outside'],
    setup(e, { expose: t, emit: n }) {
      const o = e
      sg(o)
      const r = n,
        a = je(),
        l = je(),
        { trapFocusIn: s, freeFocus: i } = Jg(),
        { registerModal: u, unregisterModal: c, isTopLevelModal: d, isLowestLevelModal: m } = C1(),
        { getColor: v } = Re(),
        { textColorComputed: g } = Vt(Ut(o, 'backgroundColor')),
        { valueComputed: h } = vt(o, r),
        _ = p(() => ({
          'va-modal--fullscreen': o.fullscreen,
          'va-modal--mobile-fullscreen': o.mobileFullscreen,
          'va-modal--fixed-layout': o.fixedLayout,
          'va-modal--no-padding': o.noPadding,
        })),
        { zIndex: y } = Yg(h),
        b = p(() => (o.zIndex ? Number(o.zIndex) : y.value)),
        w = $S(o),
        S = p(() => ({
          maxWidth: o.maxWidth || w.value,
          maxHeight: o.maxHeight,
          color: g.value,
          background: v(o.backgroundColor),
        })),
        $ = p(() => ({ 'va-modal__overlay--lowest': m.value, 'va-modal__overlay--top': d.value })),
        k = () =>
          o.showNestedOverlay && !m.value
            ? 'var(--va-modal-overlay-nested-opacity)'
            : 'var(--va-modal-overlay-opacity)',
        z = p(() => {
          if (o.overlay)
            return d.value || o.showNestedOverlay
              ? { 'background-color': 'var(--va-modal-overlay-color)', opacity: k() }
              : ''
        }),
        V = () => {
          h.value = !0
        },
        T = (M) => {
          const ae = () => {
            ;(h.value = !1), M == null || M()
          }
          o.beforeClose ? o.beforeClose(ae) : ae()
        },
        B = () => {
          h.value = !h.value
        },
        K = () => {
          const M = () => {
            T(() => r('cancel'))
          }
          o.beforeCancel ? o.beforeCancel(M) : M()
        },
        j = () => {
          const M = () => {
            T(() => r('ok'))
          }
          o.beforeOk ? o.beforeOk(M) : M()
        },
        U = () => {
          dt(() => {
            l.value && s(l.value)
          })
        },
        D = (M) => r('before-open', M),
        O = (M) => r('open', M),
        R = (M) => r('before-close', M),
        N = (M) => r('close', M),
        x = (M) => {
          setTimeout(() => {
            M.code === 'Escape' && !o.noEscDismiss && !o.noDismiss && d.value && K()
          })
        }
      Ps([l], () => {
        !h.value || o.noOutsideDismiss || o.noDismiss || !d.value || (r('click-outside'), K())
      })
      const ce = ks()
      vn(() => {
        var M, ae
        h.value
          ? (M = ce.value) == null || M.addEventListener('keyup', x)
          : (ae = ce.value) == null || ae.removeEventListener('keyup', x)
      }),
        y1(Ut(o, 'blur'), h)
      const ue = vr(),
        be = (M) => {
          !ue.value ||
            o.allowBodyScroll ||
            (M === 'hidden'
              ? ue.value.body.classList.add('va-modal-open')
              : ue.value.body.classList.remove('va-modal-open'))
        },
        xe = () => {
          u(), be('hidden')
        },
        we = () => {
          m.value && (i(), be('')), c()
        }
      ge(h, (M) => {
        M ? xe() : we()
      }),
        et(() => {
          h.value && xe(), d.value && U()
        }),
        wt(() => {
          we()
        }),
        ge(
          d,
          (M) => {
            M && U()
          },
          { immediate: !0 },
        ),
        t({
          show: V,
          hide: T,
          toggle: B,
          cancel: K,
          ok: j,
          onBeforeEnterTransition: D,
          onAfterEnterTransition: O,
          onBeforeLeaveTransition: R,
          onAfterLeaveTransition: N,
          listenKeyUp: x,
        })
      const { tp: J } = ut(),
        { teleportFromAttrs: _e, teleportedAttrs: Ce } = eh(),
        I = { show: V, hide: T, toggle: B, cancel: K, ok: j }
      return (M, ae) => (
        C(),
        A(
          'div',
          { ref_key: 'rootElement', ref: a, class: Pe(['va-modal-entry', M.$props.anchorClass]) },
          [
            M.$slots.anchor
              ? (C(),
                A('div', le({ key: 0, class: 'va-modal__anchor' }, f(_e)), [L(M.$slots, 'anchor', pe(ke(I)))], 16))
              : W('', !0),
            (C(),
            ee(
              Ta,
              { to: e.attachElement, disabled: M.$props.disableAttachment },
              [
                ne(
                  f(E1),
                  le(
                    {
                      name: 'va-modal',
                      isTransition: !M.$props.withoutTransitions,
                      duration: 300,
                      style: { zIndex: b.value },
                      appear: '',
                    },
                    { ...M.$attrs, ...f(Ce) },
                    { onBeforeEnter: D, onAfterEnter: O, onBeforeLeave: R, onAfterLeave: N },
                  ),
                  {
                    default: G(() => [
                      f(h)
                        ? (C(),
                          A(
                            'div',
                            {
                              key: 0,
                              'aria-labelledby': e.title,
                              class: Pe([_.value, 'va-modal']),
                              role: 'dialog',
                              'aria-modal': 'true',
                            },
                            [
                              M.$props.overlay
                                ? (C(),
                                  A(
                                    'div',
                                    { key: 0, class: Pe(['va-modal__overlay', $.value]), style: me(z.value) },
                                    null,
                                    6,
                                  ))
                                : W('', !0),
                              Y(
                                'div',
                                { ref_key: 'modalDialog', ref: l, class: 'va-modal__dialog', style: me([S.value]) },
                                [
                                  M.$props.fullscreen || M.$props.closeButton
                                    ? (C(),
                                      ee(
                                        f(Ke),
                                        {
                                          key: 0,
                                          'va-child': 'closeButton',
                                          class: Pe([
                                            { 'va-modal__close--fullscreen': M.$props.fullscreen },
                                            'va-modal__close',
                                          ]),
                                          'aria-label': f(J)(M.$props.ariaCloseLabel),
                                          role: 'button',
                                          tabindex: '0',
                                          name: 'va-close',
                                          onClick: K,
                                          onKeydown: [$e(K, ['space']), $e(K, ['enter'])],
                                        },
                                        null,
                                        8,
                                        ['class', 'aria-label'],
                                      ))
                                    : W('', !0),
                                  M.$slots.content
                                    ? L(M.$slots, 'content', pe(le({ key: 1 }, I)))
                                    : (C(),
                                      A('div', $1, [
                                        Y('div', k1, [
                                          L(M.$slots, 'header', pe(ke(I)), () => [
                                            e.title
                                              ? (C(),
                                                A(
                                                  'div',
                                                  {
                                                    key: 0,
                                                    class: 'va-modal__title',
                                                    style: me({ color: f(v)('primary') }),
                                                  },
                                                  Ae(M.$props.title),
                                                  5,
                                                ))
                                              : W('', !0),
                                          ]),
                                        ]),
                                        M.$props.message ? (C(), A('div', T1, Ae(M.$props.message), 1)) : W('', !0),
                                        M.$slots.default
                                          ? (C(), A('div', V1, [L(M.$slots, 'default', pe(ke(I)))]))
                                          : W('', !0),
                                        (M.$props.cancelText || M.$props.okText) && !M.$props.hideDefaultActions
                                          ? (C(),
                                            A('div', P1, [
                                              M.$props.cancelText
                                                ? (C(),
                                                  ee(
                                                    f(Xe),
                                                    {
                                                      key: 0,
                                                      'va-child': 'cancelButton',
                                                      preset: 'secondary',
                                                      color: 'secondary',
                                                      class: 'va-modal__default-cancel-button',
                                                      onClick: K,
                                                    },
                                                    { default: G(() => [Fe(Ae(f(J)(M.$props.cancelText)), 1)]), _: 1 },
                                                  ))
                                                : W('', !0),
                                              ne(
                                                f(Xe),
                                                { 'va-child': 'okButton', onClick: j },
                                                { default: G(() => [Fe(Ae(f(J)(M.$props.okText)), 1)]), _: 1 },
                                              ),
                                            ]))
                                          : W('', !0),
                                        M.$slots.footer
                                          ? (C(), A('div', A1, [L(M.$slots, 'footer', pe(ke(I)))]))
                                          : W('', !0),
                                      ])),
                                ],
                                4,
                              ),
                            ],
                            10,
                            w1,
                          ))
                        : W('', !0),
                    ]),
                    _: 3,
                  },
                  16,
                  ['isTransition', 'style'],
                ),
              ],
              8,
              ['to', 'disabled'],
            )),
          ],
          2,
        )
      )
    },
  }),
  dc = ye(I1),
  x1 = (e) => {
    var t
    return ((t = e.component) == null ? void 0 : t.props) || {}
  },
  Sm = (e, t) => {
    e && (Ea(null, e), e.remove()), (e = null)
  },
  O1 = (e, { props: t, appContext: n } = {}) => {
    const o = document == null ? void 0 : document.createElement('div')
    let r
    const a = (s) => {
        var i
        ;(i = t == null ? void 0 : t.onClose) == null || i.call(t, s), Sm(o)
      },
      l = (s) => {
        var i
        ;(i = t == null ? void 0 : t['onUpdate:modelValue']) == null || i.call(t, s),
          t != null &&
            t.withoutTransitions &&
            !s &&
            dt(() => {
              Sm(o)
            })
      }
    return (
      (r = Ze(e, {
        ...t,
        stateful: (t == null ? void 0 : t.stateful) ?? !0,
        modelValue: !0,
        onClose: a,
        'onUpdate:modelValue': l,
      })),
      n && (r.appContext = n),
      o && Ea(r, o),
      { vNode: r, el: o }
    )
  },
  L1 = (e) => (typeof e == 'string' ? { message: e } : e),
  gi = (e, t) => {
    const { vNode: n, el: o } = O1(dc, { appContext: t, props: L1(e) })
    return o && n.el && x1(n) && document.body.appendChild(o.childNodes[0]), n
  },
  B1 = (e) => ({
    init(t) {
      return gi(t, e == null ? void 0 : e._context)
    },
    confirm(t) {
      return typeof t == 'string'
        ? new Promise((n) => {
            gi(
              {
                message: t,
                onOk() {
                  n(!0)
                },
                onCancel() {
                  n(!1)
                },
              },
              e == null ? void 0 : e._context,
            )
          })
        : new Promise((n) => {
            gi(
              {
                ...t,
                onOk() {
                  var o
                  ;(o = t == null ? void 0 : t.onOk) == null || o.call(t), n(!0)
                },
                onCancel() {
                  var o
                  ;(o = t == null ? void 0 : t.onCancel) == null || o.call(t), n(!1)
                },
              },
              e == null ? void 0 : e._context,
            )
          })
    },
  }),
  N1 = oo(() => ({
    install(e) {
      ko(e, '$vaModal', B1(e))
    },
  })),
  th = (e, t) => {
    const n = Object.entries(t)
    return e.reduce((o, r) => o.concat(n.map(([a, l]) => ({ ...r, postfix: r.postfix ?? a, value: r.value ?? l }))), [])
  },
  nh = (e) =>
    e.reduce((t, n) => {
      const o = [n.property]
        .flat()
        .map((r) => `${r}: ${n.value};`)
        .join('')
      return (t += `.va-${n.prefix}--${n.postfix} { ${o} }`), t
    }, ''),
  wm = (e, t) => {
    const n = th(e, t)
    ic('va-color-helpers', () => nh(n))
  },
  R1 = () => {
    if (pr()) return
    const { globalConfig: e } = Mn()
    return (
      ge(
        () => e.value.colorsClasses,
        (t) => {
          t.length && wm(t, e.value.colors.variables)
        },
        { immediate: !0, deep: !0 },
      ),
      ge(
        () => e.value.colors.variables,
        (t) => {
          t && wm(e.value.colorsClasses, t)
        },
        { immediate: !0, deep: !0 },
      ),
      {
        renderColorHelpers: () => {
          const t = th(e.value.colorsClasses, e.value.colors.variables)
          return nh(t)
        },
      }
    )
  },
  D1 = oo(() => ({
    install(e) {
      ko(e, '$vaColorsClasses', R1())
    },
  })),
  oh = Symbol('AccordionService'),
  M1 = (e, t) => {
    const n = H([]),
      o = () => {
        const u = Math.max(n.value.length, t.value.length)
        return Array.from({ length: u }, (c, d) => t.value[d] ?? !1)
      },
      r = (u) => t.value[n.value.indexOf(u)] ?? !1,
      a = () => {
        t.value = o()
      }
    return (
      ln(oh, {
        registerItem: (u) => {
          n.value.push(u), a()
        },
        unregisterItem: (u) => {
          ;(n.value = n.value.filter((c) => c !== u)), dt(a)
        },
        getItemValue: r,
        setItemValue: (u, c) => {
          const d = n.value.indexOf(u)
          if (d === -1) {
            ot('Accordion item is not registered yet')
            return
          }
          e.multiple ? (t.value[d] = c) : (t.value = o().map((m, v) => (v === d ? c : !1)))
        },
        props: p(() => e),
      }),
      { items: n }
    )
  },
  F1 = () => {
    const e = kt(oh, void 0)
    if (!e) return { accordionProps: H({}) }
    const t = {}
    return (
      e.registerItem(t),
      wt(() => e.unregisterItem(t)),
      {
        accordionItemValue: p({ get: () => e.getItemValue(t), set: (o) => e.setItemValue(t, o) }),
        accordionProps: e.props,
      }
    )
  },
  j1 = { class: 'va-accordion' },
  H1 = re({
    name: 'VaAccordion',
    __name: 'VaAccordion',
    props: {
      ...Tt,
      ...Le,
      modelValue: { type: Array, default: () => [] },
      multiple: { type: Boolean, default: !1 },
      inset: { type: Boolean, default: !1 },
      stateful: { type: Boolean, default: !0 },
      popout: { type: Boolean, default: !1 },
    },
    emits: [...Mt],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        { valueComputed: a } = vt(o, r, 'modelValue'),
        { items: l } = M1(o, a)
      return t({ collapses: l, value: a }), (u, c) => (C(), A('div', j1, [L(u.$slots, 'default')]))
    },
  }),
  U1 = ye(H1),
  W1 = () => {},
  rh = (e, t) => {
    let n = 0
    return function (...o) {
      const r = Date.now()
      r - n < t || (e.apply(this, o), (n = r))
    }
  }
function ah() {
  return document.documentElement.clientHeight || window.innerHeight || document.body.clientHeight
}
function $m({ coordinates: e, offsetTop: t, offsetBottom: n, target: o }) {
  let r = !1,
    a = !1
  const l = ah()
  if (t != null && l)
    if (o === window) r = e.top <= t
    else {
      const { top: s } = o.getBoundingClientRect()
      r = e.top - s <= t
    }
  if (n != null && l)
    if (o === window) a = e.bottom >= l - n
    else {
      const { bottom: s } = o.getBoundingClientRect()
      a = s - e.bottom <= n
    }
  return { isTopAffixed: r, isBottomAffixed: a }
}
function G1(e, t) {
  return e.isTopAffixed !== t.isTopAffixed || e.isBottomAffixed !== t.isBottomAffixed
}
function km(e, t) {
  const { target: n, element: o, offsetTop: r, offsetBottom: a, setState: l, getState: s, initialPosition: i } = t
  if (!o) return
  const u = !e,
    c = o.getBoundingClientRect(),
    d = { offsetBottom: a, offsetTop: r, target: n },
    m = $m(u && i ? { coordinates: i, ...d } : { coordinates: c, ...d }),
    v = s()
  G1(v, m) ? l({ ...m, width: c.width }) : v.width !== c.width && l({ ...v, width: c.width })
}
function K1(e) {
  return e === 'scroll'
}
function q1(e, { handler: t, useCapture: n = K1, wait: o = 50 }) {
  const r = e.map((a) => {
    const l = rh((s) => t(a, s), o)
    return window.addEventListener(a, l, n(a)), () => window.removeEventListener(a, l, n(a))
  })
  return () => r.forEach((a) => a())
}
const Y1 = re({
    name: 'VaAffix',
    __name: 'VaAffix',
    props: {
      ...Le,
      offsetTop: { type: [Number, String], default: void 0 },
      offsetBottom: { type: [Number, String], default: void 0 },
      target: { type: [Object, Function], default: Ng },
    },
    emits: ['change'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        r = je(),
        a = () => (typeof n.target == 'function' ? n.target() : n.target),
        l = p(() => s.value.isTopAffixed || s.value.isBottomAffixed),
        s = H({ isTopAffixed: !1, isBottomAffixed: !1 }),
        i = () => s.value,
        u = (S) => {
          ;(s.value = S), o('change', l)
        },
        c = We('offsetTop'),
        d = We('offsetBottom'),
        m = () => {
          const S = a()
          if (!S) return 0
          if (c.value !== void 0) {
            if (!(S instanceof Window)) {
              const { top: $ } = S.getBoundingClientRect()
              return $ + c.value
            }
            return c.value
          }
        },
        v = () => {
          const S = a()
          if (!S) return 0
          if (d.value !== void 0) {
            if (!(S instanceof Window)) {
              const { bottom: $ } = S.getBoundingClientRect(),
                { borderTopWidth: k, borderBottomWidth: z } = getComputedStyle(S),
                { offsetHeight: V, clientHeight: T } = S,
                B = V - T - parseInt(k) - parseInt(z)
              return ah() - ($ - d.value) + B
            }
            return d.value
          }
        },
        g = (S) => {
          const $ = S()
          return $ === void 0 ? void 0 : `${$}px`
        },
        h = p(() => [{ 'va-affix--affixed': l }]),
        _ = p(() => ({
          top: s.value.isTopAffixed ? g(m) : void 0,
          bottom: s.value.isBottomAffixed ? g(v) : void 0,
          width: `${s.value.width}px`,
        })),
        y = H(),
        b = (S, $) => {
          const k = {
            ...n,
            offsetTop: c.value,
            offsetBottom: d.value,
            initialPosition: y.value,
            element: r.value,
            target: a(),
            setState: u,
            getState: i,
          }
          if (!S || S === 'resize') km(S, k)
          else if ($ && $.target) {
            const z = a()
            z === $.target || z instanceof Window ? km(S, k) : u({ isBottomAffixed: !1, isTopAffixed: !1 })
          }
        }
      let w = W1
      return (
        et(() => {
          var S
          ;(y.value = (S = r.value) == null ? void 0 : S.getBoundingClientRect()),
            (w = q1(['scroll', 'resize'], { handler: b })),
            dt(() => {
              b(null)
            })
        }),
        wt(w),
        (S, $) => (
          C(),
          A(
            'div',
            { ref_key: 'element', ref: r, class: 'va-affix' },
            [
              Y('div', { style: me({ visibility: l.value ? 'hidden' : 'inherit' }) }, [L(S.$slots, 'default')], 4),
              l.value
                ? (C(), A('div', { key: 0, class: Pe(h.value), style: me(_.value) }, [L(S.$slots, 'default')], 6))
                : W('', !0),
            ],
            512,
          )
        )
      )
    },
  }),
  X1 = ye(Y1),
  lh = (e) => {
    const { textColorComputed: t } = Vt(e)
    return t
  },
  mc = (e) => {
    if (e) return e
    const t = ct(),
      n = je()
    return (
      et(() => {
        n.value = t.proxy.$el ?? void 0
      }),
      ps(() => {
        n.value = t.proxy.$el ?? void 0
      }),
      wt(() => {
        n.value = t.proxy.$el ?? void 0
      }),
      n
    )
  },
  J1 = (e) => {
    const { getColor: t } = Re(),
      n = p(() => !!(e.outline || e.border)),
      { textColorComputed: o } = Vt(Ut(e, 'color'), n),
      r = p(() => t(e.color)),
      a = p(() => {
        let c = r.value,
          d = 'none'
        return (
          e.outline && (c = 'transparent'),
          e.border && ((c = 'var(--va-background-primary)'), (d = 'var(--va-alert-box-shadow)')),
          {
            border: e.outline ? `1px solid ${r.value}` : '',
            padding: e.dense ? 'var(--va-alert-padding-y-dense) var(--va-alert-padding-x)' : '',
            backgroundColor: c,
            boxShadow: d,
          }
        )
      }),
      l = lh(Fg(mc())),
      s = p(() => ({ alignItems: e.center ? 'center' : '', color: e.border || e.outline ? l.value : o.value })),
      i = p(() => ({ color: o.value })),
      u = p(() => ({ backgroundColor: e.borderColor ? t(e.borderColor) : r.value }))
    return { alertStyle: a, contentStyle: s, titleStyle: i, borderStyle: u }
  },
  Q1 = { key: 1, class: 'va-alert__close' },
  Z1 = ['aria-label'],
  e$ = re({
    name: 'VaAlert',
    __name: 'VaAlert',
    props: {
      ...Tt,
      ...Le,
      modelValue: { type: Boolean, default: !0 },
      stateful: { type: Boolean, default: !0 },
      color: { type: String, default: 'primary' },
      textColor: { type: String, default: '' },
      title: { type: String, default: '' },
      description: { type: String, default: '' },
      icon: { type: String, default: '' },
      closeText: { type: String, default: '' },
      closeIcon: { type: String, default: 'close' },
      closeable: { type: Boolean, default: !1 },
      dense: { type: Boolean, default: !1 },
      outline: { type: Boolean, default: !1 },
      center: { type: Boolean, default: !1 },
      borderColor: { type: String, default: '' },
      border: { type: String, default: '', validator: (e) => ['top', 'right', 'bottom', 'left', ''].includes(e) },
    },
    emits: [...Mt],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        { contentStyle: a, titleStyle: l, alertStyle: s, borderStyle: i } = J1(o),
        { valueComputed: u } = vt(o, r),
        c = () => {
          u.value = !1
        },
        d = () => {
          u.value = !0
        },
        m = Zt(),
        v = p(() => o.icon || m.icon),
        g = p(() => o.title || m.title),
        h = p(() => `va-alert__border--${o.border}`),
        { tp: _, t: y } = ut()
      return (
        t({ hide: c, show: d }),
        (b, w) => (
          C(),
          ee(
            Ka,
            { name: 'fade' },
            {
              default: G(() => [
                f(u)
                  ? (C(),
                    A(
                      'div',
                      { key: 0, class: 'va-alert', style: me(f(s)), role: 'alert' },
                      [
                        Y('div', { style: me(f(i)), class: Pe([h.value, 'va-alert__border']) }, null, 6),
                        v.value
                          ? (C(),
                            A(
                              'div',
                              { key: 0, style: me(f(a)), class: 'va-alert__icon', 'aria-hidden': 'true' },
                              [L(b.$slots, 'icon', {}, () => [ne(f(Ke), { name: e.icon }, null, 8, ['name'])])],
                              4,
                            ))
                          : W('', !0),
                        Y(
                          'div',
                          { style: me(f(a)), class: 'va-alert__content' },
                          [
                            g.value
                              ? (C(),
                                A(
                                  'div',
                                  { key: 0, style: me(f(l)), class: 'va-alert__title' },
                                  [L(b.$slots, 'title', {}, () => [Fe(Ae(e.title), 1)])],
                                  4,
                                ))
                              : W('', !0),
                            Y('span', null, [L(b.$slots, 'default', {}, () => [Fe(Ae(b.$props.description), 1)])]),
                          ],
                          4,
                        ),
                        e.closeable
                          ? (C(),
                            A('div', Q1, [
                              Y(
                                'div',
                                {
                                  role: 'button',
                                  class: 'va-alert__close--closeable',
                                  tabindex: '0',
                                  'aria-label': e.closeText || f(y)('closeAlert'),
                                  style: me(f(a)),
                                  onClick: c,
                                  onKeydown: [$e(c, ['space']), $e(c, ['enter'])],
                                },
                                [
                                  L(b.$slots, 'close', {}, () => [
                                    e.closeText
                                      ? W('', !0)
                                      : (C(), ee(f(Ke), { key: 0, name: e.closeIcon }, null, 8, ['name'])),
                                    Fe(' ' + Ae(e.closeText), 1),
                                  ]),
                                ],
                                44,
                                Z1,
                              ),
                            ]))
                          : W('', !0),
                      ],
                      4,
                    ))
                  : W('', !0),
              ]),
              _: 3,
            },
          )
        )
      )
    },
  }),
  t$ = ye(e$),
  sh = {
    hideOnScroll: { type: Boolean, default: !1 },
    fixed: { type: Boolean, default: !1 },
    bottom: { type: Boolean, default: !1 },
  }
function ih(e, t) {
  const n = p(() => (t.value ? !!e.hideOnScroll : !1)),
    o = p(() => {
      if (!(!e.bottom && !n.value))
        return e.bottom && n.value
          ? 'translateY(100%)'
          : e.bottom
            ? e.fixed
              ? 'translateY(-100%)'
              : 'translateY(0)'
            : 'translateY(-100%)'
    }),
    r = p(() => (e.fixed ? 'fixed' : n.value ? 'absolute' : void 0))
  return {
    fixedBarStyleComputed: p(() => {
      const l = {
        top: e.bottom && (n.value || e.fixed) ? '100%' : void 0,
        transform: e.hideOnScroll || e.fixed ? o.value : void 0,
      }
      return r.value && Object.assign(l, { position: r.value }), l
    }),
  }
}
function n$(e) {
  if (!e) throw new Error('No target was provided for `useScroll` hook!')
  return typeof e == 'string' ? document.querySelector(e) : e
}
function uh(e, t) {
  const n = je()
  let o
  const r = H(!1),
    a = H(0),
    l = (s) => {
      const i = s.target,
        u = s.target instanceof Window ? i.scrollY : i.scrollTop
      ;(r.value = a.value < u), (a.value = u)
    }
  return (
    et(() => {
      ;(o = e ? window : n$(t || n.value)), o == null || o.addEventListener('scroll', l, e)
    }),
    wt(() => {
      o == null || o.removeEventListener('scroll', l)
    }),
    { scrollRoot: n, isScrolledDown: r }
  )
}
const o$ = re({
    name: 'VaAppBar',
    __name: 'VaAppBar',
    props: {
      ...sh,
      ...Le,
      gradient: { type: Boolean, default: !1 },
      target: { type: [Object, String], default: '' },
      shadowOnScroll: { type: Boolean, default: !1 },
      shadowColor: { type: String, default: '' },
      color: { type: String, default: 'primary' },
    },
    setup(e) {
      const t = e,
        { scrollRoot: n, isScrolledDown: o } = uh(t.fixed, t.target),
        { fixedBarStyleComputed: r } = ih(t, o),
        { getColor: a, getGradientBackground: l, getBoxShadowColor: s } = Re(),
        i = p(() => a(t.color)),
        { textColorComputed: u } = Vt(Ut(t, 'color')),
        c = p(() => (o.value ? !!t.shadowOnScroll : !1)),
        d = p(() => a(t.shadowColor, i.value)),
        m = p(() => {
          const g = s(t.shadowColor ? d.value : i.value)
          return c.value ? `var(--va-app-bar-shadow) ${g}` : ''
        }),
        v = p(() => ({ ...r.value, background: t.gradient ? l(i.value) : i.value, boxShadow: m.value, color: u.value }))
      return (g, h) => (
        C(),
        A(
          'header',
          { ref_key: 'scrollRoot', ref: n, role: 'toolbar', class: 'va-app-bar', style: me(v.value) },
          [L(g.$slots, 'default')],
          4,
        )
      )
    },
  }),
  r$ = ye(o$),
  a$ = re({
    name: 'VaAspectRatio',
    __name: 'VaAspectRatio',
    props: {
      ...Le,
      ratio: { type: [Number, String], default: 'auto' },
      contentHeight: { type: [Number, String], default: 1 },
      contentWidth: { type: [Number, String], default: 1 },
      maxWidth: { type: [Number, String], default: 0, validator: (e) => Number(e) >= 0 },
    },
    setup(e) {
      const t = e,
        n = We('contentHeight'),
        o = We('contentWidth'),
        r = p(() =>
          t.ratio === 'auto' && t.contentHeight === 1 && t.contentWidth === 1
            ? 0
            : isNaN(+t.ratio)
              ? o.value / n.value
              : t.ratio,
        ),
        a = p(() => {
          if (r.value) return { paddingBottom: `${(1 / r.value) * 100}%` }
        }),
        l = p(() => (t.maxWidth ? `${t.maxWidth}px` : void 0))
      return (s, i) => (
        C(),
        A(
          'div',
          { class: 'va-aspect-ratio', style: me(`--va-max-width-computed: ${String(l.value)}`) },
          [a.value ? (C(), A('div', { key: 0, style: me(a.value) }, null, 4)) : W('', !0), L(s.$slots, 'default')],
          4,
        )
      )
    },
  }),
  ch = ye(a$),
  l$ = re({
    name: 'VaFallback',
    props: {
      fallbackSrc: { type: String },
      fallbackText: { type: String },
      fallbackIcon: { type: String },
      fallbackRender: { type: Function },
    },
    components: { VaIcon: Ke },
    emits: ['fallback'],
    setup(e, { emit: t }) {
      return (
        et(() => {
          t('fallback')
        }),
        e.fallbackIcon
          ? () => Ze(Ke, { name: e.fallbackIcon })
          : e.fallbackSrc
            ? () => Ze('img', { src: e.fallbackSrc })
            : e.fallbackRender
              ? () => {
                  var n
                  return Ze((n = e.fallbackRender) == null ? void 0 : n.call(e))
                }
              : () => Ze('span', e.fallbackText)
      )
    },
  }),
  Nr = ye(l$)
function dh(e) {
  switch (!0) {
    case Array.isArray(e):
      return e.reduce((t, n) => ({ ...t, [n]: null }), {})
    case typeof e == 'object' && e !== null:
      return e
    default:
      return {}
  }
}
function Jl(e, t, n = 'props') {
  const { mixins: o, extends: r } = t
  r && Jl(e, r, n), o && o.forEach((l) => Jl(e, l, n))
  const a = dh(t[n])
  for (const l in a) e[l] = a[l]
}
function s$(e) {
  return e.options ? e.options : e.__vccOpts || e.__b ? { ...e.__vccOpts, ...e.__b } : e
}
function i$(e, t = 'props') {
  const n = e.mixins ?? [],
    o = e.extends ?? [],
    r = {}
  Jl(r, o, t)
  for (let a = 0; a < n.length; a++) Jl(r, n[a], t)
  return Object.assign(r, dh(e[t])), r
}
const u$ = (e) => i$(s$(e))
function Qe(e, t) {
  const n = u$(e)
  return t
    ? Object.keys(n).reduce(
        (o, r) => (t.includes(r) || n[r] === void 0 || (o[r] = typeof n[r] == 'string' ? {} : n[r]), o),
        {},
      )
    : n
}
function Yo(e) {
  return [...new Set(e.emits)]
}
const it = (e) => {
    const { props: t } = ct()
    return p(() => Object.keys(e).reduce((n, o) => ((n[o] = t[o]), n), {}))
  },
  c$ = ['src', 'alt'],
  Tm = Qe(Nr),
  d$ = re({
    name: 'VaAvatar',
    __name: 'VaAvatar',
    props: {
      ...Ja,
      ...dr,
      ...Le,
      ...Tm,
      color: { type: String, default: 'primary' },
      textColor: { type: String },
      square: { type: Boolean, default: !1 },
      fontSize: { type: String, default: '' },
      src: { type: String, default: null },
      icon: { type: String, default: '' },
      alt: { type: String, default: '' },
    },
    emits: ['error', 'fallback'],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        { getColor: a } = Re(),
        l = p(() => a(o.color)),
        s = p(() => {
          if (!(o.loading || (o.src && !v.value))) return l.value
        }),
        { sizeComputed: i, fontSizeComputed: u } = mr(o, 'VaAvatar'),
        { textColorComputed: c } = Vt(s),
        d = p(() => ({ fontSize: o.fontSize || u.value })),
        m = rt('va-avatar', () => ({ ...yt(o, ['square']) })),
        v = H(!1),
        g = (y) => {
          ;(v.value = !0), r('error', y)
        }
      ge(
        () => o.src,
        () => {
          v.value = !1
        },
      )
      const h = p(() => ({ hasError: v.value, onError: g })),
        _ = it(Tm)
      return (
        t({ hasLoadError: v }),
        (y, b) => (
          C(),
          A(
            'div',
            {
              class: Pe(['va-avatar', f(m)]),
              style: me([
                d.value,
                `--va-background-color-computed: ${String(s.value)};--va-text-color-computed: ${String(
                  f(c),
                )};--va-size-computed: ${String(f(i))}`,
              ]),
            },
            [
              y.$props.loading
                ? (C(),
                  ee(f(qr), { key: 0, size: f(i), color: l.value, indeterminate: '' }, null, 8, ['size', 'color']))
                : L(y.$slots, 'default', pe(le({ key: 1 }, h.value)), () => [
                    y.$props.src && !v.value
                      ? (C(), A('img', { key: 0, src: y.$props.src, alt: y.$props.alt, onError: g }, null, 40, c$))
                      : v.value && y.$props.src
                        ? L(y.$slots, 'fallback', { key: 1 }, () => [
                            ne(f(Nr), le(f(_), { onFallback: b[0] || (b[0] = (w) => y.$emit('fallback')) }), null, 16),
                          ])
                        : y.$props.icon
                          ? (C(), ee(f(Ke), { key: 2, name: y.$props.icon }, null, 8, ['name']))
                          : L(y.$slots, 'fallback', { key: 3 }, () => [
                              ne(
                                f(Nr),
                                le(f(_), { onFallback: b[1] || (b[1] = (w) => y.$emit('fallback')) }),
                                null,
                                16,
                              ),
                            ]),
                  ]),
            ],
            6,
          )
        )
      )
    },
  }),
  Ql = ye(d$),
  Vm = Qe(Ql),
  m$ = re({
    name: 'VaAvatarGroup',
    __name: 'VaAvatarGroup',
    props: {
      ...dr,
      ...Le,
      ...Vm,
      max: { type: [Number, String], default: 0 },
      vertical: { type: Boolean, default: !1 },
      options: { type: Array, default: () => [] },
      restColor: { type: String, default: 'secondary' },
    },
    setup(e) {
      const t = e,
        n = We('max'),
        o = rt('va-avatar-group', () => ({ ...yt(t, ['vertical']) })),
        r = p(() => (n.value && n.value <= t.options.length ? t.options.slice(0, n.value) : t.options)),
        a = p(() => {
          const c = t.options.length > 0,
            d = r.value.length < t.options.length,
            m = t.options.length - (n.value || 0)
          return c && d ? m : 0
        }),
        { sizeComputed: l, fontSizeComputed: s } = mr(t, 'VaAvatarGroup'),
        i = it(Vm),
        u = p(() => ({ ...i.value, fontSize: s.value, size: l.value }))
      return (c, d) => (
        C(),
        A(
          'div',
          { class: Pe(['va-avatar-group', f(o)]), role: 'list' },
          [
            (C(!0),
            A(
              Te,
              null,
              Ue(
                r.value,
                (m, v) => (C(), ee(f(Ql), le({ key: v }, { ...u.value, ...m }, { role: 'listitem' }), null, 16)),
              ),
              128,
            )),
            a.value > 0
              ? L(c.$slots, 'rest', pe(le({ key: 0 }, u.value)), () => [
                  ne(
                    f(Ql),
                    le(u.value, { color: e.restColor, class: 'va-avatar-group__rest', role: 'listitem' }),
                    { default: G(() => [Fe(' +' + Ae(a.value), 1)]), _: 1 },
                    16,
                    ['color'],
                  ),
                ])
              : W('', !0),
          ],
          2,
        )
      )
    },
  }),
  f$ = ye(m$),
  p$ = ['aria-label', 'onKeydown'],
  v$ = re({
    name: 'VaBacktop',
    __name: 'VaBacktop',
    props: {
      ...Le,
      target: { type: [Object, String], default: void 0 },
      visibilityHeight: { type: [Number, String], default: 300 },
      speed: { type: [Number, String], default: 50 },
      verticalOffset: { type: String, default: '1rem' },
      horizontalOffset: { type: String, default: '1rem' },
      color: { type: String, default: '' },
      horizontalPosition: { type: String, default: 'right', validator: (e) => ['right', 'left'].includes(e) },
      verticalPosition: { type: String, default: 'bottom', validator: (e) => ['bottom', 'top'].includes(e) },
      ariaLabel: Be('$t:backToTop'),
    },
    setup(e) {
      const t = e,
        n = H(0),
        o = p(() => ({ [t.verticalPosition]: t.verticalOffset, [t.horizontalPosition]: t.horizontalOffset }))
      let r
      const a = We('visibilityHeight'),
        l = We('speed'),
        s = () => {
          if (!t.target) return window
          if (typeof t.target == 'string') {
            const h = document.querySelector(t.target)
            return h || (ot(`Target element [${t.target}] is not found, falling back to window.`), window)
          }
          return t.target
        },
        i = H(!1),
        u = H(0),
        c = () => {
          if (!i.value) {
            if (((i.value = !0), r instanceof Window)) {
              window.scrollTo({ top: 0, behavior: 'smooth' })
              return
            }
            u.value = window.setInterval(() => {
              if (r instanceof Element)
                if (r.scrollTop === 0) clearInterval(u.value), (i.value = !1)
                else {
                  const h = Math.floor(r.scrollTop - l.value)
                  r.scrollTo(0, h)
                }
            }, 15)
          }
        },
        d = () => {
          n.value = r instanceof Window ? r.scrollY : r.scrollTop
        },
        m = pr(),
        v = p(() => (m ? !1 : n.value > a.value))
      m ||
        (et(() => {
          ;(r = s()), r.addEventListener('scroll', d, !0)
        }),
        wt(() => (r == null ? void 0 : r.removeEventListener('scroll', d))))
      const { tp: g } = ut()
      return (h, _) =>
        v.value
          ? (C(),
            A(
              'div',
              {
                key: 0,
                class: 'va-backtop',
                role: 'button',
                'aria-label': f(g)(h.$props.ariaLabel),
                tabindex: '1',
                style: me(o.value),
                onClick: c,
                onKeydown: $e(Se(c, ['stop']), ['enter']),
              },
              [
                L(h.$slots, 'default', {}, () => [
                  ne(f(Xe), { 'aria-hidden': 'true', icon: 'va-arrow-up', color: e.color }, null, 8, ['color']),
                ]),
              ],
              44,
              p$,
            ))
          : W('', !0)
    },
  }),
  g$ = ye(v$),
  mh = ['top', 'bottom'],
  fh = ['left', 'right'],
  h$ = [...mh, ...fh],
  y$ = ['start', 'end', 'center'],
  _$ = h$.reduce((e, t) => (e.push(t), y$.forEach((n) => e.push(`${t}-${n}`)), e), ['auto']),
  b$ = mh.reduce(
    (e, t) => (
      fh.forEach((n) => {
        e.push(`${t}-${n}`), e.push(`${n}-${t}`)
      }),
      e
    ),
    [],
  ),
  ph = [..._$, ...b$],
  z$ = {
    'top-left': 'top-start',
    'left-top': 'top-start',
    'top-right': 'top-end',
    'right-top': 'top-end',
    'bottom-left': 'bottom-start',
    'left-bottom': 'bottom-start',
    'bottom-right': 'bottom-end',
    'right-bottom': 'bottom-end',
  },
  vh = { placement: { type: String, default: 'auto', validator: (e) => ph.includes(e) } },
  gh = (e) => {
    const t = p(() => (z$[e.placement] || e.placement).split('-')),
      n = p(() => {
        const r = t.value[0]
        return r === 'auto' ? 'bottom' : r
      }),
      o = p(() => t.value[1] || 'center')
    return { position: n, align: o }
  },
  hh = () => {
    const e = (o) => (typeof o == 'string' ? !isNaN(+o) || o.endsWith('px') || o.endsWith('rem') : !1)
    return {
      isParsableMeasure: e,
      isParsablePositiveMeasure: (o) => (typeof o == 'number' ? o >= 0 : e(o) && parseInt(o) >= 0),
      parseSizeValue: (o, r = 16) => {
        const a = f(o)
        if (typeof a == 'string') {
          const l = parseInt(a)
          return isNaN(l) ? 0 : a.endsWith('rem') ? l * f(r) : l
        }
        return a
      },
    }
  },
  { isParsableMeasure: Pm, parseSizeValue: Am } = hh(),
  C$ = {
    overlap: { type: Boolean, default: !1 },
    placement: { type: String, default: 'top-end', validator: (e) => ph.includes(e) },
    offset: {
      type: [Number, String, Array],
      default: 0,
      validator: (e) => (Array.isArray(e) ? e.every(Pm) : typeof e == 'string' ? Pm(e) : !isNaN(e)),
    },
  },
  S$ = (e, t) => {
    if (!t.value) return {}
    const { position: n, align: o } = gh(e),
      r = p(() => ({ start: e.overlap ? '-50%' : '-100%', center: '-50%', end: e.overlap ? '-50%' : '0%' })[o.value]),
      a = p(() => {
        if (!e.offset) return {}
        const i = ['left', 'right'].includes(n.value) ? 'top' : 'left',
          u = i === 'top' ? 'left' : 'top'
        if (Array.isArray(e.offset)) {
          const [d, m] = e.offset.map(Am)
          return { [`margin-${i}`]: `${d}px`, [`margin-${u}`]: `${m}px` }
        }
        const c = Am(e.offset)
        return { [`margin-${u}`]: `${c}px` }
      }),
      l = p(() => {
        const i = ['left', 'right'].includes(n.value) ? 'top' : 'left',
          u = i === 'top' ? 'left' : 'top'
        let c = '0%'
        return (
          u === 'top' && n.value === 'bottom' && (c = '100%'),
          u === 'left' && n.value === 'right' && (c = '100%'),
          { start: { [i]: '0%', [u]: c }, center: { [i]: '50%', [u]: c }, end: { [i]: '100%', [u]: c } }[o.value]
        )
      }),
      s = p(() => {
        const i = {
            top: { x: r.value, y: e.overlap ? '-50%' : '-100%' },
            bottom: { x: r.value, y: e.overlap ? '-50%' : '0%' },
            left: { x: e.overlap ? '-50%' : '-100%', y: r.value },
            right: { x: e.overlap ? '-50%' : '0%', y: r.value },
          },
          { x: u, y: c } = i[n.value]
        return { transform: `translate(${u}, ${c})` }
      })
    return p(() => ({ ...l.value, ...s.value, ...a.value }))
  },
  w$ = { props: 'prop', attrs: 'prop', slots: 'slot' },
  $$ = (e, t = ['props', 'attrs']) => {
    if (!Kr) return
    const n = ct()
    if (!n) throw new Error('`useDeprecated` hook must be used only inside of setup function!')
    const o = n.type.name,
      r = f(e)
    t.every((a) => {
      var l
      const s = w$[a],
        i = (u) => console.warn(`The '${u}' ${s} (${o} component) is deprecated! Please, check the documentation.`)
      if (a === 'props') {
        const u = ((l = n.propsOptions) == null ? void 0 : l[0]) || {},
          c = n.props || {}
        return (
          r.forEach((d) => {
            u[d] && c[d] !== u[d].default && i(d)
          }),
          !0
        )
      }
      return (
        Object.keys({ ...n[a] }).forEach((u) => {
          r.includes(u) && i(u)
        }),
        !0
      )
    })
  },
  k$ = ['aria-labelledby'],
  T$ = { class: 'va-badge__text' },
  V$ = re({
    name: 'VaBadge',
    __name: 'VaBadge',
    props: {
      ...Le,
      ...C$,
      color: { type: String, default: 'danger' },
      textColor: { type: String },
      text: { type: [String, Number], default: '' },
      multiLine: { type: Boolean, default: !1 },
      visibleEmpty: { type: Boolean, default: !1 },
      dot: { type: Boolean, default: !1 },
      transparent: { type: Boolean, default: !1 },
    },
    setup(e) {
      const t = e
      $$(['transparent'])
      const n = Zt(),
        o = p(() => !(t.text || t.visibleEmpty || t.dot || n.text)),
        r = p(() => !!(n.default || t.dot)),
        a = rt('va-badge', () => ({
          ...yt(t, ['visibleEmpty', 'dot', 'multiLine']),
          empty: o.value,
          floating: r.value,
        })),
        { getColor: l } = Re(),
        s = p(() => l(t.color)),
        { textColorComputed: i } = Vt(s),
        u = S$(t, r),
        c = p(() => ({
          color: i.value,
          borderColor: s.value,
          backgroundColor: s.value,
          opacity: t.transparent ? 0.5 : 1,
          ...f(u),
        })),
        d = p(() => (t.text ? String(t.text) : void 0))
      return (m, v) => (
        C(),
        A(
          'div',
          { class: Pe(['va-badge', f(a)]), role: 'status', 'aria-labelledby': d.value },
          [
            Y(
              'span',
              { class: 'va-badge__text-wrapper', style: me(c.value) },
              [Y('span', T$, [L(m.$slots, 'text', {}, () => [Fe(Ae(e.text), 1)])])],
              4,
            ),
            L(m.$slots, 'default'),
          ],
          10,
          k$,
        )
      )
    },
  }),
  yh = ye(V$),
  Em = (e, t) => Object.prototype.hasOwnProperty.call(e, t),
  Im = (e) => (e && typeof e == 'function' ? e() : e),
  _h = { align: { type: String, default: 'left' }, vertical: { type: Boolean, default: !1 } },
  P$ = { left: 'flex-start', center: 'center', right: 'flex-end', between: 'space-between', around: 'space-around' },
  A$ = { left: 'flex-start', center: 'center', right: 'flex-end', stretch: 'stretch' },
  E$ = (e, t) => (t ? 'center' : e ? P$[e] : 'flex-start'),
  I$ = (e, t) => (t ? A$[e] : 'center')
function bh(e) {
  return {
    alignComputed: p(() => ({
      display: 'flex',
      flexDirection: e.vertical ? 'column' : 'row',
      justifyContent: E$(e.align, e.vertical),
      alignItems: I$(e.align, e.vertical),
    })),
  }
}
const x$ = re({
    name: 'VaBreadcrumbs',
    props: {
      ..._h,
      ...Le,
      separator: { type: String, default: '/' },
      color: { type: String, default: null },
      disabledColor: { type: String, default: 'secondary' },
      activeColor: { type: String, default: null },
      separatorColor: { type: String, default: null },
      ariaLabel: Be('$t:breadcrumbs'),
    },
    setup(e, { slots: t }) {
      const { alignComputed: n } = bh(e),
        { getColor: o } = Re(),
        r = p(() => (e.separatorColor ? o(e.separatorColor) : null)),
        a = p(() => (e.color ? o(e.color) : null)),
        l = p(() => (e.activeColor ? o(e.activeColor) : null)),
        s = (v, g) => {
          const h = g && g.type === Te && g.children ? g.children : [g]
          return [
            ...v,
            ...h.filter((_) => {
              var y, b
              return !!(
                (b = (y = _ == null ? void 0 : _.type) == null ? void 0 : y.name) != null &&
                b.match(/VaBreadcrumbsItem$/)
              )
            }),
          ]
        },
        i = () => {
          const v = Im(t.separator) || [e.separator]
          return Ze('span', { 'aria-hidden': !0, class: ['va-breadcrumbs__separator'], style: [{ color: r.value }] }, v)
        },
        u = (v) => {
          const g = v == null ? void 0 : v.props
          return !g || !Em(g, 'disabled') ? !1 : g.disabled === '' ? !0 : !!g.disabled
        },
        c = H(!0),
        d = () => {
          const v = Im(t.default)
          if (!v) return
          const g = v.reduce(s, []) || [],
            h = g.length,
            _ = (S) => S === h - 1,
            y = (S) => {
              const $ = S == null ? void 0 : S.props
              return !$ || !Em($, 'to') ? !1 : !!($.to && !$.disabled)
            },
            b = (S, $) =>
              Ze(
                'span',
                {
                  class: ['va-breadcrumbs__item', { 'va-breadcrumbs__item--disabled': u(S) }],
                  'aria-current': _($) && y(S) ? 'location' : !1,
                  style: { color: u(S) ? o(e.disabledColor) : _($) ? l.value : a.value },
                },
                [S],
              ),
            w = []
          return (
            h &&
              g.forEach((S, $) => {
                c.value && !y(S) && (c.value = !1), w.push(b(S, $)), _($) || w.push(i())
              }),
            w
          )
        },
        { tp: m } = ut()
      return () =>
        Ze(
          'div',
          {
            class: 'va-breadcrumbs',
            style: n.value,
            role: c.value ? 'navigation' : void 0,
            'aria-label': c.value ? m(e.ariaLabel) : void 0,
          },
          d(),
        )
    },
  }),
  O$ = re({
    name: 'VaBreadcrumbsItem',
    __name: 'VaBreadcrumbsItem',
    props: { ...gr, disabled: { type: Boolean, default: !1 }, label: { type: String, default: '' } },
    setup(e) {
      const t = e,
        { tagComputed: n, hrefComputed: o, isLinkTag: r } = No(t),
        a = p(() => ({ 'va-breadcrumb-item--link': r.value }))
      return (l, s) => (
        C(),
        ee(
          an(f(n)),
          {
            class: Pe(['va-breadcrumb-item', a.value]),
            'active-class': l.$props.activeClass,
            href: f(o),
            to: l.$props.to,
            target: l.$props.target,
            replace: l.$props.replace,
            append: l.$props.append,
            exact: l.$props.exact,
            'exact-active-class': l.$props.exactActiveClass,
          },
          { default: G(() => [L(l.$slots, 'default', {}, () => [Fe(Ae(e.label), 1)])]), _: 3 },
          8,
          ['class', 'active-class', 'href', 'to', 'target', 'replace', 'append', 'exact', 'exact-active-class'],
        )
      )
    },
  }),
  L$ = ye(O$),
  B$ = ye(x$),
  xm = Rn(Qe(Xe), ['block', 'gradient']),
  N$ = re({
    name: 'VaButtonGroup',
    __name: 'VaButtonGroup',
    props: { ...xm, ...Le, grow: { type: Boolean, default: !1 }, gradient: { type: Boolean, default: !1 } },
    setup(e) {
      const t = e,
        { getColor: n, getGradientBackground: o } = Re(),
        r = p(() => n(t.color)),
        { textColorComputed: a } = Vt(r),
        l = it(xm),
        s = p(() => ({ VaButton: { ...l.value, ...(t.gradient && { color: '#00000000', textColor: a.value }) } })),
        i = rt('va-button-group', () => ({
          square: !t.round,
          grow: t.grow,
          small: t.size === 'small',
          large: t.size === 'large',
        })),
        u = p(() => (t.gradient ? o(r.value) : 'transparent'))
      return (c, d) => (
        C(),
        A(
          'div',
          { class: Pe(['va-button-group', f(i)]), style: me(`--va-background-color: ${String(u.value)}`) },
          [ne(f(Ya), { components: s.value }, { default: G(() => [L(c.$slots, 'default')]), _: 3 }, 8, ['components'])],
          6,
        )
      )
    },
  }),
  As = ye(N$),
  fc = (e, t) => {
    let n = null
    const o = function (...r) {
      n && clearTimeout(n),
        (n = setTimeout(() => {
          ;(n = null), e.apply(this, r)
        }, t))
    }
    return (
      (o.cancel = () => {
        n && clearTimeout(n), (n = null)
      }),
      o
    )
  },
  Om = (e) => {
    let t = null
    const n = () =>
      fc(() => {
        t == null || t(), (t = null)
      }, f(e))
    let o = n()
    return (
      nt(e) &&
        ge(e, () => {
          o = n()
        }),
      {
        debounced: (r) => {
          ;(t = r), o()
        },
        cancel: () => o.cancel(),
      }
    )
  },
  Lm = (e) => {
    const t = e.target
    return !(!(t.tagName === 'INPUT' || t.tagName === 'TEXTAREA') || t.attributes.getNamedItem('readonly'))
  },
  R$ = (e) => Array.isArray(e),
  D$ = (e, t, n, o) => {
    const r = (d) => (
        (d = d.replace(/-/g, '').toLowerCase()), d === 'space' ? ' ' : d === 'rightclick' ? 'contextmenu' : d
      ),
      a = p(() => (R$(o.trigger) ? o.trigger.map((d) => r(d)) : [r(o.trigger)]))
    ft(
      'keydown',
      (d) => {
        o.disabled ||
          (d.key === 'Escape' && e.value && ((e.value = !1), d.preventDefault()),
          !Lm(d) && a.value.includes(r(d.key)) && ((e.value = !e.value), d.preventDefault()))
      },
      t,
    ),
      ft(
        'keydown',
        (d) => {
          o.disabled || (d.key === 'Escape' && e.value && ((e.value = !1), d.preventDefault()))
        },
        n,
      ),
      ft(
        ['click', 'contextmenu', 'dblclick'],
        (d) => {
          o.disabled ||
            Lm(d) ||
            (a.value.includes(r(d.type)) &&
              (d.preventDefault(),
              e.value && o.closeOnAnchorClick
                ? ((e.value = !1),
                  o.cursor &&
                    setTimeout(() => {
                      e.value = !0
                    }, 16))
                : (e.value = !0)))
        },
        t,
      ),
      ft(
        ['click', 'contextmenu', 'dblclick'],
        (d) => {
          o.closeOnContentClick && (e.value = !1)
        },
        n,
      )
    const { debounced: l, cancel: s } = Om(We('hoverOverTimeout')),
      { debounced: i, cancel: u } = Om(We('hoverOutTimeout')),
      c = (d) => {
        if (!o.disabled && a.value.includes('hover'))
          if (d.type === 'mouseleave') {
            if ((s(), !o.isContentHoverable)) {
              e.value = !1
              return
            }
            i(() => {
              e.value = !1
            })
          } else
            u(),
              l(() => {
                e.value = !0
              })
      }
    ft(['mouseleave', 'mouseenter'], c, t), ft(['mouseleave', 'mouseenter'], c, n)
  },
  M$ = (e) => {
    const t = H(),
      n = vr(),
      o = Xa()
    return {
      anchorRef: p({
        set(a) {
          t.value = St(a)
        },
        get() {
          var a, l, s
          return (
            o.value,
            typeof e.anchor == 'string'
              ? ((a = n.value) == null ? void 0 : a.querySelector(e.anchor)) ?? t.value
              : typeof e.anchor == 'object'
                ? e.anchor
                : e.anchorSelector
                  ? ((l = n.value) == null ? void 0 : l.querySelector(e.anchorSelector)) ?? t.value
                  : e.innerAnchorSelector && t.value
                    ? ((s = t.value) == null ? void 0 : s.querySelector(e.innerAnchorSelector)) ?? t.value
                    : t.value
          )
        },
      }),
    }
  },
  F$ = (e, t) => {
    const n = on({ x: 0, y: 0 })
    return (
      ft(
        ['mousemove', 'mousedown', 'mouseup'],
        (o) => {
          var r
          if (!t.value) return
          const { x: a, y: l } = ((r = e.value) == null ? void 0 : r.getBoundingClientRect()) ?? { x: 0, y: 0 }
          ;(n.x = o.clientX - a), (n.y = o.clientY - l)
        },
        e,
      ),
      p(() => ({
        getBoundingClientRect() {
          var o
          const { x: r, y: a } = ((o = e.value) == null ? void 0 : o.getBoundingClientRect()) ?? { x: 0, y: 0 },
            l = n.x + r,
            s = n.y + a
          return { width: 0, height: 0, x: l, y: s, top: s, right: l, bottom: s, left: l }
        },
        contextElement: e.value,
      }))
    )
  },
  Rr = Math.min,
  dn = Math.max,
  Zl = Math.round,
  Cl = Math.floor,
  To = (e) => ({ x: e, y: e }),
  j$ = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' },
  H$ = { start: 'end', end: 'start' }
function Bm(e, t, n) {
  return dn(e, Rr(t, n))
}
function Za(e, t) {
  return typeof e == 'function' ? e(t) : e
}
function Vo(e) {
  return e.split('-')[0]
}
function el(e) {
  return e.split('-')[1]
}
function zh(e) {
  return e === 'x' ? 'y' : 'x'
}
function Ch(e) {
  return e === 'y' ? 'height' : 'width'
}
function tl(e) {
  return ['top', 'bottom'].includes(Vo(e)) ? 'y' : 'x'
}
function Sh(e) {
  return zh(tl(e))
}
function U$(e, t, n) {
  n === void 0 && (n = !1)
  const o = el(e),
    r = Sh(e),
    a = Ch(r)
  let l = r === 'x' ? (o === (n ? 'end' : 'start') ? 'right' : 'left') : o === 'start' ? 'bottom' : 'top'
  return t.reference[a] > t.floating[a] && (l = es(l)), [l, es(l)]
}
function W$(e) {
  const t = es(e)
  return [cu(e), t, cu(t)]
}
function cu(e) {
  return e.replace(/start|end/g, (t) => H$[t])
}
function G$(e, t, n) {
  const o = ['left', 'right'],
    r = ['right', 'left'],
    a = ['top', 'bottom'],
    l = ['bottom', 'top']
  switch (e) {
    case 'top':
    case 'bottom':
      return n ? (t ? r : o) : t ? o : r
    case 'left':
    case 'right':
      return t ? a : l
    default:
      return []
  }
}
function K$(e, t, n, o) {
  const r = el(e)
  let a = G$(Vo(e), n === 'start', o)
  return r && ((a = a.map((l) => l + '-' + r)), t && (a = a.concat(a.map(cu)))), a
}
function es(e) {
  return e.replace(/left|right|bottom|top/g, (t) => j$[t])
}
function q$(e) {
  return { top: 0, right: 0, bottom: 0, left: 0, ...e }
}
function Y$(e) {
  return typeof e != 'number' ? q$(e) : { top: e, right: e, bottom: e, left: e }
}
function ts(e) {
  return { ...e, top: e.y, left: e.x, right: e.x + e.width, bottom: e.y + e.height }
}
function Nm(e, t, n) {
  let { reference: o, floating: r } = e
  const a = tl(t),
    l = Sh(t),
    s = Ch(l),
    i = Vo(t),
    u = a === 'y',
    c = o.x + o.width / 2 - r.width / 2,
    d = o.y + o.height / 2 - r.height / 2,
    m = o[s] / 2 - r[s] / 2
  let v
  switch (i) {
    case 'top':
      v = { x: c, y: o.y - r.height }
      break
    case 'bottom':
      v = { x: c, y: o.y + o.height }
      break
    case 'right':
      v = { x: o.x + o.width, y: d }
      break
    case 'left':
      v = { x: o.x - r.width, y: d }
      break
    default:
      v = { x: o.x, y: o.y }
  }
  switch (el(t)) {
    case 'start':
      v[l] -= m * (n && u ? -1 : 1)
      break
    case 'end':
      v[l] += m * (n && u ? -1 : 1)
      break
  }
  return v
}
const X$ = async (e, t, n) => {
  const { placement: o = 'bottom', strategy: r = 'absolute', middleware: a = [], platform: l } = n,
    s = a.filter(Boolean),
    i = await (l.isRTL == null ? void 0 : l.isRTL(t))
  let u = await l.getElementRects({ reference: e, floating: t, strategy: r }),
    { x: c, y: d } = Nm(u, o, i),
    m = o,
    v = {},
    g = 0
  for (let h = 0; h < s.length; h++) {
    const { name: _, fn: y } = s[h],
      {
        x: b,
        y: w,
        data: S,
        reset: $,
      } = await y({
        x: c,
        y: d,
        initialPlacement: o,
        placement: m,
        strategy: r,
        middlewareData: v,
        rects: u,
        platform: l,
        elements: { reference: e, floating: t },
      })
    if (((c = b ?? c), (d = w ?? d), (v = { ...v, [_]: { ...v[_], ...S } }), $ && g <= 50)) {
      g++,
        typeof $ == 'object' &&
          ($.placement && (m = $.placement),
          $.rects &&
            (u = $.rects === !0 ? await l.getElementRects({ reference: e, floating: t, strategy: r }) : $.rects),
          ({ x: c, y: d } = Nm(u, m, i))),
        (h = -1)
      continue
    }
  }
  return { x: c, y: d, placement: m, strategy: r, middlewareData: v }
}
async function pc(e, t) {
  var n
  t === void 0 && (t = {})
  const { x: o, y: r, platform: a, rects: l, elements: s, strategy: i } = e,
    {
      boundary: u = 'clippingAncestors',
      rootBoundary: c = 'viewport',
      elementContext: d = 'floating',
      altBoundary: m = !1,
      padding: v = 0,
    } = Za(t, e),
    g = Y$(v),
    _ = s[m ? (d === 'floating' ? 'reference' : 'floating') : d],
    y = ts(
      await a.getClippingRect({
        element:
          (n = await (a.isElement == null ? void 0 : a.isElement(_))) == null || n
            ? _
            : _.contextElement || (await (a.getDocumentElement == null ? void 0 : a.getDocumentElement(s.floating))),
        boundary: u,
        rootBoundary: c,
        strategy: i,
      }),
    ),
    b = d === 'floating' ? { ...l.floating, x: o, y: r } : l.reference,
    w = await (a.getOffsetParent == null ? void 0 : a.getOffsetParent(s.floating)),
    S = (await (a.isElement == null ? void 0 : a.isElement(w)))
      ? (await (a.getScale == null ? void 0 : a.getScale(w))) || { x: 1, y: 1 }
      : { x: 1, y: 1 },
    $ = ts(
      a.convertOffsetParentRelativeRectToViewportRelativeRect
        ? await a.convertOffsetParentRelativeRectToViewportRelativeRect({ rect: b, offsetParent: w, strategy: i })
        : b,
    )
  return {
    top: (y.top - $.top + g.top) / S.y,
    bottom: ($.bottom - y.bottom + g.bottom) / S.y,
    left: (y.left - $.left + g.left) / S.x,
    right: ($.right - y.right + g.right) / S.x,
  }
}
const J$ = function (e) {
  return (
    e === void 0 && (e = {}),
    {
      name: 'flip',
      options: e,
      async fn(t) {
        var n, o
        const { placement: r, middlewareData: a, rects: l, initialPlacement: s, platform: i, elements: u } = t,
          {
            mainAxis: c = !0,
            crossAxis: d = !0,
            fallbackPlacements: m,
            fallbackStrategy: v = 'bestFit',
            fallbackAxisSideDirection: g = 'none',
            flipAlignment: h = !0,
            ..._
          } = Za(e, t)
        if ((n = a.arrow) != null && n.alignmentOffset) return {}
        const y = Vo(r),
          b = Vo(s) === s,
          w = await (i.isRTL == null ? void 0 : i.isRTL(u.floating)),
          S = m || (b || !h ? [es(s)] : W$(s))
        !m && g !== 'none' && S.push(...K$(s, h, g, w))
        const $ = [s, ...S],
          k = await pc(t, _),
          z = []
        let V = ((o = a.flip) == null ? void 0 : o.overflows) || []
        if ((c && z.push(k[y]), d)) {
          const j = U$(r, l, w)
          z.push(k[j[0]], k[j[1]])
        }
        if (((V = [...V, { placement: r, overflows: z }]), !z.every((j) => j <= 0))) {
          var T, B
          const j = (((T = a.flip) == null ? void 0 : T.index) || 0) + 1,
            U = $[j]
          if (U) return { data: { index: j, overflows: V }, reset: { placement: U } }
          let D =
            (B = V.filter((O) => O.overflows[0] <= 0).sort((O, R) => O.overflows[1] - R.overflows[1])[0]) == null
              ? void 0
              : B.placement
          if (!D)
            switch (v) {
              case 'bestFit': {
                var K
                const O =
                  (K = V.map((R) => [R.placement, R.overflows.filter((N) => N > 0).reduce((N, x) => N + x, 0)]).sort(
                    (R, N) => R[1] - N[1],
                  )[0]) == null
                    ? void 0
                    : K[0]
                O && (D = O)
                break
              }
              case 'initialPlacement':
                D = s
                break
            }
          if (r !== D) return { reset: { placement: D } }
        }
        return {}
      },
    }
  )
}
async function Q$(e, t) {
  const { placement: n, platform: o, elements: r } = e,
    a = await (o.isRTL == null ? void 0 : o.isRTL(r.floating)),
    l = Vo(n),
    s = el(n),
    i = tl(n) === 'y',
    u = ['left', 'top'].includes(l) ? -1 : 1,
    c = a && i ? -1 : 1,
    d = Za(t, e)
  let {
    mainAxis: m,
    crossAxis: v,
    alignmentAxis: g,
  } = typeof d == 'number'
    ? { mainAxis: d, crossAxis: 0, alignmentAxis: null }
    : { mainAxis: 0, crossAxis: 0, alignmentAxis: null, ...d }
  return (
    s && typeof g == 'number' && (v = s === 'end' ? g * -1 : g), i ? { x: v * c, y: m * u } : { x: m * u, y: v * c }
  )
}
const Z$ = function (e) {
    return (
      e === void 0 && (e = 0),
      {
        name: 'offset',
        options: e,
        async fn(t) {
          const { x: n, y: o } = t,
            r = await Q$(t, e)
          return { x: n + r.x, y: o + r.y, data: r }
        },
      }
    )
  },
  ek = function (e) {
    return (
      e === void 0 && (e = {}),
      {
        name: 'shift',
        options: e,
        async fn(t) {
          const { x: n, y: o, placement: r } = t,
            {
              mainAxis: a = !0,
              crossAxis: l = !1,
              limiter: s = {
                fn: (_) => {
                  let { x: y, y: b } = _
                  return { x: y, y: b }
                },
              },
              ...i
            } = Za(e, t),
            u = { x: n, y: o },
            c = await pc(t, i),
            d = tl(Vo(r)),
            m = zh(d)
          let v = u[m],
            g = u[d]
          if (a) {
            const _ = m === 'y' ? 'top' : 'left',
              y = m === 'y' ? 'bottom' : 'right',
              b = v + c[_],
              w = v - c[y]
            v = Bm(b, v, w)
          }
          if (l) {
            const _ = d === 'y' ? 'top' : 'left',
              y = d === 'y' ? 'bottom' : 'right',
              b = g + c[_],
              w = g - c[y]
            g = Bm(b, g, w)
          }
          const h = s.fn({ ...t, [m]: v, [d]: g })
          return { ...h, data: { x: h.x - n, y: h.y - o } }
        },
      }
    )
  },
  tk = function (e) {
    return (
      e === void 0 && (e = {}),
      {
        name: 'size',
        options: e,
        async fn(t) {
          const { placement: n, rects: o, platform: r, elements: a } = t,
            { apply: l = () => {}, ...s } = Za(e, t),
            i = await pc(t, s),
            u = Vo(n),
            c = el(n),
            d = tl(n) === 'y',
            { width: m, height: v } = o.floating
          let g, h
          u === 'top' || u === 'bottom'
            ? ((g = u),
              (h =
                c === ((await (r.isRTL == null ? void 0 : r.isRTL(a.floating))) ? 'start' : 'end') ? 'left' : 'right'))
            : ((h = u), (g = c === 'end' ? 'top' : 'bottom'))
          const _ = v - i[g],
            y = m - i[h],
            b = !t.middlewareData.shift
          let w = _,
            S = y
          if (d) {
            const k = m - i.left - i.right
            S = c || b ? Rr(y, k) : k
          } else {
            const k = v - i.top - i.bottom
            w = c || b ? Rr(_, k) : k
          }
          if (b && !c) {
            const k = dn(i.left, 0),
              z = dn(i.right, 0),
              V = dn(i.top, 0),
              T = dn(i.bottom, 0)
            d
              ? (S = m - 2 * (k !== 0 || z !== 0 ? k + z : dn(i.left, i.right)))
              : (w = v - 2 * (V !== 0 || T !== 0 ? V + T : dn(i.top, i.bottom)))
          }
          await l({ ...t, availableWidth: S, availableHeight: w })
          const $ = await r.getDimensions(a.floating)
          return m !== $.width || v !== $.height ? { reset: { rects: !0 } } : {}
        },
      }
    )
  }
function Po(e) {
  return wh(e) ? (e.nodeName || '').toLowerCase() : '#document'
}
function mn(e) {
  var t
  return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window
}
function so(e) {
  var t
  return (t = (wh(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement
}
function wh(e) {
  return e instanceof Node || e instanceof mn(e).Node
}
function eo(e) {
  return e instanceof Element || e instanceof mn(e).Element
}
function Dn(e) {
  return e instanceof HTMLElement || e instanceof mn(e).HTMLElement
}
function Rm(e) {
  return typeof ShadowRoot > 'u' ? !1 : e instanceof ShadowRoot || e instanceof mn(e).ShadowRoot
}
function nl(e) {
  const { overflow: t, overflowX: n, overflowY: o, display: r } = Cn(e)
  return /auto|scroll|overlay|hidden|clip/.test(t + o + n) && !['inline', 'contents'].includes(r)
}
function nk(e) {
  return ['table', 'td', 'th'].includes(Po(e))
}
function vc(e) {
  const t = gc(),
    n = Cn(e)
  return (
    n.transform !== 'none' ||
    n.perspective !== 'none' ||
    (n.containerType ? n.containerType !== 'normal' : !1) ||
    (!t && (n.backdropFilter ? n.backdropFilter !== 'none' : !1)) ||
    (!t && (n.filter ? n.filter !== 'none' : !1)) ||
    ['transform', 'perspective', 'filter'].some((o) => (n.willChange || '').includes(o)) ||
    ['paint', 'layout', 'strict', 'content'].some((o) => (n.contain || '').includes(o))
  )
}
function ok(e) {
  let t = Dr(e)
  for (; Dn(t) && !Es(t); ) {
    if (vc(t)) return t
    t = Dr(t)
  }
  return null
}
function gc() {
  return typeof CSS > 'u' || !CSS.supports ? !1 : CSS.supports('-webkit-backdrop-filter', 'none')
}
function Es(e) {
  return ['html', 'body', '#document'].includes(Po(e))
}
function Cn(e) {
  return mn(e).getComputedStyle(e)
}
function Is(e) {
  return eo(e)
    ? { scrollLeft: e.scrollLeft, scrollTop: e.scrollTop }
    : { scrollLeft: e.pageXOffset, scrollTop: e.pageYOffset }
}
function Dr(e) {
  if (Po(e) === 'html') return e
  const t = e.assignedSlot || e.parentNode || (Rm(e) && e.host) || so(e)
  return Rm(t) ? t.host : t
}
function $h(e) {
  const t = Dr(e)
  return Es(t) ? (e.ownerDocument ? e.ownerDocument.body : e.body) : Dn(t) && nl(t) ? t : $h(t)
}
function Da(e, t, n) {
  var o
  t === void 0 && (t = []), n === void 0 && (n = !0)
  const r = $h(e),
    a = r === ((o = e.ownerDocument) == null ? void 0 : o.body),
    l = mn(r)
  return a
    ? t.concat(l, l.visualViewport || [], nl(r) ? r : [], l.frameElement && n ? Da(l.frameElement) : [])
    : t.concat(r, Da(r, [], n))
}
function kh(e) {
  const t = Cn(e)
  let n = parseFloat(t.width) || 0,
    o = parseFloat(t.height) || 0
  const r = Dn(e),
    a = r ? e.offsetWidth : n,
    l = r ? e.offsetHeight : o,
    s = Zl(n) !== a || Zl(o) !== l
  return s && ((n = a), (o = l)), { width: n, height: o, $: s }
}
function hc(e) {
  return eo(e) ? e : e.contextElement
}
function Er(e) {
  const t = hc(e)
  if (!Dn(t)) return To(1)
  const n = t.getBoundingClientRect(),
    { width: o, height: r, $: a } = kh(t)
  let l = (a ? Zl(n.width) : n.width) / o,
    s = (a ? Zl(n.height) : n.height) / r
  return (!l || !Number.isFinite(l)) && (l = 1), (!s || !Number.isFinite(s)) && (s = 1), { x: l, y: s }
}
const rk = To(0)
function Th(e) {
  const t = mn(e)
  return !gc() || !t.visualViewport ? rk : { x: t.visualViewport.offsetLeft, y: t.visualViewport.offsetTop }
}
function ak(e, t, n) {
  return t === void 0 && (t = !1), !n || (t && n !== mn(e)) ? !1 : t
}
function sr(e, t, n, o) {
  t === void 0 && (t = !1), n === void 0 && (n = !1)
  const r = e.getBoundingClientRect(),
    a = hc(e)
  let l = To(1)
  t && (o ? eo(o) && (l = Er(o)) : (l = Er(e)))
  const s = ak(a, n, o) ? Th(a) : To(0)
  let i = (r.left + s.x) / l.x,
    u = (r.top + s.y) / l.y,
    c = r.width / l.x,
    d = r.height / l.y
  if (a) {
    const m = mn(a),
      v = o && eo(o) ? mn(o) : o
    let g = m.frameElement
    for (; g && o && v !== m; ) {
      const h = Er(g),
        _ = g.getBoundingClientRect(),
        y = Cn(g),
        b = _.left + (g.clientLeft + parseFloat(y.paddingLeft)) * h.x,
        w = _.top + (g.clientTop + parseFloat(y.paddingTop)) * h.y
      ;(i *= h.x), (u *= h.y), (c *= h.x), (d *= h.y), (i += b), (u += w), (g = mn(g).frameElement)
    }
  }
  return ts({ width: c, height: d, x: i, y: u })
}
function lk(e) {
  let { rect: t, offsetParent: n, strategy: o } = e
  const r = Dn(n),
    a = so(n)
  if (n === a) return t
  let l = { scrollLeft: 0, scrollTop: 0 },
    s = To(1)
  const i = To(0)
  if ((r || (!r && o !== 'fixed')) && ((Po(n) !== 'body' || nl(a)) && (l = Is(n)), Dn(n))) {
    const u = sr(n)
    ;(s = Er(n)), (i.x = u.x + n.clientLeft), (i.y = u.y + n.clientTop)
  }
  return {
    width: t.width * s.x,
    height: t.height * s.y,
    x: t.x * s.x - l.scrollLeft * s.x + i.x,
    y: t.y * s.y - l.scrollTop * s.y + i.y,
  }
}
function sk(e) {
  return Array.from(e.getClientRects())
}
function Vh(e) {
  return sr(so(e)).left + Is(e).scrollLeft
}
function ik(e) {
  const t = so(e),
    n = Is(e),
    o = e.ownerDocument.body,
    r = dn(t.scrollWidth, t.clientWidth, o.scrollWidth, o.clientWidth),
    a = dn(t.scrollHeight, t.clientHeight, o.scrollHeight, o.clientHeight)
  let l = -n.scrollLeft + Vh(e)
  const s = -n.scrollTop
  return Cn(o).direction === 'rtl' && (l += dn(t.clientWidth, o.clientWidth) - r), { width: r, height: a, x: l, y: s }
}
function uk(e, t) {
  const n = mn(e),
    o = so(e),
    r = n.visualViewport
  let a = o.clientWidth,
    l = o.clientHeight,
    s = 0,
    i = 0
  if (r) {
    ;(a = r.width), (l = r.height)
    const u = gc()
    ;(!u || (u && t === 'fixed')) && ((s = r.offsetLeft), (i = r.offsetTop))
  }
  return { width: a, height: l, x: s, y: i }
}
function ck(e, t) {
  const n = sr(e, !0, t === 'fixed'),
    o = n.top + e.clientTop,
    r = n.left + e.clientLeft,
    a = Dn(e) ? Er(e) : To(1),
    l = e.clientWidth * a.x,
    s = e.clientHeight * a.y,
    i = r * a.x,
    u = o * a.y
  return { width: l, height: s, x: i, y: u }
}
function Dm(e, t, n) {
  let o
  if (t === 'viewport') o = uk(e, n)
  else if (t === 'document') o = ik(so(e))
  else if (eo(t)) o = ck(t, n)
  else {
    const r = Th(e)
    o = { ...t, x: t.x - r.x, y: t.y - r.y }
  }
  return ts(o)
}
function Ph(e, t) {
  const n = Dr(e)
  return n === t || !eo(n) || Es(n) ? !1 : Cn(n).position === 'fixed' || Ph(n, t)
}
function dk(e, t) {
  const n = t.get(e)
  if (n) return n
  let o = Da(e, [], !1).filter((s) => eo(s) && Po(s) !== 'body'),
    r = null
  const a = Cn(e).position === 'fixed'
  let l = a ? Dr(e) : e
  for (; eo(l) && !Es(l); ) {
    const s = Cn(l),
      i = vc(l)
    !i && s.position === 'fixed' && (r = null),
      (
        a
          ? !i && !r
          : (!i && s.position === 'static' && !!r && ['absolute', 'fixed'].includes(r.position)) ||
            (nl(l) && !i && Ph(e, l))
      )
        ? (o = o.filter((c) => c !== l))
        : (r = s),
      (l = Dr(l))
  }
  return t.set(e, o), o
}
function mk(e) {
  let { element: t, boundary: n, rootBoundary: o, strategy: r } = e
  const l = [...(n === 'clippingAncestors' ? dk(t, this._c) : [].concat(n)), o],
    s = l[0],
    i = l.reduce(
      (u, c) => {
        const d = Dm(t, c, r)
        return (
          (u.top = dn(d.top, u.top)),
          (u.right = Rr(d.right, u.right)),
          (u.bottom = Rr(d.bottom, u.bottom)),
          (u.left = dn(d.left, u.left)),
          u
        )
      },
      Dm(t, s, r),
    )
  return { width: i.right - i.left, height: i.bottom - i.top, x: i.left, y: i.top }
}
function fk(e) {
  return kh(e)
}
function pk(e, t, n) {
  const o = Dn(t),
    r = so(t),
    a = n === 'fixed',
    l = sr(e, !0, a, t)
  let s = { scrollLeft: 0, scrollTop: 0 }
  const i = To(0)
  if (o || (!o && !a))
    if (((Po(t) !== 'body' || nl(r)) && (s = Is(t)), o)) {
      const u = sr(t, !0, a, t)
      ;(i.x = u.x + t.clientLeft), (i.y = u.y + t.clientTop)
    } else r && (i.x = Vh(r))
  return { x: l.left + s.scrollLeft - i.x, y: l.top + s.scrollTop - i.y, width: l.width, height: l.height }
}
function Mm(e, t) {
  return !Dn(e) || Cn(e).position === 'fixed' ? null : t ? t(e) : e.offsetParent
}
function Ah(e, t) {
  const n = mn(e)
  if (!Dn(e)) return n
  let o = Mm(e, t)
  for (; o && nk(o) && Cn(o).position === 'static'; ) o = Mm(o, t)
  return o && (Po(o) === 'html' || (Po(o) === 'body' && Cn(o).position === 'static' && !vc(o))) ? n : o || ok(e) || n
}
const vk = async function (e) {
  let { reference: t, floating: n, strategy: o } = e
  const r = this.getOffsetParent || Ah,
    a = this.getDimensions
  return { reference: pk(t, await r(n), o), floating: { x: 0, y: 0, ...(await a(n)) } }
}
function gk(e) {
  return Cn(e).direction === 'rtl'
}
const hk = {
  convertOffsetParentRelativeRectToViewportRelativeRect: lk,
  getDocumentElement: so,
  getClippingRect: mk,
  getOffsetParent: Ah,
  getElementRects: vk,
  getClientRects: sk,
  getDimensions: fk,
  getScale: Er,
  isElement: eo,
  isRTL: gk,
}
function yk(e, t) {
  let n = null,
    o
  const r = so(e)
  function a() {
    clearTimeout(o), n && n.disconnect(), (n = null)
  }
  function l(s, i) {
    s === void 0 && (s = !1), i === void 0 && (i = 1), a()
    const { left: u, top: c, width: d, height: m } = e.getBoundingClientRect()
    if ((s || t(), !d || !m)) return
    const v = Cl(c),
      g = Cl(r.clientWidth - (u + d)),
      h = Cl(r.clientHeight - (c + m)),
      _ = Cl(u),
      b = { rootMargin: -v + 'px ' + -g + 'px ' + -h + 'px ' + -_ + 'px', threshold: dn(0, Rr(1, i)) || 1 }
    let w = !0
    function S($) {
      const k = $[0].intersectionRatio
      if (k !== i) {
        if (!w) return l()
        k
          ? l(!1, k)
          : (o = setTimeout(() => {
              l(!1, 1e-7)
            }, 100))
      }
      w = !1
    }
    try {
      n = new IntersectionObserver(S, { ...b, root: r.ownerDocument })
    } catch {
      n = new IntersectionObserver(S, b)
    }
    n.observe(e)
  }
  return l(!0), a
}
function _k(e, t, n, o) {
  o === void 0 && (o = {})
  const {
      ancestorScroll: r = !0,
      ancestorResize: a = !0,
      elementResize: l = typeof ResizeObserver == 'function',
      layoutShift: s = typeof IntersectionObserver == 'function',
      animationFrame: i = !1,
    } = o,
    u = hc(e),
    c = r || a ? [...(u ? Da(u) : []), ...Da(t)] : []
  c.forEach((y) => {
    r && y.addEventListener('scroll', n, { passive: !0 }), a && y.addEventListener('resize', n)
  })
  const d = u && s ? yk(u, n) : null
  let m = -1,
    v = null
  l &&
    ((v = new ResizeObserver((y) => {
      let [b] = y
      b &&
        b.target === u &&
        v &&
        (v.unobserve(t),
        cancelAnimationFrame(m),
        (m = requestAnimationFrame(() => {
          v && v.observe(t)
        }))),
        n()
    })),
    u && !i && v.observe(u),
    v.observe(t))
  let g,
    h = i ? sr(e) : null
  i && _()
  function _() {
    const y = sr(e)
    h && (y.x !== h.x || y.y !== h.y || y.width !== h.width || y.height !== h.height) && n(),
      (h = y),
      (g = requestAnimationFrame(_))
  }
  return (
    n(),
    () => {
      c.forEach((y) => {
        r && y.removeEventListener('scroll', n), a && y.removeEventListener('resize', n)
      }),
        d && d(),
        v && v.disconnect(),
        (v = null),
        i && cancelAnimationFrame(g)
    }
  )
}
const bk = (e, t, n) => {
  const o = new Map(),
    r = { platform: hk, ...n },
    a = { ...r.platform, _c: o }
  return X$(e, t, { ...r, platform: a })
}
function Fm(e) {
  var t
  return (t = e == null ? void 0 : e.$el) != null ? t : e
}
function Eh(e) {
  return typeof window > 'u' ? 1 : (e.ownerDocument.defaultView || window).devicePixelRatio || 1
}
function jm(e, t) {
  const n = Eh(e)
  return Math.round(t * n) / n
}
function zk(e, t, n) {
  n === void 0 && (n = {})
  const o = n.whileElementsMounted,
    r = p(() => {
      var z
      return (z = f(n.open)) != null ? z : !0
    }),
    a = p(() => f(n.middleware)),
    l = p(() => {
      var z
      return (z = f(n.placement)) != null ? z : 'bottom'
    }),
    s = p(() => {
      var z
      return (z = f(n.strategy)) != null ? z : 'absolute'
    }),
    i = p(() => {
      var z
      return (z = f(n.transform)) != null ? z : !0
    }),
    u = p(() => Fm(e.value)),
    c = p(() => Fm(t.value)),
    d = H(0),
    m = H(0),
    v = H(s.value),
    g = H(l.value),
    h = je({}),
    _ = H(!1),
    y = p(() => {
      const z = { position: v.value, left: '0', top: '0' }
      if (!c.value) return z
      const V = jm(c.value, d.value),
        T = jm(c.value, m.value)
      return i.value
        ? {
            ...z,
            transform: 'translate(' + V + 'px, ' + T + 'px)',
            ...(Eh(c.value) >= 1.5 && { willChange: 'transform' }),
          }
        : { position: v.value, left: V + 'px', top: T + 'px' }
    })
  let b
  function w() {
    u.value == null ||
      c.value == null ||
      bk(u.value, c.value, { middleware: a.value, placement: l.value, strategy: s.value }).then((z) => {
        ;(d.value = z.x),
          (m.value = z.y),
          (v.value = z.strategy),
          (g.value = z.placement),
          (h.value = z.middlewareData),
          (_.value = !0)
      })
  }
  function S() {
    typeof b == 'function' && (b(), (b = void 0))
  }
  function $() {
    if ((S(), o === void 0)) {
      w()
      return
    }
    if (u.value != null && c.value != null) {
      b = o(u.value, c.value, w)
      return
    }
  }
  function k() {
    r.value || (_.value = !1)
  }
  return (
    ge([a, l, s], w, { flush: 'sync' }),
    ge([u, c], $, { flush: 'sync' }),
    ge(r, k, { flush: 'sync' }),
    Su() && rp(S),
    {
      x: Uo(d),
      y: Uo(m),
      strategy: Uo(v),
      placement: Uo(g),
      middlewareData: Uo(h),
      isPositioned: Uo(_),
      floatingStyles: y,
      update: w,
    }
  )
}
const Ck = (e, t, n, o) => {
    const r = p(() => {
        const { position: u, align: c } = gh({ placement: o.value.placement })
        return `${u.value}-${c.value}`
      }),
      a = p(() => {
        const u = o.value.offset,
          c = { mainAxis: 0, crossAxis: 0 }
        return (
          Array.isArray(u) && ((c.mainAxis = u[0]), (c.crossAxis = u[1])), typeof u == 'number' && (c.mainAxis = u), c
        )
      }),
      l = p(() => {
        const { autoPlacement: u, stickToEdges: c, keepAnchorWidth: d, verticalScrollOnOverflow: m } = o.value,
          v = [Z$(a.value)]
        return (
          u && v.push(J$({ boundary: n.value })),
          c && v.push(ek()),
          (d || m) &&
            v.push(
              tk({
                apply({ elements: g, availableHeight: h }) {
                  if (d) {
                    const y = g.reference.getBoundingClientRect().width
                    Object.assign(g.floating.style, { maxWidth: `${y}px`, minWidth: `${y}px` })
                  }
                  m && Object.assign(g.floating.style, { maxHeight: `${h}px` })
                },
              }),
            ),
          v
        )
      }),
      { floatingStyles: s, isPositioned: i } =
        typeof document > 'u'
          ? { floatingStyles: {}, isPositioned: H(!1) }
          : zk(e, t, { placement: r, whileElementsMounted: _k, middleware: l, transform: !0 })
    return { floatingStyles: p(() => (i.value ? s.value : { position: 'fixed' })), isPositioned: i }
  },
  Sk = (e, t) => (!t || t instanceof Window ? !1 : t.parentElement === e ? !0 : e.contains(t)),
  wk = (e) => (Array.isArray(e) ? e : [e]),
  $k = (e, t, n = {}) => {
    let o = !1
    n.onlyKeyboard &&
      ft(
        'mousedown',
        (r) => {
          ;(o = !0),
            setTimeout(() => {
              o = !1
            }, 200)
        },
        !0,
      ),
      ft(
        'focus',
        (r) => {
          if (n.onlyKeyboard && o) return
          const a = r.target
          if (r.target.shadowRoot) return
          wk(e).some((s) => {
            const i = St(f(s))
            return i && Sk(i, a)
          }) || t(a)
        },
        !0,
      )
  },
  hi = (e) =>
    p(() =>
      typeof (e == null ? void 0 : e.value) == 'string'
        ? document == null
          ? void 0
          : document.querySelector(e.value)
        : St(e == null ? void 0 : e.value),
    ),
  kk = re({
    name: 'VaDropdown',
    props: {
      ...vh,
      ...Xg(!0),
      modelValue: { type: Boolean, default: !1 },
      anchor: { type: [String, Object], default: void 0 },
      anchorSelector: { type: String, default: '' },
      innerAnchorSelector: { type: String, default: '' },
      trigger: { type: [String, Array], default: () => ['click', 'space', 'enter', 'arrow-down', 'arrow-up'] },
      disabled: { type: Boolean },
      readonly: { type: Boolean },
      closeOnClickOutside: { type: Boolean, default: !0 },
      closeOnFocusOutside: { type: Boolean, default: !0 },
      closeOnAnchorClick: { type: Boolean, default: !0 },
      closeOnContentClick: { type: Boolean, default: !0 },
      hoverOverTimeout: { type: [Number, String], default: 30 },
      hoverOutTimeout: { type: [Number, String], default: 200 },
      isContentHoverable: { type: Boolean, default: !0 },
      offset: { type: [Array, Number], default: 0 },
      keepAnchorWidth: { type: Boolean, default: !1 },
      verticalScrollOnOverflow: { type: Boolean, default: !0 },
      cursor: { type: [Boolean, Object], default: !1 },
      autoPlacement: { type: Boolean, default: !0 },
      stickToEdges: { type: Boolean, default: !1 },
      target: { type: [String, Object], default: void 0 },
      teleport: { type: [String, Object], default: void 0 },
      keyboardNavigation: { type: Boolean, default: !0 },
      ariaLabel: Be('$t:toggleDropdown'),
      role: { type: String, default: 'button' },
      contentClass: { type: String, default: '' },
    },
    emits: [
      ...Mt,
      'anchor-click',
      'anchor-right-click',
      'content-click',
      'click-outside',
      'focus-outside',
      'close',
      'open',
      'anchor-dblclick',
    ],
    setup(e, { emit: t }) {
      const { valueComputed: n } = vt(e, t, 'modelValue')
      ge(n, (w) => {
        t(w ? 'open' : 'close')
      })
      const o = Xa(),
        { anchorRef: r } = M$(e),
        a = F$(
          r,
          p(() => !!e.cursor),
        ),
        l = Yr('floating'),
        s = hi(H('body')),
        i = hi(p(() => e.target)),
        u = hi(p(() => e.teleport)),
        c = rt('va-dropdown', () => yt(e, ['disabled'])),
        d = p(() => {
          if (u.value) return u.value
          if (i.value) return i.value
          if (r.value) {
            const w = r.value.getRootNode()
            if (w instanceof ShadowRoot) {
              const S = [...w.children].find(($) => $.tagName !== 'STYLE')
              if (S) return S
            }
          }
          return s.value
        }),
        m = p(() => o.value && n.value)
      D$(n, r, l, e)
      const v = (w, S, $) => {
        t(w, $), S && (n.value = !1)
      }
      Ps([r, l], () => {
        e.closeOnClickOutside && n.value && v('click-outside', e.closeOnClickOutside)
      }),
        $k(
          [l],
          () => {
            e.closeOnFocusOutside && n.value && v('focus-outside', e.closeOnFocusOutside)
          },
          { onlyKeyboard: !0 },
        )
      const g = p(() => (typeof e.cursor == 'object' ? e.cursor : e.cursor ? a.value : r.value)),
        { floatingStyles: h } = Ck(
          g,
          l,
          i,
          p(() => ({
            placement: e.placement,
            offset: e.offset,
            autoPlacement: e.autoPlacement,
            stickToEdges: e.stickToEdges,
            keepAnchorWidth: e.keepAnchorWidth,
            verticalScrollOnOverflow: e.verticalScrollOnOverflow,
          })),
        ),
        _ = () => {
          n.value = !1
        },
        y = () => {
          n.value = !0
        },
        { zIndex: b } = Yg(n)
      return (
        ge(n, (w) => {
          if (e.keyboardNavigation)
            if (w)
              dt(() => {
                const S = St(l.value)
                S && iu(S)
              })
            else {
              if (!r.value) return
              iu(r.value)
            }
        }),
        {
          ...ut(),
          ...eh(),
          anchorRef: r,
          anchorClass: c,
          floating: l,
          floatingStyles: h,
          showFloating: m,
          teleportTarget: d,
          isMounted: o,
          valueComputed: n,
          hide: _,
          show: y,
          zIndex: b,
        }
      )
    },
    render() {
      const e = {
          isOpened: this.valueComputed,
          hide: this.hide,
          show: this.show,
          toggle: () => (this.valueComputed ? this.hide() : this.show()),
          getAnchorWidth: () => {
            var o
            return ((o = this.anchorRef) == null ? void 0 : o.offsetWidth) + 'px'
          },
          getAnchorHeight: () => {
            var o
            return ((o = this.anchorRef) == null ? void 0 : o.offsetHeight) + 'px'
          },
        },
        t =
          this.showFloating &&
          pm(this.$slots.default, e, {
            ref: 'floating',
            class: ['va-dropdown__content-wrapper', this.$props.contentClass],
            style: [this.floatingStyles, { zIndex: this.zIndex }],
            ...this.teleportedAttrs,
          }),
        n = pm(this.$slots.anchor, e, {
          ref: 'anchorRef',
          role: this.$props.role,
          class: ['va-dropdown', ...this.anchorClass.asArray.value],
          style: { position: 'relative' },
          'aria-label': this.tp(this.$props.ariaLabel),
          'aria-disabled': this.$props.disabled,
          'aria-expanded': this.$props.role && this.$props.role !== 'none' ? !!this.showFloating : void 0,
          ...this.teleportFromAttrs,
          ...this.$attrs,
        })
      if (typeof this.$props.cursor == 'object' && t)
        return Ze(Ta, { to: this.teleportTarget, disabled: this.$props.disabled }, [t])
      if (!this.$props.anchorSelector && !n) {
        ot('VaDropdown: #anchor slot is missing')
        return
      }
      if (this.showFloating && !t) {
        ot('VaDropdown: default slot is missing')
        return
      }
      return Ze(Te, {}, [n, t && Ze(Ta, { to: this.teleportTarget, disabled: this.$props.disabled }, [t])])
    },
  }),
  pn = ye(kk),
  Tk = re({
    name: 'VaDropdownContent',
    __name: 'VaDropdownContent',
    props: {
      noPadding: { type: Boolean, default: !1 },
      background: { type: String, default: 'background-secondary' },
      textColor: { type: String },
    },
    setup(e) {
      const t = e,
        { getColor: n } = Re(),
        { textColorComputed: o } = Vt(Ut(t, 'background')),
        r = p(() => ({ background: n(t.background, void 0, !0), color: o.value, padding: t.noPadding ? 0 : void 0 }))
      return (a, l) => (
        C(),
        A('div', { class: 'va-dropdown__content', style: me(r.value), role: 'listbox' }, [L(a.$slots, 'default')], 4)
      )
    },
  }),
  ir = ye(Tk),
  Hm = (e) => (typeof e == 'object' ? e.listen : e),
  yi = (e) => (typeof e == 'object' ? e.emit : e),
  hr = (e) => {
    const t = () => e.map(yi),
      n = (a) => `on${a.charAt(0).toUpperCase() + a.slice(1)}`
    return {
      createListeners: (a) => e.reduce((l, s) => ({ ...l, [n(Hm(s))]: (...i) => a(yi(s), ...i) }), {}),
      createVOnListeners: (a) => e.reduce((l, s) => ({ ...l, [Hm(s)]: (...i) => a(yi(s), ...i) }), {}),
      createEmits: t,
    }
  },
  { createEmits: Vk, createVOnListeners: Pk } = hr(['click']),
  { createEmits: Ak, createVOnListeners: Ek } = hr([{ listen: 'click', emit: 'main-button-click' }]),
  _i = Rn(Qe(Xe), ['iconRight', 'block']),
  Um = Qe(pn),
  Ik = re({
    name: 'VaButtonDropdown',
    __name: 'VaButtonDropdown',
    props: {
      ...Le,
      ..._i,
      ...Um,
      ...Tt,
      ...vh,
      modelValue: { type: Boolean, default: !1 },
      stateful: { type: Boolean, default: !0 },
      icon: { type: String, default: 'va-arrow-down' },
      openedIcon: { type: String, default: 'va-arrow-up' },
      hideIcon: { type: Boolean, default: !1 },
      leftIcon: { type: Boolean, default: !1 },
      iconColor: { type: String, default: '' },
      disabled: { type: Boolean, default: !1 },
      disableButton: { type: Boolean, default: !1 },
      disableDropdown: { type: Boolean, default: !1 },
      offset: { type: [Number, Array], default: 2 },
      keepAnchorWidth: { type: Boolean, default: !1 },
      closeOnContentClick: { type: Boolean, default: !0 },
      split: { type: Boolean },
      splitTo: { type: String, default: '' },
      splitHref: { type: String, default: '' },
      loading: { type: Boolean, default: !1 },
      label: { type: String },
      ariaLabel: Be('$t:toggleDropdown'),
    },
    emits: ['update:modelValue', ...Vk(), ...Ak()],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        { valueComputed: a } = vt(o, r),
        l = p(() => (a.value ? o.openedIcon : o.icon)),
        s = rt('va-button-dropdown', () => ({ split: o.split })),
        i = Zt(),
        u = p(() => (o.hideIcon ? {} : { [(o.label || i.label) && !o.leftIcon ? 'icon-right' : 'icon']: l.value })),
        c = p(() => {
          const w = ['to', 'href', 'loading', 'icon'],
            S = [
              'plain',
              'textOpacity',
              'backgroundOpacity',
              'hoverOpacity',
              'hoverBehavior',
              'hoverOpacity',
              'pressedOpacity',
              'pressedBehavior',
              'pressedOpacity',
            ]
          return o.preset ? Object.keys(Rn(_i, [...w, ...S])) : Object.keys(Rn(_i, w))
        }),
        d = p(() =>
          Object.entries(o)
            .filter(([w, S]) => c.value.includes(w))
            .reduce((w, [S, $]) => (Object.assign(w, { [S]: $ }), w), {}),
        ),
        m = p(() => ({ to: o.splitTo, href: o.splitHref, loading: o.loading })),
        v = () => {
          a.value = !1
        },
        g = it(Um),
        h = Pk(r),
        _ = Ek(r),
        { t: y, tp: b } = ut()
      return (
        t({ hideDropdown: v }),
        (w, S) => (
          C(),
          A(
            'div',
            { class: Pe(['va-button-dropdown', f(s)]) },
            [
              w.$props.split
                ? (C(),
                  ee(
                    f(As),
                    pe(le({ key: 1 }, d.value)),
                    {
                      default: G(() => [
                        w.$props.leftIcon
                          ? W('', !0)
                          : (C(),
                            ee(
                              f(Xe),
                              le({ key: 0, disabled: w.$props.disabled || w.$props.disableButton }, m.value, yn(f(_))),
                              { default: G(() => [L(w.$slots, 'label', {}, () => [Fe(Ae(e.label), 1)])]), _: 3 },
                              16,
                              ['disabled'],
                            )),
                        ne(
                          f(pn),
                          le(f(g), {
                            modelValue: f(a),
                            'onUpdate:modelValue': S[1] || (S[1] = ($) => (nt(a) ? (a.value = $) : null)),
                            disabled: w.$props.disabled || w.$props.disableDropdown,
                            teleport: w.$el,
                          }),
                          {
                            anchor: G(() => [
                              ne(
                                f(Xe),
                                le(
                                  {
                                    'aria-label': w.$props.ariaLabel || f(y)('toggleDropdown'),
                                    disabled: w.$props.disabled || w.$props.disableDropdown,
                                    icon: l.value,
                                    'icon-color': w.$props.iconColor,
                                  },
                                  yn(f(h)),
                                  { onKeydown: $e(Se(v, ['prevent']), ['esc']) },
                                ),
                                null,
                                16,
                                ['aria-label', 'disabled', 'icon', 'icon-color', 'onKeydown'],
                              ),
                            ]),
                            default: G(() => [ne(f(ir), null, { default: G(() => [L(w.$slots, 'default')]), _: 3 })]),
                            _: 3,
                          },
                          16,
                          ['modelValue', 'disabled', 'teleport'],
                        ),
                        w.$props.leftIcon
                          ? (C(),
                            ee(
                              f(Xe),
                              le({ key: 1, disabled: w.$props.disabled || w.$props.disableButton }, m.value, yn(f(_))),
                              { default: G(() => [L(w.$slots, 'label', {}, () => [Fe(Ae(e.label), 1)])]), _: 3 },
                              16,
                              ['disabled'],
                            ))
                          : W('', !0),
                      ]),
                      _: 3,
                    },
                    16,
                  ))
                : (C(),
                  ee(
                    f(pn),
                    le({ key: 0 }, f(g), {
                      modelValue: f(a),
                      'onUpdate:modelValue': S[0] || (S[0] = ($) => (nt(a) ? (a.value = $) : null)),
                      disabled: w.$props.disabled || w.$props.disableDropdown,
                    }),
                    {
                      anchor: G(() => [
                        ne(
                          f(Xe),
                          le({ 'aria-label': f(b)(w.$props.ariaLabel) }, { ...u.value, ...d.value }, yn(f(h))),
                          { default: G(() => [L(w.$slots, 'label', {}, () => [Fe(Ae(e.label), 1)])]), _: 3 },
                          16,
                          ['aria-label'],
                        ),
                      ]),
                      default: G(() => [
                        L(w.$slots, 'content', {}, () => [
                          ne(f(ir), null, { default: G(() => [L(w.$slots, 'default')]), _: 3 }),
                        ]),
                      ]),
                      _: 3,
                    },
                    16,
                    ['modelValue', 'disabled'],
                  )),
            ],
            2,
          )
        )
      )
    },
  }),
  xk = ye(Ik),
  Ih = (e, t) => {
    if (t.length === 0) return e
    const n = e[t[0]]
    return Qo(n) ? Ih(n, t.slice(1)) : t.length === 1 ? n : void 0
  },
  yc = (e, t) => (t in e ? e[t] : ((t = t.replace(/^\./, '')), Ih(e, t.split('.')))),
  xh = (e, t) => {
    if (!(sn(e) || typeof e != 'object' || Array.isArray(e)))
      return t ? (typeof t == 'string' ? yc(e, t) : typeof t == 'function' ? t(e) : e) : e
  },
  Xr = {
    options: { type: Array, default: () => [] },
    textBy: { type: [String, Function], default: 'text' },
    valueBy: { type: [String, Function], default: '' },
    trackBy: { type: [String, Function], default: '' },
    disabledBy: { type: [String, Function], default: 'disabled' },
    groupBy: { type: [String, Function], default: 'group' },
  }
function Jr(e) {
  const t = (i) => {
      const u = e.options
      for (let c = 0; c < u.length; c++) if (s(u[c]) === i) return u[c]
      return i
    },
    n = (i, u) => (Qo(i) ? xh(i, u) : i),
    o = (i) => (e.trackBy ? n(i, e.trackBy) : s(i)),
    r = (i) => (Qo(i) ? n(i, e.disabledBy) : !1),
    a = (i) => {
      const u = n(i, e.textBy)
      return ['number', 'boolean'].includes(typeof u) ? String(u) : u
    },
    l = (i) => {
      if (Qo(i)) return n(i, e.groupBy)
    },
    s = (i) => n(i, e.valueBy)
  return { tryResolveByValue: t, getValue: s, getText: a, getDisabled: r, getTrackBy: o, getGroupBy: l }
}
const Wm = Qe(As),
  Ok = re({
    name: 'VaButtonToggle',
    __name: 'VaButtonToggle',
    props: {
      ...Wm,
      ...Le,
      ...Xr,
      modelValue: { type: [String, Number, Boolean, Object], default: '' },
      options: { type: Array, required: !0 },
      activeButtonTextColor: { type: String },
      toggleColor: { type: String, default: '' },
      textBy: { type: [String, Function], default: 'label' },
      valueBy: { type: [String, Function], default: 'value' },
    },
    emits: ['update:modelValue'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        { getText: r, getTrackBy: a } = Jr(n),
        { getColor: l, shiftHSLAColor: s } = Re(),
        i = p(() => l(n.color)),
        u = (_) => a(_) === n.modelValue,
        c = p(() => (n.toggleColor ? l(n.toggleColor) : s(i.value, { l: n.plain ? -16 : -6 }))),
        d = p(() => (!n.preset || n.preset === 'default' ? {} : { backgroundOpacity: n.pressedOpacity })),
        m = p(() => ({ color: c.value, textColor: n.activeButtonTextColor, ...d.value })),
        v = (_ = {}) => {
          const y = { icon: _.icon, iconRight: _.iconRight }
          return u(_) ? { ...(u(_) && m.value), ...y } : y
        },
        g = it(Wm),
        h = (_) => o('update:modelValue', a(_))
      return (_, y) => (
        C(),
        ee(
          f(As),
          le({ class: 'va-button-toggle' }, f(g)),
          {
            default: G(() => [
              (C(!0),
              A(
                Te,
                null,
                Ue(
                  e.options,
                  (b) => (
                    C(),
                    ee(
                      f(Xe),
                      le({ key: f(a)(b), 'aria-pressed': u(b) }, v(b), { onClick: (w) => h(b) }),
                      { default: G(() => [Fe(Ae(f(r)(b)), 1)]), _: 2 },
                      1040,
                      ['aria-pressed', 'onClick'],
                    )
                  ),
                ),
                128,
              )),
            ]),
            _: 1,
          },
          16,
        )
      )
    },
  }),
  Lk = ye(Ok),
  Bk = re({
    name: 'VaCard',
    __name: 'VaCard',
    props: {
      ...gr,
      ...Le,
      tag: { type: String, default: 'div' },
      square: { type: Boolean, default: !1 },
      outlined: { type: Boolean, default: !1 },
      bordered: { type: Boolean, default: !0 },
      disabled: { type: Boolean, default: !1 },
      href: { type: String, default: '' },
      target: { type: String, default: '' },
      stripe: { type: Boolean, default: !1 },
      stripeColor: { type: String, default: '' },
      gradient: { type: Boolean, default: !1 },
      textColor: { type: String },
      color: { type: String, default: 'background-secondary' },
    },
    setup(e) {
      const t = e,
        { getColor: n } = Re(),
        { isLinkTag: o, tagComputed: r, hrefComputed: a } = No(t),
        { textColorComputed: l } = Vt(p(() => n(t.color))),
        s = p(() => n(t.stripeColor)),
        i = rt('va-card', () => ({
          ...yt(t, ['square', 'outlined', 'disabled', 'stripe']),
          noBorder: !t.bordered,
          link: o.value,
        })),
        u = p(() => ({ background: t.gradient && t.color ? ac(n(t.color)) : n(t.color), color: l.value }))
      return (c, d) => (
        C(),
        ee(
          an(f(r)),
          {
            class: Pe(['va-card', f(i)]),
            style: me([u.value, `--va-stripe-color-computed: ${String(s.value)}`]),
            href: f(a),
            target: e.target,
            to: c.to,
            replace: c.replace,
            exact: c.exact,
            'active-class': c.activeClass,
            'exact-active-class': c.exactActiveClass,
          },
          { default: G(() => [L(c.$slots, 'default')]), _: 3 },
          8,
          ['class', 'style', 'href', 'target', 'to', 'replace', 'exact', 'active-class', 'exact-active-class'],
        )
      )
    },
  }),
  Nk = { class: 'va-card__content' },
  Rk = re({
    name: 'VaCardContent',
    __name: 'VaCardContent',
    setup(e) {
      return (t, n) => (C(), A('div', Nk, [L(t.$slots, 'default')]))
    },
  }),
  Dk = re({
    name: 'VaCardTitle',
    __name: 'VaCardTitle',
    props: { ...Le, textColor: { type: String } },
    setup(e) {
      const t = e,
        { getColor: n } = Re(),
        o = p(() => ({ color: t.textColor ? n(t.textColor) : '' }))
      return (r, a) => (
        C(),
        A(
          'div',
          { class: 'va-card-title va-card__title', style: me(o.value) },
          [L(r.$slots, 'default', {}, void 0, !0)],
          4,
        )
      )
    },
  }),
  yr = (e, t) => {
    const n = e.__vccOpts || e
    for (const [o, r] of t) n[o] = r
    return n
  },
  Mk = yr(Dk, [['__scopeId', 'data-v-5cd66b25']]),
  Fk = re({
    name: 'VaCardActions',
    __name: 'VaCardActions',
    props: { ..._h, ...Le },
    setup(e) {
      const t = e,
        { alignComputed: n } = bh(t),
        o = rt('va-card__actions', () => ({ ...yt(t, ['vertical']) }))
      return (r, a) => (
        C(), A('div', { class: Pe(['va-card__actions', f(o)]), style: me(f(n)) }, [L(r.$slots, 'default')], 6)
      )
    },
  }),
  jk = re({
    name: 'VaCardBlock',
    __name: 'VaCardBlock',
    props: { horizontal: { type: Boolean, default: !1 } },
    setup(e) {
      const t = e,
        n = p(() => ({ 'va-card-block--horizontal': t.horizontal }))
      return (o, r) => (C(), A('div', { class: Pe(['va-card-block', n.value]) }, [L(o.$slots, 'default')], 2))
    },
  }),
  Hk = ye(Rk),
  Uk = ye(Mk),
  Wk = ye(Fk),
  Gk = ye(jk),
  Kk = ye(Bk),
  qk = (e, t) => {
    const n = (i) => {
        t.value = i
      },
      o = () => {
        if (e.infinite && t.value <= 0) {
          t.value = e.items.length - 1
          return
        }
        t.value -= 1
      },
      r = () => {
        if (e.infinite && t.value >= e.items.length - 1) {
          t.value = 0
          return
        }
        t.value += 1
      },
      a = p(() => e.items.length > 1),
      l = p(() => t.value > 0 || e.infinite),
      s = p(() => t.value < e.items.length - 1 || e.infinite)
    return { doShowPrevButton: l, doShowNextButton: s, doShowDirectionButtons: a, goTo: n, prev: o, next: r }
  },
  Yk = (e, t) => {
    let n = -1
    const o = () => {
      e.autoscroll &&
        (clearInterval(n),
        (n = setInterval(() => {
          ;(t.value += 1), t.value >= e.items.length && (t.value = 0)
        }, e.autoscrollInterval)))
    }
    let r
    const a = () => {
        e.autoscroll &&
          (clearInterval(n),
          (r = setTimeout(() => {
            o(), clearTimeout(r)
          }, e.autoscrollPauseDuration)))
      },
      l = () => {
        clearInterval(n), clearTimeout(r)
      }
    et(() => o()), wt(() => l())
    const s =
        (v) =>
        (...g) => {
          a(), v(...g)
        },
      i = H({ transition: void 0 }),
      u = H(0),
      c = p(() =>
        e.effect === 'fade'
          ? { ...i.value, transition: 'none' }
          : e.vertical
            ? { ...i.value, transform: `translateY(${u.value * -100}%)` }
            : { ...i.value, transform: `translateX(${u.value * -100}%)` },
      ),
      d = {
        isAnimating: !1,
        speed: 0.3,
        order: [],
        move(v, g) {
          const h = e.items.length - 1,
            _ = e.items.length
          g === 0 && v === h
            ? (this.order.push({ to: _ }), this.order.push({ to: 0, animate: !1 }))
            : g === h && v === 0
              ? (this.order.push({ to: _, animate: !1 }), this.order.push({ to: g }))
              : this.order.push({ to: g }),
            this.isAnimating || this.runAnimation()
        },
        runAnimation() {
          this.isAnimating = !0
          const v = this.order.shift()
          if (!v) {
            this.isAnimating = !1
            return
          }
          ;(u.value = v == null ? void 0 : v.to),
            v.animate || v.animate === void 0
              ? ((i.value.transition = `all ${this.speed}s linear`),
                setTimeout(() => {
                  this.runAnimation()
                }, this.speed * 1e3))
              : ((i.value.transition = 'none'),
                setTimeout(() => {
                  this.runAnimation()
                }, 16))
        },
      }
    ge(t, (v, g) => {
      d.move(g, v)
    })
    const m = p(() =>
      e.effect === 'fade' ? [e.items[t.value]] : e.infinite || e.autoscroll ? [...e.items, e.items[0]] : e.items,
    )
    return { start: o, pause: a, stop: l, withPause: s, computedSlidesStyle: c, slides: m }
  },
  Xk = () => {
    const { setHSLAColor: e, getColor: t } = Re()
    return {
      computedColor: p(() => e(t('background-element'), { a: 0.7 })),
      computedHoverColor: p(() => e(t('primary'), { a: 0.7 })),
      computedActiveColor: p(() => t('primary')),
    }
  },
  Jk = {
    src: { type: String, required: !0 },
    alt: { type: String, default: '' },
    title: { type: String, default: '' },
    sizes: { type: String, default: '' },
    srcset: { type: String, default: '' },
    draggable: { type: Boolean, default: !0 },
    loading: { type: String },
    crossorigin: { type: String },
    decoding: { type: String },
    fetchpriority: { type: String, default: 'auto' },
    referrerpolicy: { type: String },
  },
  Qk = (e) =>
    p(() =>
      yt(e, [
        'src',
        'alt',
        'title',
        'sizes',
        'srcset',
        'loading',
        'referrerpolicy',
        'fetchpriority',
        'decoding',
        'crossorigin',
        'draggable',
      ]),
    ),
  Oh = (e, t = H({}), n = H([]), o = !0) => {
    const r = H(),
      a = () => {
        var c
        ;(c = r.value) == null || c.disconnect()
      },
      l = (c) => {
        var d
        const m = St(f(c))
        m && ((d = r.value) == null || d.observe(m))
      },
      s = (c) => {
        c.forEach(l)
      },
      i = () => {
        r.value = new IntersectionObserver(e, t.value)
      },
      u = p(() => !o || !(typeof window < 'u' && 'IntersectionObserver' in window))
    return (
      ge(
        [n, t],
        ([c]) => {
          u.value || (a(), c && (i(), Array.isArray(c) ? s(c) : l(c)))
        },
        { immediate: !0 },
      ),
      wt(a),
      { isIntersectionDisabled: u }
    )
  },
  Zk = ['aria-busy'],
  eT = { key: 0, class: 'va-image__overlay' },
  tT = { key: 1, class: 'va-image__error' },
  nT = { key: 2, class: 'va-image__loader' },
  oT = { key: 3, class: 'va-image__placeholder' },
  rT = ['src'],
  Gm = Qe(Nr),
  aT = re({
    name: 'VaImage',
    __name: 'VaImage',
    props: {
      ...Le,
      ...Jk,
      ...Gm,
      ratio: {
        type: [Number, String],
        default: 'auto',
        validator: (e) => (typeof e == 'number' ? e > 0 : e === 'auto'),
      },
      fit: { type: String, default: 'cover' },
      maxWidth: { type: [Number, String], default: 0, validator: (e) => Number(e) >= 0 },
      lazy: { type: Boolean, default: !1 },
      placeholderSrc: { type: String, default: '' },
    },
    emits: ['loaded', 'error', 'fallback'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        r = H(),
        a = H(),
        l = H(),
        s = p(() => l.value || n.src),
        i = H(1),
        u = H(1),
        c = H(!1),
        d = H(!1),
        m = () => {
          var ue
          ;(c.value = !0),
            y.value &&
              ((c.value = !1), (l.value = (ue = a.value) == null ? void 0 : ue.currentSrc), k(), o('loaded', s.value))
        },
        v = (ue) => {
          ;(d.value = !0), (c.value = !1), o('error', ue || s.value)
        },
        g = H(!1),
        h = (ue, be) => {
          ue.forEach((xe) => {
            xe.isIntersecting && ((g.value = !0), S(), be.disconnect())
          })
        },
        { isIntersectionDisabled: _ } = Oh(h, void 0, r, n.lazy),
        y = p(() => _.value || g.value),
        b = Xa(),
        w = p(() => !n.lazy || (n.lazy && b.value && y.value)),
        S = () => {
          !n.src ||
            (c.value && _.value) ||
            !y.value ||
            ((c.value = !0),
            (d.value = !1),
            dt(() => {
              var ue
              if ((ue = a.value) != null && ue.complete) {
                if (!a.value.naturalWidth) {
                  v()
                  return
                }
                m()
              }
            }))
        }
      let $
      const k = () => {
        clearTimeout($), c.value && ($ = window.setTimeout(k, 100))
        const { naturalHeight: ue, naturalWidth: be } = a.value || {}
        ue && be && ((i.value = ue), (u.value = be))
      }
      Nu(S), wt(() => clearTimeout($)), ge(() => n.src, S)
      const z = Zt(),
        V = p(() => {
          var ue
          return ((ue = z == null ? void 0 : z.placeholder) == null ? void 0 : ue.call(z)) || n.placeholderSrc
        }),
        T = p(() => {
          var ue
          return c.value && !((ue = z == null ? void 0 : z.loader) != null && ue.call(z))
        }),
        B = p(() => {
          var ue
          return d.value && !((ue = z == null ? void 0 : z.error) != null && ue.call(z)) && !x.value
        }),
        K = p(() => (T.value || B.value) && V.value),
        j = p(() => !(c.value || d.value)),
        U = Qk(n),
        D = p(() => ({ ...yt(n, ['ratio', 'maxWidth']), contentWidth: i.value, contentHeight: u.value })),
        O = it(Gm),
        R = (ue) => !!Object.values(ue || {}).filter((be) => be).length,
        N = p(() => {
          var ue, be, xe, we
          return R(
            (we =
              (xe = (be = (ue = Mn()) == null ? void 0 : ue.globalConfig) == null ? void 0 : be.value) == null
                ? void 0
                : xe.components) == null
              ? void 0
              : we.VaFallback,
          )
        }),
        x = p(() => R(O.value) || N.value),
        ce = p(() => n.fit)
      return (ue, be) => (
        C(),
        ee(
          f(ch),
          le({ ref_key: 'root', ref: r, class: 'va-image' }, D.value, {
            style: `--va-fit-computed: ${String(ce.value)}`,
          }),
          {
            default: G(() => [
              Pn(
                Y(
                  'picture',
                  { class: 'va-image__content', 'aria-busy': c.value },
                  [
                    ue.$slots.sources ? L(ue.$slots, 'sources', { key: 0 }) : W('', !0),
                    w.value
                      ? (C(),
                        A('img', le({ key: 1, ref_key: 'image', ref: a }, f(U), { onError: v, onLoad: m }), null, 16))
                      : W('', !0),
                  ],
                  8,
                  Zk,
                ),
                [[Aa, j.value]],
              ),
              ue.$slots.default && j.value ? (C(), A('div', eT, [L(ue.$slots, 'default')])) : W('', !0),
              d.value && (ue.$slots.error || x.value)
                ? (C(),
                  A('div', tT, [
                    L(ue.$slots, 'error', {}, () => [
                      ne(f(Nr), le(f(O), { onFallback: be[0] || (be[0] = (xe) => ue.$emit('fallback')) }), null, 16),
                    ]),
                  ]))
                : W('', !0),
              c.value && ue.$slots.loader ? (C(), A('div', nT, [L(ue.$slots, 'loader')])) : W('', !0),
              K.value
                ? (C(),
                  A('div', oT, [
                    L(ue.$slots, 'placeholder', {}, () => [
                      ue.$props.placeholderSrc
                        ? (C(), A('img', { key: 0, src: ue.$props.placeholderSrc, alt: '' }, null, 8, rT))
                        : W('', !0),
                    ]),
                  ]))
                : W('', !0),
            ]),
            _: 3,
          },
          16,
          ['style'],
        )
      )
    },
  }),
  _c = ye(aT),
  lT = re({
    name: 'VaHover',
    __name: 'VaHover',
    props: { ...Xg(!0), ...Le, disabled: { type: Boolean, default: !1 }, modelValue: { type: Boolean, default: !1 } },
    emits: [...Mt],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        { valueComputed: r } = vt(n, o),
        a = () => {
          n.disabled || (r.value = !0)
        },
        l = () => {
          n.disabled || (r.value = !1)
        }
      return (s, i) => (
        C(),
        A(
          'div',
          { class: 'va-hover', onMouseenter: a, onMouseleave: l },
          [L(s.$slots, 'default', pe(ke({ hover: f(r) })))],
          32,
        )
      )
    },
  }),
  xl = ye(lT),
  sT = ['mousedown', 'mousemove'],
  iT = ['touchstart', 'touchmove'],
  bc = { vertical: ['', 'all', 'vertical'], horizontal: ['', 'all', 'horizontal'] },
  uT = [...bc.vertical, 'up', 'down'],
  cT = [...bc.horizontal, 'left', 'right'],
  dT = {
    swipable: { type: Boolean, default: !1 },
    swipeDistance: { type: Number, default: 75 },
    swipeDirection: { type: String, default: 'all' },
  },
  mT = (e, t, n) => {
    const o = H(!1),
      r = on({ start: { x: 0, y: 0 }, end: { x: 0, y: 0 } }),
      a = on({ start: 0, end: 0 }),
      l = (g, h) => {
        let _
        if ((sT.includes(g.type) && (_ = g), iT.includes(g.type))) {
          const y = g
          _ = y.changedTouches[y.changedTouches.length - 1]
        }
        _ && ((r[h].x = _.pageX), (r[h].y = _.pageY), (a[h] = new Date().getTime()))
      },
      s = (g) => {
        !e.swipable || o.value || ((o.value = !0), l(g, 'start'))
      },
      i = (g) => {
        o.value && l(g, 'end')
      },
      u = () => {
        ;['start', 'end'].forEach((g) => {
          ;(r[g].x = 0), (r[g].y = 0), (a[g] = 0)
        }),
          (o.value = !1)
      },
      c = on({ vertical: !1, horizontal: !1 })
    vn(() => {
      ;(c.horizontal = cT.includes(e.swipeDirection)), (c.vertical = uT.includes(e.swipeDirection))
    })
    const d = (g) =>
        c[g === 'x' ? 'horizontal' : 'vertical'] && r.start[g] && r.end[g] ? Math.trunc(r.start[g] - r.end[g]) : 0,
      m = (g, h) => (h === e.swipeDirection || bc[g].includes(e.swipeDirection) ? h : ''),
      v = on({ direction: '', duration: 0 })
    return (
      ge(
        r,
        () => {
          const g = d('x'),
            h = d('y')
          if ((g || h) && [g, h].some((_) => Math.abs(_) >= e.swipeDistance)) {
            if (Math.abs(g) >= Math.abs(h) && c.horizontal) {
              const _ = g > 0 ? 'left' : 'right'
              v.direction = m('horizontal', _)
            } else if (Math.abs(g) < Math.abs(h) && c.vertical) {
              const _ = h > 0 ? 'down' : 'up'
              v.direction = m('vertical', _)
            }
            ;(v.duration = a.end - a.start), u()
          }
        },
        { deep: !0 },
      ),
      ge(v, () => n(v), { deep: !0 }),
      e.swipable &&
        (ft(['touchstart', 'mousedown'], s, t),
        ft(['touchmove', 'mousemove'], i, t),
        ft(['touchcancel', 'mouseup', 'touchend', 'mouseleave'], u, t)),
      { swipeState: v }
    )
  },
  fT = ['aria-label'],
  pT = { key: 1, class: 'va-carousel__indicators' },
  vT = { class: 'va-carousel__content' },
  gT = ['aria-hidden', 'aria-current', 'aria-label'],
  Km = Qe(_c, ['src', 'alt']),
  hT = re({
    name: 'VaCarousel',
    __name: 'VaCarousel',
    props: {
      ...dT,
      ...Tt,
      ...Le,
      ...Km,
      stateful: { type: Boolean, default: !0 },
      modelValue: { type: Number, default: 0 },
      items: { type: Array, required: !0 },
      autoscroll: { type: Boolean, default: !1 },
      autoscrollInterval: { type: [Number, String], default: 5e3 },
      autoscrollPauseDuration: { type: [Number, String], default: 2e3 },
      infinite: { type: Boolean, default: !0 },
      fadeKeyframe: { type: String, default: 'va-carousel-fade-appear 1s' },
      arrows: { type: Boolean, default: !0 },
      indicators: { type: Boolean, default: !0 },
      indicatorTrigger: { type: String, default: 'click', validator: (e) => ['click', 'hover', 'none'].includes(e) },
      vertical: { type: Boolean, default: !1 },
      height: { type: String, default: '300px' },
      effect: { type: String, default: 'transition', validator: (e) => ['fade', 'transition'].includes(e) },
      color: { type: String, default: 'primary' },
      ratio: { type: [Number, String] },
      ariaLabel: Be('$t:carousel'),
      ariaPreviousLabel: Be('$t:goPreviousSlide'),
      ariaNextLabel: Be('$t:goNextSlide'),
      ariaGoToSlideLabel: Be('$t:goSlide'),
      ariaSlideOfLabel: Be('$t:slideOf'),
    },
    emits: [...Mt],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        { valueComputed: a } = vt(o, r, 'modelValue'),
        l = We('autoscrollInterval'),
        s = We('autoscrollPauseDuration'),
        i = We('ratio'),
        { goTo: u, next: c, prev: d, doShowNextButton: m, doShowPrevButton: v, doShowDirectionButtons: g } = qk(o, a),
        {
          withPause: h,
          computedSlidesStyle: _,
          slides: y,
        } = Yk(
          {
            items: o.items,
            autoscrollInterval: l.value,
            autoscrollPauseDuration: s.value,
            autoscroll: o.autoscroll,
            infinite: o.infinite,
            effect: o.effect,
            vertical: o.vertical,
            fadeKeyframe: o.fadeKeyframe,
          },
          a,
        ),
        b = p(() => o.items.length && o.items.every((N) => !!N && typeof N == 'object' && !!(N != null && N.src))),
        w = (N) => N === a.value,
        S = p(() => ({ animation: o.effect === 'fade' ? 'fadeKeyframe' : void 0 })),
        $ = je()
      mT(o, $, (N) => {
        switch (N.direction) {
          case 'right':
          case 'up':
            v.value && d()
            break
          case 'left':
          case 'down':
            m.value && c()
        }
      })
      const z = (N) =>
          o.indicatorTrigger === 'hover'
            ? { onmouseover: () => u(N) }
            : o.indicatorTrigger === 'click'
              ? { onclick: () => u(N) }
              : {},
        { tp: V, t: T } = ut(),
        { computedActiveColor: B, computedColor: K, computedHoverColor: j } = Xk(),
        U = it(Km),
        D = h(u),
        O = h(d),
        R = h(c)
      return (
        t({ currentSlide: a, goTo: u, next: c, prev: d, goToWithPause: D, prevWithPause: O, nextWithPause: R }),
        (N, x) => (
          C(),
          A(
            'div',
            {
              class: Pe([
                'va-carousel',
                { 'va-carousel--vertical': N.$props.vertical, [`va-carousel--${N.$props.effect}`]: !0 },
              ]),
              style: me({ height: f(i) ? 'auto' : e.height }),
              role: 'region',
              'aria-label': f(V)(N.$props.ariaLabel),
            },
            [
              N.$props.arrows && f(g)
                ? (C(),
                  A(
                    Te,
                    { key: 0 },
                    [
                      f(v)
                        ? (C(),
                          A(
                            'div',
                            {
                              key: 0,
                              class: 'va-carousel__arrow va-carousel__arrow--left',
                              onClick: x[0] || (x[0] = (...ce) => f(O) && f(O)(...ce)),
                              onKeydown:
                                x[1] ||
                                (x[1] = $e(
                                  Se((...ce) => f(O) && f(O)(...ce), ['stop']),
                                  ['enter'],
                                )),
                            },
                            [
                              L(N.$slots, 'prev-arrow', {}, () => [
                                ne(
                                  f(xl),
                                  { stateful: '' },
                                  {
                                    default: G(({ hover: ce }) => [
                                      ne(
                                        f(Xe),
                                        {
                                          color: f(ce ? j : K),
                                          icon: e.vertical ? 'va-arrow-up' : 'va-arrow-left',
                                          'aria-label': f(V)(N.$props.ariaPreviousLabel),
                                        },
                                        null,
                                        8,
                                        ['color', 'icon', 'aria-label'],
                                      ),
                                    ]),
                                    _: 1,
                                  },
                                ),
                              ]),
                            ],
                            32,
                          ))
                        : W('', !0),
                      f(m)
                        ? (C(),
                          A(
                            'div',
                            {
                              key: 1,
                              class: 'va-carousel__arrow va-carousel__arrow--right',
                              onClick: x[2] || (x[2] = (...ce) => f(R) && f(R)(...ce)),
                              onKeydown:
                                x[3] ||
                                (x[3] = $e(
                                  Se((...ce) => f(R) && f(R)(...ce), ['stop']),
                                  ['enter'],
                                )),
                            },
                            [
                              L(N.$slots, 'next-arrow', {}, () => [
                                ne(
                                  f(xl),
                                  { stateful: '' },
                                  {
                                    default: G(({ hover: ce }) => [
                                      ne(
                                        f(Xe),
                                        {
                                          color: f(ce ? j : K),
                                          icon: e.vertical ? 'va-arrow-down' : 'va-arrow-right',
                                          'aria-label': f(V)(N.$props.ariaNextLabel),
                                        },
                                        null,
                                        8,
                                        ['color', 'icon', 'aria-label'],
                                      ),
                                    ]),
                                    _: 1,
                                  },
                                ),
                              ]),
                            ],
                            32,
                          ))
                        : W('', !0),
                    ],
                    64,
                  ))
                : W('', !0),
              N.$props.indicators
                ? (C(),
                  A('div', pT, [
                    (C(!0),
                    A(
                      Te,
                      null,
                      Ue(
                        N.$props.items,
                        (ce, ue) => (
                          C(),
                          A(
                            'div',
                            le(
                              {
                                class: ['va-carousel__indicator', { 'va-carousel__indicator--active': w(ue) }],
                                key: ue,
                              },
                              z(ue),
                            ),
                            [
                              L(
                                N.$slots,
                                'indicator',
                                pe(ke({ item: ce, index: ue, goTo: f(D), isActive: w(ue) })),
                                () => [
                                  ne(
                                    f(xl),
                                    { stateful: '' },
                                    {
                                      default: G(({ hover: be }) => [
                                        ne(
                                          f(Xe),
                                          {
                                            'aria-label': f(V)(N.$props.ariaGoToSlideLabel, { index: ue + 1 }),
                                            round: '',
                                            color: w(ue) ? f(B) : f(be ? j : K),
                                          },
                                          { default: G(() => [Fe(Ae(ue + 1), 1)]), _: 2 },
                                          1032,
                                          ['aria-label', 'color'],
                                        ),
                                      ]),
                                      _: 2,
                                    },
                                    1024,
                                  ),
                                ],
                              ),
                            ],
                            16,
                          )
                        ),
                      ),
                      128,
                    )),
                  ]))
                : W('', !0),
              Y('div', vT, [
                Y(
                  'div',
                  { ref_key: 'slidesContainer', ref: $, class: 'va-carousel__slides', style: me(f(_)), role: 'list' },
                  [
                    (C(!0),
                    A(
                      Te,
                      null,
                      Ue(
                        f(y),
                        (ce, ue) => (
                          C(),
                          A(
                            'div',
                            {
                              key: ce,
                              role: 'listitem',
                              class: 'va-carousel__slide',
                              style: me(S.value),
                              'aria-hidden': !w(ue),
                              'aria-current': w(ue),
                              'aria-label': f(V)(N.$props.ariaSlideOfLabel, { index: ue + 1, length: f(y).length }),
                            },
                            [
                              L(
                                N.$slots,
                                'default',
                                pe(ke({ item: ce, index: ue, goTo: f(D), isActive: w(ue) })),
                                () => [
                                  ne(
                                    f(_c),
                                    le(f(U), { src: b.value ? ce.src : ce, alt: b.value ? ce.alt : '', draggable: !1 }),
                                    null,
                                    16,
                                    ['src', 'alt'],
                                  ),
                                ],
                              ),
                            ],
                            12,
                            gT,
                          )
                        ),
                      ),
                      128,
                    )),
                  ],
                  4,
                ),
              ]),
            ],
            14,
            fT,
          )
        )
      )
    },
  }),
  yT = ye(hT),
  zc = {
    ...Tt,
    ...Ja,
    ...ro,
    arrayValue: { type: [String, Boolean, Object, Number], default: null },
    label: { type: String, default: '' },
    leftLabel: { type: Boolean, default: !1 },
    trueValue: { type: null, default: !0 },
    falseValue: { type: null, default: !1 },
    indeterminate: { type: Boolean, default: !1 },
    indeterminateValue: { type: null, default: null },
    disabled: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
  },
  xs = [...Bo, 'update:modelValue', 'focus', 'blur'],
  _T = (e) => {
    const t = [e.falseValue, e.trueValue]
    if ((e.indeterminate && t.push(e.indeterminateValue), new Set(t).size !== t.length))
      throw new Error(
        'falseValue, trueValue, indeterminateValue props should have strictly different values, which is not the case.',
      )
  },
  Cc = (e, t, { input: n, label: o, container: r }) => {
    _T(e)
    const a = () =>
        v(() => {
          t('update:modelValue', !1), g()
        }),
      l = () => {
        var K
        ;(K = St(n.value)) == null || K.focus()
      },
      { valueComputed: s } = vt(e, t),
      {
        computedError: i,
        computedErrorMessages: u,
        validate: c,
        validationAriaAttributes: d,
        listeners: m,
        withoutValidation: v,
        resetValidation: g,
        isDirty: h,
        isTouched: _,
        isError: y,
        isLoading: b,
        isValid: w,
      } = ao(e, t, { reset: a, focus: l, value: s }),
      { isFocused: S } = lo(),
      $ = (K) => {
        t('blur', K), (S.value = !1), m.onBlur()
      },
      k = (K) => {
        ;(S.value = !0), t('focus', K)
      },
      z = p(() => e.indeterminate && s.value === e.indeterminateValue),
      V = p(() => e.arrayValue !== void 0 && e.arrayValue !== null),
      T = p(() => {
        var K
        return V.value ? ((K = e.modelValue) == null ? void 0 : K.includes(e.arrayValue)) : s.value === e.trueValue
      })
    return {
      isDirty: h,
      isTouched: _,
      isError: y,
      isLoading: b,
      isValid: w,
      isChecked: T,
      isIndeterminate: z,
      onBlur: $,
      onFocus: k,
      toggleSelection: () => {
        if (!(e.readonly || e.disabled || e.loading)) {
          if (V.value) {
            e.modelValue
              ? Array.isArray(e.modelValue)
                ? e.modelValue.includes(e.arrayValue)
                  ? t(
                      'update:modelValue',
                      e.modelValue.filter((K) => K !== e.arrayValue),
                    )
                  : t('update:modelValue', e.modelValue.concat(e.arrayValue))
                : t('update:modelValue', e.modelValue === e.arrayValue ? [] : [e.modelValue, e.arrayValue])
              : t('update:modelValue', [e.arrayValue])
            return
          }
          if (e.indeterminate) {
            z.value ? (s.value = e.trueValue) : T.value ? (s.value = e.falseValue) : (s.value = e.indeterminateValue)
            return
          }
          T.value ? (s.value = e.falseValue) : (s.value = e.trueValue)
        }
      },
      reset: a,
      focus: l,
      computedError: i,
      computedErrorMessages: u,
      validationAriaAttributes: d,
    }
  }
var qm
function Qr() {
  const e = H(!1)
  let t = !1
  return {
    hasKeyboardFocus: e,
    keyboardFocusListeners: {
      mousedown: () => {
        t = !0
      },
      focus: () => {
        t || (e.value = !0), (t = !1)
      },
      blur: () => {
        ;(e.value = !1), (t = !1)
      },
    },
  }
}
let du = !1
;(qm = Ng()) == null ||
  qm.addEventListener('mousedown', () => {
    ;(du = !0),
      setTimeout(() => {
        du = !1
      }, 300)
  })
function bT() {
  const e = H(!1)
  return {
    hasKeyboardFocus: e,
    keyboardFocusListeners: {
      focus: () => {
        du || (e.value = !0)
      },
      blur: () => {
        e.value = !1
      },
    },
  }
}
const zT = ['id', 'indeterminate', 'value', 'checked'],
  CT = ['for'],
  Ym = [Boolean, Array, String, Object],
  ST = re({
    name: 'VaCheckbox',
    __name: 'VaCheckbox',
    props: {
      ...zc,
      ...Le,
      modelValue: { type: Ym, default: !1 },
      color: { type: String, default: 'primary' },
      checkedIcon: { type: String, default: 'va-check' },
      indeterminate: { type: Boolean, default: !1 },
      indeterminateValue: { type: Ym, default: null },
      indeterminateIcon: { type: String, default: 'remove' },
      id: { type: String, default: '' },
      name: { type: String, default: '' },
      ariaLabel: { type: String, default: void 0 },
      vertical: { type: Boolean, default: !1 },
    },
    emits: xs,
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        a = { container: je(), input: je(), label: je() },
        {
          isChecked: l,
          computedError: s,
          isIndeterminate: i,
          computedErrorMessages: u,
          validationAriaAttributes: c,
          toggleSelection: d,
          onBlur: m,
          onFocus: v,
          isDirty: g,
          isTouched: h,
          isError: _,
          isLoading: y,
          isValid: b,
        } = Cc(o, r, a),
        { getColor: w } = Re(),
        { hasKeyboardFocus: S, keyboardFocusListeners: $ } = Qr(),
        { textColorComputed: k } = Vt(p(() => w(o.color))),
        z = p(() => l.value || i.value),
        V = p(() => ({
          'va-checkbox--selected': l.value,
          'va-checkbox--readonly': o.readonly,
          'va-checkbox--disabled': o.disabled,
          'va-checkbox--indeterminate': o.indeterminate,
          'va-checkbox--error': s.value,
          'va-checkbox--left-label': o.leftLabel,
          'va-checkbox--on-keyboard-focus': S.value,
        })),
        T = () => {
          switch (!0) {
            case !o.label:
              return ''
            case o.vertical:
              return 'var(--va-checkbox-vertical-padding)'
            case !!o.arrayValue:
              return 'var(--va-checkbox-horizontal-padding)'
            case o.leftLabel:
              return 'var(--va-checkbox-right-padding)'
            default:
              return 'var(--va-checkbox-left-padding)'
          }
        },
        B = p(() => ({ color: s.value ? w('danger') : o.success ? w('success') : '', padding: T() })),
        K = p(() => {
          const x = { background: z.value ? w(o.color) : '', borderColor: z.value ? w(o.color) : '' }
          return s.value && (x.borderColor = w('danger')), o.success && (x.borderColor = w('success')), x
        }),
        j = p(() => (o.indeterminate && i.value ? o.indeterminateIcon : o.checkedIcon)),
        U = Fn(),
        D = p(() => o.id || String(U)),
        O = p(() => o.name || String(U)),
        R = p(() => ({
          name: O.value,
          disabled: o.disabled,
          readonly: o.readonly,
          tabindex: o.disabled ? -1 : 0,
          'aria-label': o.ariaLabel,
          'aria-disabled': o.disabled,
          'aria-readOnly': o.readonly,
          'aria-checked': z.value,
          ...c.value,
        })),
        N = p(() => (o.vertical ? '--va-checkbox-display-flex' : 'var(--va-checkbox-display)'))
      return (
        t({ toggleSelection: d, isDirty: g, isTouched: h, isError: _, isLoading: y, isValid: b }),
        (x, ce) => (
          C(),
          ee(
            f($s),
            {
              class: Pe(['va-checkbox', V.value]),
              disabled: x.disabled,
              success: x.success,
              messages: x.messages,
              error: f(s),
              'error-messages': f(u),
              'error-count': x.errorCount,
              style: me(`--va-display-val: ${String(N.value)}`),
            },
            {
              default: G(() => [
                Y(
                  'div',
                  {
                    ref: 'container',
                    class: 'va-checkbox__input-container',
                    onClick: ce[6] || (ce[6] = (...ue) => f(d) && f(d)(...ue)),
                    onBlur: ce[7] || (ce[7] = (...ue) => f(m) && f(m)(...ue)),
                  },
                  [
                    Y(
                      'div',
                      {
                        class: 'va-checkbox__square',
                        style: me(K.value),
                        onSelectstart: ce[4] || (ce[4] = Se(() => {}, ['prevent'])),
                      },
                      [
                        Y(
                          'input',
                          le(
                            {
                              ref: 'input',
                              type: 'checkbox',
                              class: 'va-checkbox__input',
                              id: D.value,
                              indeterminate: e.indeterminate,
                              value: x.label,
                              checked: z.value,
                            },
                            R.value,
                            yn(f($), !0),
                            {
                              onFocus: ce[0] || (ce[0] = (...ue) => f(v) && f(v)(...ue)),
                              onBlur: ce[1] || (ce[1] = (...ue) => f(m) && f(m)(...ue)),
                              onClick: ce[2] || (ce[2] = Se(() => {}, ['stop', 'prevent'])),
                              onKeypress: ce[3] || (ce[3] = Se((...ue) => f(d) && f(d)(...ue), ['prevent'])),
                            },
                          ),
                          null,
                          16,
                          zT,
                        ),
                        z.value
                          ? (C(),
                            ee(f(Ke), { key: 0, class: 'va-checkbox__icon', name: j.value, color: f(k) }, null, 8, [
                              'name',
                              'color',
                            ]))
                          : W('', !0),
                      ],
                      36,
                    ),
                    x.label || x.$slots.label
                      ? (C(),
                        A(
                          'label',
                          {
                            key: 0,
                            ref: 'label',
                            class: 'va-checkbox__label',
                            for: D.value,
                            style: me(B.value),
                            onBlur: ce[5] || (ce[5] = (...ue) => f(m) && f(m)(...ue)),
                          },
                          [L(x.$slots, 'label', {}, () => [Fe(Ae(x.label), 1)])],
                          44,
                          CT,
                        ))
                      : W('', !0),
                  ],
                  544,
                ),
              ]),
              _: 3,
            },
            8,
            ['class', 'disabled', 'success', 'messages', 'error', 'error-messages', 'error-count', 'style'],
          )
        )
      )
    },
  }),
  ol = ye(ST),
  wT = { class: 'va-chip__content' },
  $T = re({
    name: 'VaChip',
    __name: 'VaChip',
    props: {
      ...gr,
      ...lc,
      ...Tt,
      ...Le,
      modelValue: { type: Boolean, default: !0 },
      closeable: { type: Boolean, default: !1 },
      outline: { type: Boolean, default: !1 },
      disabled: { type: Boolean, default: !1 },
      readonly: { type: Boolean, default: !1 },
      square: { type: Boolean, default: !1 },
      shadow: { type: Boolean, default: !1 },
      flat: { type: Boolean, default: !1 },
      icon: { type: String, default: '' },
      tag: { type: String, default: 'span' },
      size: { type: String, default: 'medium', validator: (e) => ['small', 'medium', 'large'].includes(e) },
      ariaCloseLabel: Be('$t:close'),
    },
    emits: [...Mt, 'focus'],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        { getColor: a } = Re(),
        l = p(() => a(o.color)),
        s = p(() => (o.outline ? l.value : '')),
        i = p(() => !!(o.outline || o.flat)),
        { textColorComputed: u } = Vt(l, i),
        { hasKeyboardFocus: c, keyboardFocusListeners: d } = Qr(),
        m = p(() => {
          if (!(!o.shadow || o.flat || o.outline || o.disabled || c.value)) return `0 0.125rem 0.19rem 0 ${Pg(l.value)}`
        }),
        { valueComputed: v } = vt(o, r),
        { tagComputed: g, hrefComputed: h } = No(o),
        { isHovered: _, onMouseEnter: y, onMouseLeave: b } = Qa(),
        w = () => {
          o.disabled || (v.value = !1)
        },
        S = p(() => o.size),
        $ = p(() => (o.disabled ? -1 : 0)),
        k = rt('va-chip', () => ({
          ...yt(o, ['disabled', 'readonly', 'square']),
          small: o.size === 'small',
          large: o.size === 'large',
        })),
        z = p(() => {
          const T = { color: u.value, borderColor: s.value, background: '', boxShadow: m.value }
          return (
            o.outline || o.flat
              ? c.value
                ? (T.background = Eg(l.value))
                : !o.readonly && _.value && (T.background = Ag(l.value))
              : (T.background = l.value),
            T
          )
        }),
        { tp: V } = ut()
      return (
        t({ close: w }),
        (T, B) =>
          f(v)
            ? (C(),
              ee(
                an(f(g)),
                {
                  key: 0,
                  class: Pe(['va-chip', f(k)]),
                  href: f(h),
                  target: T.target,
                  to: T.to,
                  replace: T.replace,
                  exact: T.exact,
                  'active-class': T.activeClass,
                  'exact-active-class': T.exactActiveClass,
                  style: me(z.value),
                },
                {
                  default: G(() => [
                    Y(
                      'span',
                      le(
                        {
                          class: 'va-chip__inner',
                          onFocus: B[0] || (B[0] = (K) => T.$emit('focus')),
                          onMouseenter: B[1] || (B[1] = (...K) => f(y) && f(y)(...K)),
                          onMouseleave: B[2] || (B[2] = (...K) => f(b) && f(b)(...K)),
                        },
                        yn(f(d), !0),
                      ),
                      [
                        e.icon
                          ? (C(),
                            ee(f(Ke), { key: 0, class: 'va-chip__icon', name: e.icon, size: S.value }, null, 8, [
                              'name',
                              'size',
                            ]))
                          : W('', !0),
                        Y('span', wT, [L(T.$slots, 'default')]),
                        e.closeable
                          ? (C(),
                            ee(
                              f(Ke),
                              {
                                key: 1,
                                role: 'button',
                                name: 'va-close',
                                class: 'va-chip__close-icon',
                                'aria-label': f(V)(T.$props.ariaCloseLabel),
                                tabindex: $.value,
                                size: S.value,
                                onClick: Se(w, ['stop']),
                                onKeydown: [$e(Se(w, ['stop']), ['enter']), $e(Se(w, ['stop']), ['space'])],
                              },
                              null,
                              8,
                              ['aria-label', 'tabindex', 'size', 'onKeydown'],
                            ))
                          : W('', !0),
                      ],
                      16,
                    ),
                  ]),
                  _: 3,
                },
                8,
                ['href', 'target', 'to', 'replace', 'exact', 'active-class', 'exact-active-class', 'class', 'style'],
              ))
            : W('', !0)
      )
    },
  }),
  kT = ye($T),
  TT = { class: 'va-collapse__header__text' },
  VT = ['id', 'aria-labelledby'],
  PT = { class: 'va-collapse__content' },
  AT = re({
    name: 'VaCollapse',
    __name: 'VaCollapse',
    props: {
      ...Le,
      ...Tt,
      modelValue: { type: Boolean, default: !1 },
      disabled: { type: Boolean, default: !1 },
      header: { type: String, default: '' },
      icon: { type: String, default: '' },
      color: { type: String, default: void 0 },
      bodyColor: { type: String, default: void 0 },
      textColor: { type: String, default: '' },
      bodyTextColor: { type: String, default: '' },
      iconColor: { type: String, default: 'secondary' },
      colorAll: { type: Boolean, default: !1 },
      stateful: { type: Boolean, default: !0 },
    },
    emits: ['update:modelValue', ...xs],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        a = je(),
        { valueComputed: l } = vt(o, r, 'modelValue'),
        { getColor: s, getTextColor: i, setHSLAColor: u } = Re(),
        { accordionProps: c, accordionItemValue: d } = F1(),
        m = p({
          get() {
            return l.userProvided || sn(d) ? l.value : d.value
          },
          set(O) {
            sn(d) || (d.value = O), (l.value = O)
          },
        })
      l.userProvided && !sn(d) && (d.value = l.value)
      const v = H()
      ar([a], ([O]) => {
        v.value = O.contentRect.height ?? 0
      })
      const g = p(() => (m.value ? v.value : 0)),
        h = () => {
          const O = (g.value / 1e3) * 0.2
          return `${O > 0.2 ? O : 0.2}s`
        },
        _ = p(() => (o.bodyColor ? s(o.bodyColor) : o.color && o.colorAll ? u(s(o.color), { a: 0.07 }) : void 0)),
        y = p(() => (o.color ? s(o.color) : void 0)),
        b = Fn(),
        w = p(() => `header-${b}`),
        S = p(() => `panel-${b}`),
        $ = p(() => (o.disabled ? -1 : 0)),
        k = p(() => ({
          id: w.value,
          tabindex: $.value,
          'aria-controls': S.value,
          'aria-expanded': m.value,
          'aria-disabled': o.disabled,
          role: 'button',
        })),
        z = H(!1)
      ge(g, (O, R) => {
        R !== void 0 && z.value !== !0 && (z.value = !0)
      })
      const V = (O) => {
          O.propertyName === 'height' && O.target === O.currentTarget && (z.value = !1)
        },
        T = rt('va-collapse', () => ({
          ...yt(o, ['disabled']),
          expanded: m.value,
          active: m.value,
          popout: !!(c.value.popout && m.value),
          inset: !!(c.value.inset && m.value),
          'height-changing': z.value,
          'colored-body': !!_.value,
          'colored-header': !!y.value,
        })),
        B = () => {
          o.disabled || (m.value = !m.value)
        },
        { textColorComputed: K } = Vt(y),
        j = p(() => ({ color: K.value, backgroundColor: y.value })),
        U = p(() => !!(m.value || z.value)),
        D = p(() => ({
          height: `${g.value}px`,
          transitionDuration: h(),
          background: m.value ? _.value : '',
          color: o.bodyTextColor ? s(o.bodyTextColor) : _.value ? s(i(_.value)) : 'currentColor',
        }))
      return (
        t({ toggle: B }),
        (O, R) => (
          C(),
          A(
            'div',
            { class: Pe(['va-collapse', f(T)]) },
            [
              Y(
                'div',
                { class: 'va-collapse__header-wrapper', onClick: B, onKeydown: [$e(B, ['enter']), $e(B, ['space'])] },
                [
                  L(
                    O.$slots,
                    'header',
                    pe(
                      ke({
                        value: m.value,
                        bind: k.value,
                        attributes: k.value,
                        attrs: k.value,
                        iconAttrs: {
                          class: [
                            'va-collapse__expand-icon',
                            m.value ? 'a-collapse__expand-icon--expanded' : 'a-collapse__expand-icon--collapsed',
                          ],
                        },
                        text: e.header,
                      }),
                    ),
                    () => [
                      Y(
                        'div',
                        le(k.value, { class: 'va-collapse__header', style: j.value }),
                        [
                          e.icon
                            ? (C(),
                              ee(f(Ke), { key: 0, class: 'va-collapse__header__icon', name: e.icon }, null, 8, [
                                'name',
                              ]))
                            : W('', !0),
                          L(O.$slots, 'header-content', pe(ke({ header: e.header })), () => [
                            Y('div', TT, Ae(e.header), 1),
                          ]),
                          L(O.$slots, 'expand-icon', {}, () => [
                            ne(
                              f(Ke),
                              {
                                class: Pe([
                                  'va-collapse__expand-icon',
                                  m.value
                                    ? 'va-collapse__expand-icon--expanded'
                                    : 'va-collapse__expand-icon--collapsed',
                                ]),
                                name: 'va-arrow-down',
                              },
                              null,
                              8,
                              ['class'],
                            ),
                          ]),
                        ],
                        16,
                      ),
                    ],
                  ),
                ],
                32,
              ),
              Y(
                'div',
                {
                  class: Pe([
                    'va-collapse__body-wrapper',
                    { 'va-collapse__body-wrapper--bordered': !O.$slots.body && !O.$slots.header },
                  ]),
                  style: me(D.value),
                  onTransitionend: V,
                },
                [
                  U.value
                    ? (C(),
                      A(
                        'div',
                        {
                          key: 0,
                          class: 'va-collapse__body',
                          ref_key: 'body',
                          ref: a,
                          role: 'region',
                          id: S.value,
                          'aria-labelledby': w.value,
                        },
                        [
                          L(O.$slots, 'body', {}, () => [
                            Y('div', PT, [L(O.$slots, 'default', {}, () => [L(O.$slots, 'content')])]),
                          ]),
                        ],
                        8,
                        VT,
                      ))
                    : W('', !0),
                ],
                38,
              ),
            ],
            2,
          )
        )
      )
    },
  }),
  ET = ye(AT),
  IT = re({
    name: 'VaColorIndicator',
    __name: 'VaColorIndicator',
    props: {
      ...Tt,
      ...Le,
      modelValue: { type: Boolean, default: null },
      color: { type: String, default: '' },
      square: { type: Boolean, default: !1 },
      size: { type: String, default: '1rem' },
    },
    emits: [...Mt],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        { valueComputed: r } = vt(n, o),
        { getColor: a } = Re(),
        { hasKeyboardFocus: l, keyboardFocusListeners: s } = Qr(),
        i = p(() => a(n.color)),
        u = p(() => (n.square ? '0px' : '50%')),
        c = p(() => ({ backgroundColor: i.value, height: n.size, width: n.size })),
        d = p(() => ({ 'va-color-indicator--selected': r.value, 'va-color-indicator--on-keyboard-focus': l.value })),
        m = () => {
          r.value = !r.value
        }
      return (v, g) => (
        C(),
        A(
          'div',
          le(
            {
              class: ['va-color-indicator', d.value],
              style: [c.value, `--va-border-radius-computed: ${String(u.value)}`],
              onClick: m,
              onKeydown: [$e(m, ['enter']), $e(m, ['space'])],
            },
            yn(f(s), !0),
          ),
          [Y('div', { class: 'va-color-indicator__core', style: me(c.value) }, null, 4)],
          16,
        )
      )
    },
  }),
  Sc = ye(IT),
  xT = { key: 0, class: 'va-input-label__required-mark' },
  Lh = re({
    name: 'VaInputLabel',
    __name: 'VaInputLabel',
    props: {
      label: { type: String, default: '' },
      requiredMark: { type: Boolean, default: !1 },
      color: { type: String, default: 'primary' },
    },
    setup(e) {
      const { getColor: t } = Re()
      return (n, o) => (
        C(),
        A(
          'label',
          { 'aria-hidden': 'true', class: 'va-input-label', style: me({ color: f(t)(n.$props.color, void 0, !0) }) },
          [
            L(
              n.$slots,
              'default',
              pe(ke({ label: e.label, requiredMark: e.requiredMark, color: f(t)(n.$props.color) })),
              () => [Fe(Ae(e.label) + ' ', 1), e.requiredMark ? (C(), A('span', xT, ' * ')) : W('', !0)],
            ),
          ],
          4,
        )
      )
    },
  }),
  OT = {
    label: { type: String, default: '' },
    inputAriaLabel: Be('$t:inputField'),
    inputAriaLabelledby: { type: String },
    inputAriaDescribedby: { type: String },
  },
  LT = (e) => {
    const t = Fn(),
      n = `input-label-${t}`,
      o = `input-character-count-${t}`,
      r = p(() => ({
        'aria-label': e.label !== '' ? e.label : e.inputAriaLabel,
        'aria-labelledby': e.inputAriaLabelledby ? e.inputAriaLabelledby : n,
        'aria-describedby': e.inputAriaDescribedby ? e.inputAriaDescribedby : o,
      }))
    return { labelId: n, characterCountId: o, ariaAttributes: r }
  },
  BT = (e) =>
    re({
      name: 'ProxySlots',
      props: { inheritSlots: { type: Array, required: !0 } },
      render() {
        var t
        const n = ((t = this.$parent) == null ? void 0 : t.$slots) || {},
          r = (this.$props.inheritSlots || Object.keys(n)).reduce((a, l) => (n[l] && (a[l] = n[l]), a), {})
        return Ze(e, this.$attrs, { ...r, ...this.$slots })
      },
    }),
  Ro = { disabled: { type: Boolean, default: !1 }, readonly: { type: Boolean, default: !1 } },
  Bh = (e, t) => ({
    computedClasses: rt(
      e,
      p(() => yt(t, ['disabled', 'readonly'])),
    ),
  }),
  wc = (e) => {
    const t = Gg(),
      n = mc(e ? Yr(e) : void 0)
    let o = null
    const r = p({
      get() {
        var a
        if (!t.value) return !1
        if (t.value === n.value) return !0
        const l = (a = n.value) == null ? void 0 : a.contains(t.value)
        return l && (o = t.value), l
      },
      set(a) {
        var l
        let s = o ?? n.value
        ;((l = n.value) != null && l.contains(s)) || (s = n.value), a ? s == null || s.focus() : s == null || s.blur()
      },
    })
    return Object.assign(r, {
      focusIfNothingIfFocused: () => {
        t.value === document.body && (r.value = !0)
      },
      focusPreviousElement: () => {
        o ? o.focus() : document.body.focus()
      },
    })
  },
  Xm = Qe(Lh),
  NT = re({
    name: 'VaInputWrapper',
    components: { VaMessageList: BT(ws), VaIcon: Ke, VaInputLabel: Lh },
    props: {
      ...Le,
      ...OT,
      ...Ro,
      ...ro,
      ...Xm,
      modelValue: { type: null, default: '' },
      counter: { type: Boolean },
      maxLength: { type: [Number, String], default: void 0 },
      label: { type: String, default: '' },
      placeholder: { type: String, default: '' },
      color: { type: String, default: 'primary' },
      background: { type: String },
      success: { type: Boolean, default: !1 },
      loading: { type: Boolean, default: !1 },
      requiredMark: { type: Boolean, default: !1 },
      innerLabel: { type: Boolean, default: !1 },
    },
    emits: [
      'click',
      'click-prepend',
      'click-append',
      'click-prepend-inner',
      'click-append-inner',
      'click-field',
      'update:modelValue',
    ],
    setup(e, { emit: t, slots: n }) {
      const { getColor: o } = Re(),
        [r] = rr('modelValue', e, t, ''),
        a = H(),
        l = wc(),
        s = p(() => (e.counter && typeof r.value == 'string' ? r.value.length : void 0)),
        i = rt('va-input-wrapper', () => ({
          ...yt(e, ['success', 'error', 'disabled', 'readonly']),
          focused: !!l.value,
          labeled: !!(e.label || n.label),
          labeledInner: !!(e.label || n.label) && e.innerLabel,
        })),
        u = p(() => o(e.color)),
        c = p(() => (e.background ? o(e.background) : '#ffffff00')),
        d = p(() => (e.error ? e.errorMessages : e.messages)),
        { textColorComputed: m } = Vt(c),
        v = We('maxLength'),
        g = p(() => (e.error ? 'danger' : e.success ? 'success' : '')),
        h = p(() => (e.error ? Number(e.errorCount) : 99)),
        _ = p(() => s.value !== void 0),
        y = p(() => (v.value !== void 0 ? `${s.value}/${v.value}` : s.value)),
        { labelId: b, characterCountId: w, ariaAttributes: S } = LT(e),
        $ = it(Xm)
      return {
        inputRef: a,
        focus: () => {
          l.value = !0
        },
        blur: () => {
          l.value = !1
        },
        labelId: b,
        characterCountId: w,
        ariaAttributes: S,
        vModel: r,
        counterValue: s,
        vaInputLabelProps: $,
        wrapperClass: i,
        textColorComputed: m,
        isCounterVisible: _,
        counterComputed: y,
        colorComputed: u,
        backgroundComputed: c,
        messagesColor: g,
        messagesComputed: d,
        errorLimit: h,
      }
    },
  }),
  RT = { class: 'va-input-wrapper__fieldset va-input-wrapper__size-keeper' },
  DT = { class: 'va-input-wrapper__container' },
  MT = { class: 'va-input-wrapper__text' },
  FT = ['placeholder', 'readonly', 'disabled'],
  jT = ['id'],
  HT = { class: 'va-input-wrapper__counter' }
function UT(e, t, n, o, r, a) {
  const l = Je('VaInputLabel'),
    s = Je('va-icon'),
    i = Je('va-message-list')
  return (
    C(),
    A(
      'div',
      {
        class: Pe(['va-input-wrapper', e.wrapperClass]),
        onClick: t[6] || (t[6] = (u) => e.$emit('click', u)),
        style: me(
          `--va-background-computed: ${String(e.backgroundComputed)};--va-color-computed: ${String(
            e.colorComputed,
          )};--va-text-color-computed: ${String(e.textColorComputed)}`,
        ),
      },
      [
        Y('fieldset', RT, [
          ne(
            i,
            {
              color: e.messagesColor,
              'model-value': e.messagesComputed,
              limit: e.errorLimit,
              'inherit-slots': ['message', 'messages'],
            },
            {
              default: G(({ ariaAttributes: u }) => [
                (e.$props.label || e.$slots.label) && !e.$props.innerLabel
                  ? (C(),
                    ee(
                      l,
                      le(
                        { key: 0, class: 'va-input-wrapper__label va-input-wrapper__label--outer' },
                        e.vaInputLabelProps,
                        { id: e.labelId },
                      ),
                      { default: G((c) => [L(e.$slots, 'label', pe(ke(c)))]), _: 3 },
                      16,
                      ['id'],
                    ))
                  : W('', !0),
                Y('div', DT, [
                  e.$slots.prepend
                    ? (C(),
                      A(
                        'div',
                        {
                          key: 0,
                          class: 'va-input-wrapper__prepend-inner',
                          onClick: t[0] || (t[0] = (c) => e.$emit('click-prepend')),
                        },
                        [L(e.$slots, 'prepend')],
                      ))
                    : W('', !0),
                  Y(
                    'div',
                    { onClick: t[4] || (t[4] = (c) => e.$emit('click-field', c)), class: 'va-input-wrapper__field' },
                    [
                      e.$slots.prependInner
                        ? (C(),
                          A(
                            'div',
                            {
                              key: 0,
                              class: 'va-input-wrapper__prepend-inner',
                              ref: 'container',
                              onClick: t[1] || (t[1] = (c) => e.$emit('click-prepend-inner', c)),
                            },
                            [L(e.$slots, 'prependInner')],
                            512,
                          ))
                        : W('', !0),
                      Y('div', MT, [
                        (e.$props.label || e.$slots.label) && e.$props.innerLabel
                          ? (C(),
                            ee(
                              l,
                              le(
                                { key: 0, class: 'va-input-wrapper__label va-input-wrapper__label--inner' },
                                e.vaInputLabelProps,
                                { id: e.labelId },
                              ),
                              { default: G((c) => [L(e.$slots, 'label', pe(ke(c)))]), _: 3 },
                              16,
                              ['id'],
                            ))
                          : W('', !0),
                        L(
                          e.$slots,
                          'default',
                          pe(ke({ ariaAttributes: { ...u, ...e.ariaAttributes }, value: e.vModel })),
                          () => [
                            Pn(
                              Y(
                                'input',
                                le(
                                  { ...u, ...e.ariaAttributes },
                                  {
                                    'onUpdate:modelValue': t[2] || (t[2] = (c) => (e.vModel = c)),
                                    ref: 'inputRef',
                                    placeholder: e.$props.placeholder,
                                    readonly: e.$props.readonly,
                                    disabled: e.$props.disabled,
                                  },
                                ),
                                null,
                                16,
                                FT,
                              ),
                              [[bs, e.vModel]],
                            ),
                          ],
                        ),
                      ]),
                      e.success
                        ? (C(),
                          ee(s, {
                            key: 1,
                            color: 'success',
                            name: 'va-check-circle',
                            class: 'va-input-wrapper__icon va-input-wrapper__icon--success',
                          }))
                        : W('', !0),
                      e.error
                        ? (C(),
                          ee(s, {
                            key: 2,
                            color: 'danger',
                            name: 'va-warning',
                            class: 'va-input-wrapper__icon va-input-wrapper__icon--error',
                          }))
                        : W('', !0),
                      e.$props.loading
                        ? (C(),
                          ee(
                            s,
                            {
                              key: 3,
                              color: e.$props.color,
                              name: 'va-loading',
                              spin: 'counter-clockwise',
                              class: 'va-input-wrapper__icon va-input-wrapper__icon--loading',
                            },
                            null,
                            8,
                            ['color'],
                          ))
                        : W('', !0),
                      L(e.$slots, 'icon'),
                      e.$slots.appendInner
                        ? (C(),
                          A(
                            'div',
                            {
                              key: 4,
                              class: 'va-input-wrapper__append-inner',
                              onClick: t[3] || (t[3] = (c) => e.$emit('click-append-inner', c)),
                            },
                            [L(e.$slots, 'appendInner')],
                          ))
                        : W('', !0),
                    ],
                  ),
                  e.$slots.append
                    ? (C(),
                      A(
                        'div',
                        {
                          key: 1,
                          class: 'va-input-wrapper__append-inner',
                          onClick: t[5] || (t[5] = (c) => e.$emit('click-append')),
                        },
                        [L(e.$slots, 'append')],
                      ))
                    : W('', !0),
                ]),
                e.isCounterVisible
                  ? (C(),
                    A(
                      'div',
                      { key: 1, class: 'va-input-wrapper__counter-wrapper', id: e.characterCountId },
                      [
                        L(
                          e.$slots,
                          'counter',
                          pe(ke({ valueLength: e.counterValue, maxLength: e.$props.maxLength })),
                          () => [Y('div', HT, Ae(e.counterComputed), 1)],
                        ),
                      ],
                      8,
                      jT,
                    ))
                  : W('', !0),
              ]),
              _: 3,
            },
            8,
            ['color', 'model-value', 'limit'],
          ),
        ]),
      ],
      6,
    )
  )
}
const WT = yr(NT, [['render', UT]]),
  un = ye(WT),
  GT =
    (...e) =>
    (...t) =>
      e.forEach((n) => n(...t)),
  KT = { autofocus: { type: Boolean, default: !1 } },
  qT = (e, t) => {
    const n = () => {
        Bn(St(e.value))
      },
      o = () => {
        Ts(St(e.value))
      }
    return (
      et(() => {
        t.autofocus && n()
      }),
      { focus: n, blur: o }
    )
  },
  rl = {
    clearable: { type: Boolean, default: !1 },
    clearableIcon: { type: String, default: 'va-clear' },
    clearValue: { type: String, default: '' },
  },
  Os = ['clear'],
  Ls = (e, t, n, o) => {
    const { isFocused: r, onFocus: a, onBlur: l } = lo(n),
      s = [null, void 0, e.clearValue],
      i = p(() => e.clearable && !e.disabled && !e.readonly && !s.includes(t.value)),
      u = p(() =>
        r != null && r.value
          ? e.color || 'primary'
          : o != null && o.value
            ? 'danger'
            : e.success
              ? 'success'
              : 'secondary',
      ),
      c = p(() => ({ name: e.clearableIcon, color: u.value, size: 'medium', tabindex: i.value ? 0 : -1 }))
    return { canBeCleared: i, clearIconColor: u, clearIconProps: c, onFocus: a, onBlur: l }
  },
  YT = (e) => {
    if (!Kr) return
    const t = ct()
    if (!t) throw new Error('`useDeprecated` hook must be used only inside of setup function!')
    e.forEach((n) => {
      const o = n()
      typeof o == 'string' && ot(`(${t.type.name} component) ${o}`)
    })
  },
  Jm = Qe(un),
  { createEmits: XT, createListeners: JT } = hr(['change', 'keyup', 'keypress', 'keydown', 'focus', 'blur', 'input']),
  { createEmits: QT, createListeners: ZT } = hr([
    'click',
    'click-prepend',
    'click-append',
    'click-prepend-inner',
    'click-append-inner',
  ]),
  eV = re({
    name: 'VaInput',
    __name: 'VaInput',
    props: {
      ...Jm,
      ...Ro,
      ...KT,
      ...ro,
      ...rl,
      ...Le,
      ...Tt,
      placeholder: { type: String, default: '' },
      tabindex: { type: [String, Number], default: 0 },
      modelValue: { type: [Number, String, null], default: '' },
      type: { type: String, default: 'text' },
      inputClass: { type: String, default: '' },
      pattern: { type: String },
      inputmode: { type: String, default: 'text' },
      counter: { type: Boolean, default: !1 },
      autocomplete: { type: String },
      ariaResetLabel: Be('$t:reset'),
      strictBindInputValue: { type: Boolean, default: !1 },
    },
    emits: ['update:modelValue', ...Bo, ...Os, ...XT(), ...QT(), ...Mt],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n
      YT([() => o.type !== 'textarea' || 'Use VaTextarea component instead of VaInput with type="textarea"'])
      const a = je(),
        { valueComputed: l } = vt(o, r, 'modelValue'),
        s = () =>
          $(() => {
            ;(l.value = o.clearValue), r('clear'), k()
          }),
        { focus: i, blur: u } = qT(a, o),
        c = Zt(),
        d = p(() => {
          const be = ['icon']
          return Object.keys(c).filter((xe) => !be.includes(xe))
        }),
        { tp: m } = ut(),
        {
          isValid: v,
          isTouched: g,
          isDirty: h,
          computedError: _,
          computedErrorMessages: y,
          listeners: { onBlur: b },
          validationAriaAttributes: w,
          isLoading: S,
          withoutValidation: $,
          resetValidation: k,
        } = ao(o, r, { reset: s, focus: i, value: l }),
        { modelValue: z } = Sn(o),
        { canBeCleared: V, clearIconProps: T } = Ls(o, z, a, _),
        B = JT(r),
        K = { ...B, onBlur: GT(b, B.onBlur) },
        j = (be) => {
          if (!o.strictBindInputValue) return
          const xe = a.value
          if (!xe) return
          const we = xe.selectionStart || 0,
            J = xe.selectionEnd || 0
          xe.value !== be && (xe.value = String(be)), xe.setSelectionRange(we, J)
        }
      ge(
        l,
        (be) => {
          j(String(be))
        },
        { immediate: !0 },
      ),
        ft(
          'input',
          () => {
            j(String(l.value))
          },
          a,
        )
      const U = p(() => (o.disabled ? -1 : o.tabindex)),
        D = Io(),
        O = p(() => ({
          'aria-label': o.inputAriaLabel || o.label,
          'aria-labelledby': o.inputAriaLabelledby,
          'aria-required': o.requiredMark,
          tabindex: U.value,
          class: o.inputClass,
          'aria-disabled': o.disabled,
          'aria-readonly': o.readonly,
          ...w.value,
        })),
        R = p(() => ({
          ...O.value,
          ...yt(o, ['type', 'disabled', 'readonly', 'placeholder', 'pattern', 'inputmode', 'name', 'autocomplete']),
          ...yt(D, ['minlength', 'minlength']),
        })),
        N = p(() => (o.counter && typeof l.value == 'string' ? l.value.length : void 0)),
        x = (be) => {
          !be.target ||
            !('tagName' in be.target) ||
            be.target.tagName === 'INPUT' ||
            be.target.tagName === 'TEXTAREA' ||
            i()
        },
        ce = it(Jm),
        ue = ZT(r)
      return (
        t({
          isValid: v,
          isDirty: h,
          isTouched: g,
          isLoading: S,
          computedError: _,
          computedErrorMessages: y,
          reset: s,
          focus: i,
          blur: u,
          value: l,
          withoutValidation: $,
          resetValidation: k,
        }),
        (be, xe) => (
          C(),
          ee(
            f(un),
            le(
              { ...f(ue), ...f(ce) },
              {
                class: ['va-input', be.$attrs.class],
                style: be.$attrs.style,
                loading: be.$props.loading || f(S),
                error: f(_),
                'error-messages': f(y),
                'error-count': be.errorCount,
                'counter-value': N.value,
                onClick: x,
              },
            ),
            Ht(
              {
                icon: G((we) => [
                  f(V)
                    ? (C(),
                      ee(
                        f(Ke),
                        le({ key: 0, role: 'button', 'aria-label': f(m)(be.$props.ariaResetLabel) }, f(T), {
                          onClick: Se(s, ['stop']),
                          onKeydown: [$e(Se(s, ['stop']), ['enter']), $e(Se(s, ['stop']), ['space'])],
                        }),
                        null,
                        16,
                        ['aria-label', 'onKeydown'],
                      ))
                    : W('', !0),
                  L(be.$slots, 'icon', pe(ke(we))),
                ]),
                default: G(() => [
                  be.$slots.content
                    ? W('', !0)
                    : Pn(
                        (C(),
                        A(
                          'input',
                          le(
                            { key: 0, ref_key: 'input', ref: a, class: 'va-input__content__input' },
                            { ...R.value, ...K },
                            { 'onUpdate:modelValue': xe[0] || (xe[0] = (we) => (nt(l) ? (l.value = we) : null)) },
                          ),
                          null,
                          16,
                        )),
                        [[bs, f(l)]],
                      ),
                ]),
                _: 2,
              },
              [Ue(d.value, (we) => ({ name: we, fn: G((J) => [L(be.$slots, we, pe(ke(J)))]) }))],
            ),
            1040,
            ['class', 'style', 'loading', 'error', 'error-messages', 'error-count', 'counter-value'],
          )
        )
      )
    },
  }),
  $c = ye(eV),
  tV = { class: 'va-color-input' },
  Qm = Qe($c),
  nV = re({
    name: 'VaColorInput',
    __name: 'VaColorInput',
    props: {
      ...Qm,
      ...Tt,
      ...Le,
      modelValue: { type: String, default: null },
      disabled: { type: Boolean, default: !1 },
      indicator: { type: String, default: 'dot', validator: (e) => ['dot', 'square'].includes(e) },
      ariaOpenColorPickerLabel: Be('$t:openColorPicker'),
    },
    emits: [...Mt],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        r = je(),
        { valueComputed: a } = vt(n, o),
        l = () => {
          var d
          return !n.disabled && ((d = r.value) == null ? void 0 : d.click())
        },
        s = p(() => (n.disabled ? -1 : 0)),
        i = p({ get: () => n.modelValue, set: rh((d) => o('update:modelValue', d), 500) }),
        u = it(Qm),
        { tp: c } = ut()
      return (d, m) => (
        C(),
        A('div', tV, [
          ne(
            f($c),
            le(f(u), {
              modelValue: f(a),
              'onUpdate:modelValue': m[0] || (m[0] = (v) => (nt(a) ? (a.value = v) : null)),
              class: 'va-color-input__input',
              tabindex: s.value,
            }),
            {
              appendInner: G(() => [
                ne(
                  f(Sc),
                  {
                    class: 'va-color-input__dot',
                    role: 'button',
                    'aria-label': f(c)(d.$props.ariaOpenColorPickerLabel),
                    'aria-disabled': d.$props.disabled,
                    tabindex: s.value,
                    color: f(a),
                    indicator: d.$props.indicator,
                    size: '16px',
                    onClick: l,
                    onKeydown: [$e(l, ['space']), $e(l, ['enter'])],
                  },
                  null,
                  8,
                  ['aria-label', 'aria-disabled', 'tabindex', 'color', 'indicator'],
                ),
              ]),
              _: 1,
            },
            16,
            ['modelValue', 'tabindex'],
          ),
          Pn(
            Y(
              'input',
              {
                ref_key: 'colorPicker',
                ref: r,
                type: 'color',
                class: 'va-color-input__hidden-input',
                'aria-hidden': 'true',
                tabindex: '-1',
                'onUpdate:modelValue': m[1] || (m[1] = (v) => (i.value = v)),
              },
              null,
              512,
            ),
            [[Wl, i.value]],
          ),
        ])
      )
    },
  }),
  oV = ye(nV),
  rV = ['aria-label'],
  aV = re({
    name: 'VaColorPalette',
    __name: 'VaColorPalette',
    props: {
      ...Tt,
      ...Le,
      modelValue: { type: String, default: null },
      palette: { type: Array, default: () => [] },
      indicator: { type: String, default: 'dot', validator: (e) => ['dot', 'square'].includes(e) },
      ariaLabel: Be('$t:colorSelection'),
      ariaIndicatorLabel: Be('$t:color'),
    },
    emits: [...Mt],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        { valueComputed: r } = vt(n, o),
        a = (s) => r.value === s,
        { tp: l } = ut()
      return (s, i) => (
        C(),
        A(
          'ul',
          { class: 'va-color-palette', role: 'listbox', 'aria-label': f(l)(s.$props.ariaLabel) },
          [
            (C(!0),
            A(
              Te,
              null,
              Ue(
                e.palette,
                (u, c) => (
                  C(),
                  ee(
                    f(Sc),
                    {
                      key: c,
                      role: 'option',
                      'aria-label': f(l)(s.$props.ariaIndicatorLabel, { color: u }),
                      'aria-selected': a(u),
                      tabindex: '0',
                      modelValue: a(u),
                      color: u,
                      square: e.indicator === 'square',
                      'onUpdate:modelValue': (d) => (r.value = u),
                    },
                    null,
                    8,
                    ['aria-label', 'aria-selected', 'modelValue', 'color', 'square', 'onUpdate:modelValue'],
                  )
                ),
              ),
              128,
            )),
          ],
          8,
          rV,
        )
      )
    },
  }),
  lV = ye(aV),
  sV = { name: 'VaContent' },
  iV = { class: 'va-typography-block' }
function uV(e, t, n, o, r, a) {
  return C(), A('div', iV, [L(e.$slots, 'default')])
}
const cV = yr(sV, [['render', uV]]),
  dV = ye(cV),
  mu = (e) => (typeof e == 'number' ? `${e}px` : e)
function mV(e) {
  ge(
    [() => e.step, () => e.min, () => e.max],
    () => {
      const n = Number(e.modelValue),
        o = Number(e.max),
        r = Number(e.min),
        a = Number(e.step)
      if (Number.isNaN(n)) {
        ot('The value is not a number or cannot be reduced to a number.')
        return
      }
      r && o && r > o && ot(`The maximum value (${o}) can not be less than the minimum value (${r}).`),
        r && n < r && ot(`The value of the counter (${n}) can not be less than the minimum value (${r}).`),
        o && n > o && ot(`The value of the counter (${n}) can not be greater than the maximum value (${o}).`),
        r &&
          o &&
          a > o - r &&
          ot(
            `The value of the step (${a}) can not be greater than the difference (${
              o - r
            }) between maximum value (${o}) and minimum value (${r}).`,
          )
    },
    { immediate: !0 },
  )
}
const Nh = (e) => Number(e.toPrecision(13)),
  fV = (e, t) => {
    const n = Nh(e % t)
    return n === 0 || n === t
  }
function Zm(e, t) {
  let n = -1,
    o = -1
  const r = () => {
      var s
      ;(s = t.onStart) == null || s.call(t),
        clearTimeout(n),
        (n = setTimeout(
          () => {
            o = setInterval(() => {
              var i
              return (i = t.onUpdate) == null ? void 0 : i.call(t)
            }, t.interval || 100)
          },
          f(t.delay) || 500,
        ))
    },
    a = () => {
      var s
      clearTimeout(n), clearInterval(o), (s = t.onEnd) == null || s.call(t)
    },
    l = Yr(e)
  ft(['mousedown', 'touchstart', 'dragstart'], r, l),
    ft(['mouseup', 'mouseleave', 'touchend', 'touchcancel', 'drop', 'dragend', 'blur'], a, !0)
}
const pV = ['value', 'aria-live'],
  { createEmits: vV, createListeners: gV } = hr(['change']),
  { createEmits: hV, createListeners: yV } = hr([
    { listen: 'click-prepend', emit: 'click:decrease-button' },
    { listen: 'click-append', emit: 'click:increase-button' },
    { listen: 'click-prepend-inner', emit: 'click:decrease-icon' },
    { listen: 'click-append-inner', emit: 'click:increase-icon' },
  ]),
  ef = Qe(un),
  _V = re({
    name: 'VaCounter',
    inheritAttrs: !1,
    __name: 'VaCounter',
    props: {
      ...Ro,
      ...Tt,
      ...Le,
      ...rl,
      ...ef,
      modelValue: { type: [String, Number], default: 0 },
      manualInput: { type: Boolean, default: !1 },
      min: { type: [Number, String] },
      max: { type: [Number, String] },
      step: { type: [Number, String], default: 1 },
      color: { type: String, default: 'primary' },
      increaseIcon: { type: String, default: 'va-plus' },
      decreaseIcon: { type: String, default: 'va-minus' },
      buttons: { type: Boolean, default: !1 },
      flat: { type: Boolean, default: !0 },
      rounded: { type: Boolean, default: !1 },
      margins: { type: [String, Number], default: '4px' },
      longPressDelay: { type: [Number, String], default: 500 },
      ariaLabel: Be('$t:counterValue'),
      ariaDecreaseLabel: Be('$t:decreaseCounter'),
      ariaIncreaseLabel: Be('$t:increaseCounter'),
    },
    emits: ['update:modelValue', ...Bo, ...vV(), ...hV(), ...Vs],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        a = je(),
        { min: l = H(void 0), max: s = H(void 0), step: i } = Sn(o),
        u = We('longPressDelay'),
        { isFocused: c, focus: d, blur: m } = lo(a, r),
        { valueComputed: v } = vt(o, r)
      function g(Q) {
        return parseFloat(Number(Q).toFixed(10))
      }
      const h = p({
          get() {
            return v.value
          },
          set(Q) {
            v.value = g(Q)
          },
        }),
        _ = () =>
          w(() => {
            r('update:modelValue', o.clearValue), r('clear'), S()
          }),
        {
          computedError: y,
          computedErrorMessages: b,
          withoutValidation: w,
          resetValidation: S,
          listeners: $,
          isDirty: k,
          isTouched: z,
        } = ao(o, r, { reset: _, focus: d, value: h }),
        V = ({ target: Q }) => {
          h.value = Number(Q == null ? void 0 : Q.value)
        },
        T = ({ target: Q }) => {
          K(Number(Q == null ? void 0 : Q.value))
        },
        B = (Q) =>
          typeof l.value > 'u' || !Number(i.value)
            ? Q
            : Nh(Number(l.value) + Number(i.value) * ((Number(Q) - Number(l.value)) / Number(i.value))),
        K = (Q) => {
          if (typeof l.value < 'u' && Q < Number(l.value)) {
            h.value = Number(l.value)
            return
          }
          if (typeof s.value < 'u' && Q > Number(s.value)) {
            h.value = B(Number(s.value))
            return
          }
          h.value = B(Q)
        },
        j = p(() => (sn(l.value) ? !1 : Number(h.value) <= Number(l.value))),
        U = p(() =>
          sn(s.value)
            ? !1
            : i.value
              ? Number(h.value) > Number(s.value) - Number(i.value)
              : Number(h.value) >= Number(s.value),
        ),
        D = p(() => (o.disabled ? -1 : 0)),
        O = p(() => j.value || o.disabled || o.readonly),
        R = p(() => U.value || o.disabled || o.readonly),
        N = () => {
          O.value || K(Number(h.value) - Number(i.value))
        },
        x = () => {
          R.value || K(Number(h.value) + Number(i.value))
        }
      Zm(su('decreaseButtonRef'), { onUpdate: N, delay: u }), Zm(su('increaseButtonRef'), { onUpdate: x, delay: u })
      const { getColor: ce } = Re(),
        ue = p(() => ce(o.color)),
        be = p(() => ({
          class: { 'va-counter__icon--inactive': O.value },
          color: ue.value,
          icon: o.decreaseIcon,
          plain: !0,
          disabled: O.value,
          readonly: o.readonly,
          tabindex: -1,
          'aria-label': M(o.ariaDecreaseLabel),
          ...(!O.value && { onClick: N }),
        })),
        xe = p(() => ({
          class: { 'va-counter__icon--inactive': R.value },
          color: ue.value,
          icon: o.increaseIcon,
          plain: !0,
          disabled: R.value,
          readonly: o.readonly,
          tabindex: -1,
          'aria-label': M(o.ariaIncreaseLabel),
          ...(!R.value && { onClick: x }),
        })),
        we = p(() => (typeof o.margins == 'string' ? parseFloat(o.margins) : o.margins) === 0),
        J = () => (c.value ? o.color : 'background-border'),
        _e = p(() => ({
          ...yt(o, ['color']),
          round: o.rounded,
          preset: o.flat ? 'secondary' : '',
          borderColor: o.flat ? J() : '',
        })),
        Ce = p(() => ({
          ..._e.value,
          icon: o.decreaseIcon,
          disabled: O.value,
          'aria-label': M(o.ariaDecreaseLabel),
          ...(!O.value && { onClick: N }),
        })),
        I = p(() => ({
          ..._e.value,
          icon: o.increaseIcon,
          disabled: R.value,
          'aria-label': M(o.ariaIncreaseLabel),
          ...(!R.value && { onClick: x }),
        })),
        { tp: M } = ut(),
        ae = Io(),
        se = Zt(),
        Ee = p(() => ({
          tabindex: D.value,
          'aria-label': M(o.ariaLabel),
          'aria-valuemin': Number(l.value),
          'aria-valuemax': Number(s.value),
          ...Rn(ae, ['class', 'style']),
          ...yt(o, ['disabled', 'min', 'max', 'step']),
          readonly: o.readonly || !o.manualInput,
        })),
        He = p(() =>
          [
            ae.class,
            { 'va-counter--input-square': we.value },
            { 'va-counter--content-slot': se.content && o.buttons },
          ].filter(Boolean),
        ),
        P = p(() => ({ ...(ae.style || {}) })),
        E = p(() => mu(o.margins))
      mV(o)
      const X = yV(r),
        te = gV(r),
        q = it(ef)
      return (
        t({ isDirty: k, isTouched: z, focus: d, blur: m, decreaseCount: N, increaseCount: x, reset: _ }),
        (Q, ie) => (
          C(),
          ee(
            f(un),
            le(
              { class: 'va-counter' },
              { ...f(X), ...f(q), ...f($) },
              {
                class: He.value,
                style: P.value,
                focused: f(c),
                error: f(y),
                'error-messages': f(b),
                onKeydown: [
                  $e(Se(x, ['prevent']), ['up']),
                  $e(Se(x, ['prevent']), ['right']),
                  $e(Se(N, ['prevent']), ['down']),
                  $e(Se(N, ['prevent']), ['left']),
                ],
              },
            ),
            Ht(
              {
                default: G(() => [
                  Q.$slots.content
                    ? W('', !0)
                    : (C(),
                      A(
                        'input',
                        le(
                          {
                            key: 0,
                            ref_key: 'input',
                            ref: a,
                            class: 'va-input__content__input',
                            type: 'number',
                            inputmode: 'decimal',
                          },
                          { ...Ee.value, ...f(te) },
                          {
                            value: h.value,
                            'aria-live': Q.$props.disabled ? 'off' : 'polite',
                            onInput: V,
                            onChange: T,
                          },
                        ),
                        null,
                        16,
                        pV,
                      )),
                ]),
                _: 2,
              },
              [
                Q.$props.buttons
                  ? {
                      name: 'prepend',
                      fn: G((ve) => [
                        Y(
                          'div',
                          {
                            class: 'va-counter__prepend-wrapper',
                            style: me({ marginRight: E.value }),
                            onMousedown: ie[0] || (ie[0] = Se((...he) => f(d) && f(d)(...he), ['prevent'])),
                          },
                          [
                            L(Q.$slots, 'decreaseAction', pe(ke({ ...ve, decreaseCount: N })), () => [
                              ne(
                                f(Xe),
                                le({ class: 'va-counter__button-decrease' }, Ce.value, { ref: 'decreaseButtonRef' }),
                                null,
                                16,
                              ),
                            ]),
                          ],
                          36,
                        ),
                      ]),
                      key: '0',
                    }
                  : {
                      name: 'prependInner',
                      fn: G((ve) => [
                        Y(
                          'div',
                          {
                            class: 'va-counter__prepend-inner',
                            onMousedown: ie[1] || (ie[1] = Se((...he) => f(d) && f(d)(...he), ['prevent'])),
                          },
                          [
                            L(Q.$slots, 'decreaseAction', pe(ke({ ...ve, decreaseCount: N })), () => [
                              ne(f(Xe), le(be.value, { ref: 'decreaseButtonRef' }), null, 16),
                            ]),
                          ],
                          32,
                        ),
                      ]),
                      key: '1',
                    },
                Q.$props.buttons
                  ? {
                      name: 'append',
                      fn: G((ve) => [
                        Y(
                          'div',
                          {
                            class: 'va-counter__append-wrapper',
                            style: me({ marginLeft: E.value }),
                            onMousedown: ie[2] || (ie[2] = Se((...he) => f(d) && f(d)(...he), ['prevent'])),
                          },
                          [
                            L(Q.$slots, 'increaseAction', pe(ke({ ...ve, increaseCount: x })), () => [
                              ne(
                                f(Xe),
                                le({ class: 'va-counter__button-increase' }, I.value, { ref: 'increaseButtonRef' }),
                                null,
                                16,
                              ),
                            ]),
                          ],
                          36,
                        ),
                      ]),
                      key: '2',
                    }
                  : {
                      name: 'appendInner',
                      fn: G((ve) => [
                        Y(
                          'div',
                          {
                            class: 'va-counter__append-inner',
                            onMousedown: ie[3] || (ie[3] = Se((...he) => f(d) && f(d)(...he), ['prevent'])),
                          },
                          [
                            L(Q.$slots, 'increaseAction', pe(ke({ ...ve, increaseCount: x })), () => [
                              ne(f(Xe), le(xe.value, { ref: 'increaseButtonRef' }), null, 16),
                            ]),
                          ],
                          32,
                        ),
                      ]),
                      key: '3',
                    },
                Q.$slots.content
                  ? {
                      name: 'default',
                      fn: G((ve) => [
                        Y(
                          'div',
                          { ref_key: 'input', ref: a, tabindex: '0', class: 'va-counter__content-wrapper' },
                          [L(Q.$slots, 'content', pe(ke({ ...ve, value: Number(h.value) })))],
                          512,
                        ),
                      ]),
                      key: '4',
                    }
                  : void 0,
              ],
            ),
            1040,
            ['class', 'style', 'focused', 'error', 'error-messages', 'onKeydown'],
          )
        )
      )
    },
  }),
  bV = ye(_V),
  Rh = { currentPage: { type: Number } },
  Dh = () => ({ items: { type: Array, default: () => [] } }),
  Mh = { selectable: { type: Boolean, default: !1 } },
  Fh = { itemsTrackBy: { type: [String, Function], default: '' } },
  jh = (e) => {
    const t = e.length === 2 || e.length === 3,
      n = e.every((r) => ['asc', 'desc', null].includes(r)),
      o = e.length === new Set(e).size
    return t && n && o
  },
  zV = {
    ...Dh(),
    columns: { type: Array, default: () => [] },
    sortingOptions: { type: Array, default: () => ['asc', 'desc', null], validator: jh },
  },
  Hh = (e, t, n) => {
    const o = typeof e == 'string' ? { key: e } : e,
      r = o.sortingOptions ? jh(o.sortingOptions) : !0
    return (
      r ||
        ot(
          `The "sortingOptions" array in the column with "${
            o.key
          }" key is invalid. For this column, the "sortingOptions" value is taken as for the table: ${JSON.stringify(
            n.sortingOptions,
          )}.`,
        ),
      {
        source: e,
        initialIndex: t,
        key: o.key,
        name: o.name || o.key,
        label: o.label || im(o.key),
        thTitle: o.thTitle || o.headerTitle || o.label || im(o.key),
        sortable: o.sortable || !1,
        sortingFn: o.sortingFn,
        displayFormatFn: o.displayFormatFn,
        sortingOptions: (r && o.sortingOptions) || n.sortingOptions,
        thAlign: o.thAlign || o.alignHead || 'left',
        thVerticalAlign: o.thVerticalAlign || o.verticalAlignHead || 'middle',
        tdAlign: o.tdAlign || o.align || 'left',
        tdVerticalAlign: o.tdVerticalAlign || o.verticalAlign || 'middle',
        width: o.width,
        tdClass: o.tdClass || o.classes,
        thClass: o.thClass || o.headerClasses,
        tdStyle: o.tdStyle || o.style,
        thStyle: o.thStyle || o.headerStyle,
      }
    )
  },
  CV = (e) => Object.keys(aS({}, ...e.items)).map((t, n) => Hh(t, n, e)),
  SV = (e) => e.columns.map((t, n) => Hh(t, n, e)),
  wV = (e) => ({ columnsComputed: p(() => (e.columns.length === 0 ? CV(e) : SV(e))) }),
  Zr = { delay: { type: Number, default: 0, validator: (e) => e >= 0 } }
function $V(e, t) {
  const n = Ut(t, 'delay') ?? 0,
    o = H(!0)
  let r
  return function (...a) {
    const l = () => e.apply(this, a)
    return f(n) ? (o.value && ((o.value = !1), setTimeout(() => (o.value = !0), f(n)), (r = l())), r) : l()
  }
}
function kc(e, t) {
  const n = Ut(t, 'delay') ?? 0
  if (!f(n)) return e
  const o = H(!0),
    r = H(),
    a = H(),
    l = H()
  return (
    ge(
      e,
      () => {
        r.value = e.value
        const s = setTimeout(() => {
          l.value = r.value
        }, f(n))
        o.value
          ? ((o.value = !1),
            (l.value = e.value),
            (a.value = e.value),
            clearTimeout(s),
            setTimeout(() => (o.value = !0), f(n)))
          : (l.value = a.value)
      },
      { immediate: !0 },
    ),
    l
  )
}
const kV = { ...Zr, ...Rh, perPage: { type: Number } },
  TV = (e, t) => {
    const n = p(() => {
      if (!t.perPage || t.perPage < 0) return e.value
      if (!t.currentPage || t.currentPage < 0) return e.value.slice(0, t.perPage)
      const r = t.perPage * (t.currentPage - 1)
      return e.value.slice(r, r + t.perPage)
    })
    return { paginatedRows: kc(n, t) }
  },
  Uh = (e, t) => (typeof t == 'function' ? t(e) : yc(e, t) || e),
  VV = () => ({ ...Dh(), ...Fh }),
  PV = (e, t, n, o) => {
    var r
    const a = yc(n, o.key)
    return {
      rowIndex: e,
      rowKey: t,
      rowData: n,
      column: o,
      source: a,
      value: ((r = a == null ? void 0 : a.toString) == null ? void 0 : r.call(a)) || '',
    }
  },
  AV = (e, t, n, o) => {
    const r = Uh(e, n)
    return { initialIndex: t, itemKey: r, source: e, cells: o.map((a) => PV(t, r, e, a)), rowData: e }
  },
  EV = (e, t) => {
    const n = H({})
    return {
      rowsComputed: p(() =>
        t.items.map((r, a) => ({
          ...AV(r, a, t.itemsTrackBy, e.value),
          toggleRowDetails: (l) => {
            typeof l == 'boolean' ? (n.value[a] = l) : (n.value[a] = !n.value[a])
          },
          isExpandableRowVisible: !!n.value[a],
        })),
      ),
    }
  },
  IV = { ...Mh, ...Fh, modelValue: { type: Array }, selectMode: { type: String, default: 'multiple' } },
  xV = (e, t, n) => {
    const o = H([]),
      r = p({
        get() {
          return t.modelValue === void 0 ? o.value : t.modelValue
        },
        set(z) {
          t.modelValue === void 0 && (o.value = z), n('update:modelValue', z)
        },
      }),
      a = H(-1)
    ge(
      () => t.selectMode,
      (z, V) => {
        z === 'single' && V === 'multiple' && ((r.value = []), _(-1))
      },
    ),
      ge(e, () => {
        _(-1)
      }),
      ge(
        r,
        (z, V = []) => {
          n('selectionChange', { currentSelectedItems: z, previousSelectedItems: V })
        },
        { immediate: !0 },
      )
    const l = (z) => Uh(z, t.itemsTrackBy),
      s = p(() => !e.value.some(({ source: z }) => r.value.includes(l(z)))),
      i = p(() => (e.value.length === 0 ? !1 : e.value.every(({ source: z }) => r.value.includes(l(z))))),
      u = p(() => !s.value && !i.value)
    function c(z) {
      return r.value.includes(l(z.source))
    }
    function d() {
      r.value = [...new Set([...r.value, ...e.value.map((z) => l(z.source))])]
    }
    function m() {
      const z = e.value.map((V) => l(V.source))
      r.value = r.value.filter((V) => !z.includes(V))
    }
    function v(z) {
      r.value = [...r.value, l(z.source)]
    }
    function g(z) {
      r.value = [l(z.source)]
    }
    function h(z) {
      const V = r.value.findIndex((T) => T === l(z.source))
      r.value = [...r.value.slice(0, V), ...r.value.slice(V + 1)]
    }
    function _(z) {
      if (z === -1) a.value = -1
      else {
        const V = e.value.find((T) => T.initialIndex === z)
        V ? (a.value = e.value.indexOf(V)) : (a.value = -1)
      }
    }
    function y(z) {
      let V, T
      return (
        c(e.value[a.value])
          ? ((V = Math.min(a.value, z)), (T = Math.max(a.value, z)))
          : ((V = Math.min(a.value + 1, z)), (T = Math.max(a.value - 1, z))),
        e.value.slice(V, T + 1)
      )
    }
    function b(z) {
      const V = z.map((B) => l(B.source))
      if (s.value) {
        r.value = V
        return
      }
      if (V.every((B) => r.value.includes(B))) {
        r.value = r.value.filter((B) => !V.includes(B))
        return
      }
      r.value = [...new Set([...r.value, ...V])]
    }
    function w(z) {
      t.selectable &&
        (c(z)
          ? (h(z), t.selectMode === 'single' ? _(-1) : _(z.initialIndex))
          : (t.selectMode === 'single' ? g(z) : v(z), _(z.initialIndex)))
    }
    function S(z) {
      t.selectable && w(z)
    }
    function $(z) {
      if (!t.selectable) return
      if (t.selectMode === 'single' || a.value === -1) return w(z)
      const V = e.value.indexOf(z)
      b(y(V)), _(-1)
    }
    function k() {
      i.value ? m() : d(), _(-1)
    }
    return {
      ctrlSelectRow: S,
      shiftSelectRows: $,
      toggleRowSelection: w,
      toggleBulkSelection: k,
      isRowSelected: c,
      noRowsSelected: s,
      severalRowsSelected: u,
      allRowsSelected: i,
    }
  },
  Hn = '--va-data-table',
  Wh = (e) => typeof e == 'function',
  Gh = {
    ...Mh,
    selectedColor: { type: String, default: 'primary' },
    allowFooterSorting: { type: Boolean, default: !1 },
    stickyHeader: { type: Boolean, default: !1 },
    stickyFooter: { type: Boolean, default: !1 },
    height: { type: [String, Number] },
  },
  OV = (e) => (Wh(e) ? e() : e),
  LV = (e) => (Wh(e) ? e() : e),
  Kh = (e) => {
    const { getColor: t, getFocusColor: n, getHoverColor: o } = Re(),
      r = p(() => t(e.selectedColor))
    return {
      CSSVariables: p(() => ({
        hoverColor: o(r.value),
        selectedColor: e.selectable ? n(r.value) : void 0,
        tableHeight: e.height ? mu(e.height) : 'var(--va-data-table-height)',
        theadBg: e.stickyHeader
          ? 'var(--va-data-table-thead-background, var(--va-data-table-header-background))'
          : 'var(--va-data-table-thead-background)',
        tfootBg: e.stickyFooter
          ? 'var(--va-data-table-tfoot-background, var(--va-data-table-header-background))'
          : 'var(--va-data-table-tfoot-background)',
      })),
      getHeaderCSSVariables: (u) => ({
        [`${Hn}-width`]: u.width && mu(u.width),
        [`${Hn}-align`]: u.thAlign,
        [`${Hn}-vertical-align`]: u.thVerticalAlign,
        [`${Hn}-cursor`]: u.sortable ? 'pointer' : 'default',
      }),
      getCellCSSVariables: (u) => ({
        [`${Hn}-align`]: u.column.tdAlign,
        [`${Hn}-vertical-align`]: u.column.tdVerticalAlign,
      }),
      getFooterCSSVariables: (u) => ({
        [`${Hn}-align`]: u.thAlign,
        [`${Hn}-vertical-align`]: u.thVerticalAlign,
        [`${Hn}-cursor`]: e.allowFooterSorting && u.sortable ? 'pointer' : 'default',
      }),
      getClass: OV,
      getStyle: LV,
    }
  },
  tf = (e) => typeof e == 'function',
  nf = (e) => e !== null && typeof e == 'object',
  BV = { rowBind: { type: null }, cellBind: { type: null } },
  NV = (e) => ({
    getRowBind: (o) => (tf(e.rowBind) ? e.rowBind(o.source, o.initialIndex) : nf(e.rowBind) ? e.rowBind : {}),
    getCellBind: (o, r) =>
      tf(e.cellBind) ? e.cellBind(o.source, r.source, o.column, r.initialIndex) : nf(e.cellBind) ? e.cellBind : {},
  }),
  RV = { ...Rh, animated: { type: Boolean, default: !0 } },
  DV = (e, t) => {
    const n = H('shuffle'),
      o = p(() => (e.animated ? `table-transition-${n.value}` : '')),
      r = H(t.value.length),
      a = p(() => t.value.length !== r.value)
    return (
      ge(t, (l, s) => {
        const i = !!(l.length && s.length)
        ;(n.value = l.length > 50 || (a.value && i) ? 'fade' : 'shuffle'), (r.value = l.length)
      }),
      ge(
        () => e.currentPage,
        () => {
          a.value || (n.value = 'shuffle')
        },
      ),
      o
    )
  },
  MV = { ...Zr, filter: { type: String, default: '' }, filterMethod: { type: Function } },
  FV = (e, t, n) => {
    const o = p(() =>
        !e.value.length || (t.filter === '' && !t.filterMethod)
          ? e.value
          : e.value.filter((a) =>
              a.cells.some((l) =>
                typeof t.filterMethod == 'function'
                  ? t.filterMethod(l.source, l)
                  : new RegExp(t.filter, 'i').test(l.value),
              ),
            ),
      ),
      r = kc(o, t)
    return (
      ge(r, () => {
        n('filtered', { items: r.value.map((a) => a.source), itemsIndexes: r.value.map((a) => a.initialIndex) })
      }),
      o.value.length !== e.value.length &&
        n('filtered', { items: o.value.map((a) => a.source), itemsIndexes: o.value.map((a) => a.initialIndex) }),
      { filteredRows: r }
    )
  },
  jV = {
    ...Zr,
    sortBy: { type: String },
    columnSorted: { type: Object },
    sortingOrder: { type: [String, null] },
    disableClientSideSorting: { type: Boolean, default: !1 },
  },
  HV = (e, t, n, o) => {
    const r = H(''),
      a = p({
        get() {
          return n.sortBy === void 0 ? r.value : n.sortBy
        },
        set(g) {
          n.sortBy === void 0 && (r.value = g), o('update:sortBy', g)
        },
      }),
      l = H(null),
      s = p({
        get() {
          return n.sortingOrder === void 0 ? l.value : n.sortingOrder
        },
        set(g) {
          n.sortingOrder === void 0 && (l.value = g), o('update:sortingOrder', g)
        },
      }),
      i = (g, h) => {
        if (typeof g == 'string' && typeof h == 'string') return g.localeCompare(h)
        if (typeof g == 'number' && typeof h == 'number') return g - h
        const _ = parseFloat(g),
          y = parseFloat(h)
        return !isNaN(_) && !isNaN(y) ? _ - y : isNaN(_) ? (isNaN(y) ? 0 : 1) : -1
      },
      u = p(() => {
        if (n.disableClientSideSorting || t.value.length <= 1) return t.value
        const g = e.value.findIndex(({ name: y, sortable: b }) => a.value === y && b),
          h = e.value[g]
        if (!h) return t.value
        const _ = s.value === 'desc' ? -1 : 1
        return [...t.value].sort((y, b) => {
          if (s.value === null) return y.initialIndex - b.initialIndex
          {
            const w = y.cells[g].source,
              S = b.cells[g].source
            return _ * (typeof h.sortingFn == 'function' ? h.sortingFn(w, S) : i(w, S))
          }
        })
      })
    ge(u, () => {
      o('sorted', {
        sortBy: a.value,
        sortingOrder: s.value,
        items: u.value.map((g) => g.source),
        itemsIndexes: u.value.map((g) => g.initialIndex),
      })
    })
    const c = (g, h) => {
      const _ = h.findIndex((y) => y === g)
      return _ !== -1 ? h[(_ + 1) % h.length] : h[0]
    }
    function d(g) {
      let h
      g.name === a.value ? (h = c(s.value, g.sortingOptions)) : ((a.value = g.name), (h = g.sortingOptions[0])),
        (s.value = h),
        o('columnSorted', { columnName: g.name, value: h, column: g })
    }
    const m = $V(d, n),
      v = p(() => (s.value === 'asc' ? 'va-sort-asc' : s.value === 'desc' ? 'va-sort-desc' : 'va-unsorted'))
    return { sortBySync: a, sortingOrderSync: s, toggleSorting: m, sortedRows: u, sortingOrderIconName: v }
  },
  UV = (e) => {
    const t = f(e)
    return St(t)
  },
  Ol = () => {
    const e = je()
    return p({
      get() {
        return UV(e)
      },
      set(t) {
        e.value = t
      },
    })
  },
  WV = {
    scrollTopMargin: { type: [Number, String], default: 0 },
    scrollBottomMargin: { type: [Number, String], default: 0 },
  },
  GV = ['scroll:top', 'scroll:bottom'],
  KV = (e, t) => {
    var n
    const o = (n = ct()) == null ? void 0 : n.vnode.props,
      r = (o == null ? void 0 : o['onScroll:top']) !== void 0,
      a = (o == null ? void 0 : o['onScroll:bottom']) !== void 0,
      l = Ol(),
      s = Ol(),
      i = Ol(),
      u = We('scrollTopMargin'),
      c = We('scrollBottomMargin'),
      d = p(() => !!l.value),
      m = (h) => {
        h.forEach((_) => {
          _.isIntersecting && (_.target === s.value ? t('scroll:top') : t('scroll:bottom'))
        })
      },
      v = p(() => {
        const h = []
        return d.value && (s.value && h.push(s.value), i.value && h.push(i.value)), h
      }),
      g = p(() => ({ root: l.value, rootMargin: `${u.value ?? 0}px 0px ${c.value ?? 0}px 0px` }))
    return (
      Oh(m, g, v),
      { scrollContainer: l, topTrigger: s, bottomTrigger: i, doRenderTopTrigger: r, doRenderBottomTrigger: a }
    )
  },
  qV = { class: 'va-data-table__table-tr' },
  YV = { key: 0, scope: 'col', class: 'va-data-table__table-th va-data-table__table-cell-select' },
  XV = ['title', 'onClick', 'onKeydown'],
  JV = { class: 'va-data-table__table-th-wrapper' },
  QV = { key: 0 },
  ZV = re({
    name: 'VaDataTableThRow',
    __name: 'VaDataTableThRow',
    props: {
      ...Gh,
      selectMode: { type: String, default: 'multiple' },
      allRowsSelected: { type: Boolean, default: !1 },
      severalRowsSelected: { type: Boolean, default: !1 },
      columns: { type: Array, required: !0 },
      isFooter: { type: Boolean, default: !1 },
      sortBySync: { type: String, required: !0 },
      sortingOrderIconName: { type: String, required: !0 },
      sortingOrderSync: { type: String, default: null },
      ariaSelectAllRowsLabel: Be('$t:selectAllRows'),
      ariaSortColumnByLabel: Be('$t:sortColumnBy'),
    },
    emits: ['toggleBulkSelection', 'toggleSorting'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        { t: r, tp: a } = ut(),
        { getFooterCSSVariables: l, getHeaderCSSVariables: s, getClass: i, getStyle: u } = Kh(n),
        c = (_) => {
          const y =
              n.sortingOrderSync && n.sortBySync === _.name
                ? n.sortingOrderSync === 'asc'
                  ? 'ascending'
                  : 'descending'
                : 'none',
            b = _.sortable ? a(n.ariaSortColumnByLabel, { name: _.label }) : void 0
          return { 'aria-sort': y, 'aria-label': b }
        },
        d = (_) => {
          ;(n.isFooter && !n.allowFooterSorting) || !_.sortable || o('toggleSorting', _)
        },
        m = () => o('toggleBulkSelection'),
        v = (_) => [_.width ? { minWidth: _.width, maxWidth: _.width } : {}, n.isFooter ? l(_) : s(_), u(_.thStyle)],
        g = p(() => (n.isFooter ? 'footer' : 'header')),
        h = p(() => n.selectMode === 'multiple')
      return (_, y) => (
        C(),
        A('tr', qV, [
          _.$props.selectable
            ? (C(),
              A('th', YV, [
                h.value
                  ? (C(),
                    ee(
                      f(ol),
                      {
                        key: 0,
                        class: 'va-data-table__table-cell-checkbox',
                        'model-value': _.$props.severalRowsSelected ? 'idl' : _.$props.allRowsSelected,
                        'aria-label': f(a)(_.$props.ariaSelectAllRowsLabel),
                        'true-value': !0,
                        'false-value': !1,
                        color: _.$props.selectedColor,
                        'indeterminate-value': 'idl',
                        indeterminate: '',
                        'onUpdate:modelValue': m,
                      },
                      null,
                      8,
                      ['model-value', 'aria-label', 'color'],
                    ))
                  : W('', !0),
              ]))
            : W('', !0),
          (C(!0),
          A(
            Te,
            null,
            Ue(
              e.columns,
              (b) => (
                C(),
                A(
                  'th',
                  le(
                    {
                      key: b.name,
                      scope: 'col',
                      class: ['va-data-table__table-th', f(i)(b.thClass)],
                      title: b.thTitle,
                      style: v(b),
                    },
                    c(b),
                    {
                      onClick: Se((w) => d(b), ['exact']),
                      onKeydown: $e(
                        Se((w) => d(b), ['stop']),
                        ['enter'],
                      ),
                    },
                  ),
                  [
                    Y('div', JV, [
                      `${g.value}(${b.name})` in _.$slots
                        ? (C(),
                          A('span', QV, [L(_.$slots, `${g.value}(${b.name})`, pe(ke({ label: b.label, key: b.key })))]))
                        : L(_.$slots, g.value, pe(le({ key: 1 }, { label: b.label, key: b.key })), () => [
                            Y('span', null, Ae(b.label), 1),
                          ]),
                      b.sortable
                        ? (C(),
                          ee(
                            f(Ke),
                            {
                              key: 2,
                              class: Pe([
                                'va-data-table__table-th-sorting-icon',
                                { active: e.sortBySync === b.name && e.sortingOrderSync !== null },
                              ]),
                              size: 'small',
                              role: b.sortable ? 'button' : void 0,
                              tabindex: b.sortable ? 0 : -1,
                              name: e.sortingOrderIconName,
                              onSelectstart: Se(() => {}, ['prevent']),
                            },
                            null,
                            8,
                            ['class', 'role', 'tabindex', 'name'],
                          ))
                        : W('', !0),
                    ]),
                  ],
                  16,
                  XV,
                )
              ),
            ),
            128,
          )),
        ])
      )
    },
  }),
  fu = ye(ZV),
  { isParsablePositiveMeasure: eP, parseSizeValue: of } = hh(),
  rf = (e, t) => {
    const n = eP(e)
    return (
      !n && ot(`[va-virtual-scroller] ${t} should be number or parsable int greater or equal to 0. Provided: ${e}.`), n
    )
  },
  tP = {
    horizontal: { type: Boolean, default: !1 },
    itemSize: { type: [Number, String], default: 0, validator: (e) => rf(e, 'itemSize') },
    wrapperSize: { type: [Number, String], default: 100, validator: (e) => e === 'auto' || rf(e, 'wrapperSize') },
  },
  nP = (e, t) => {
    const n = je(),
      o = je(),
      r = p(() => (e.horizontal ? 'clientWidth' : 'clientHeight')),
      a = p(() => {
        var v
        return e.wrapperSize === 'auto' ? ((v = o.value) == null ? void 0 : v[r.value]) || 0 : of(e.wrapperSize, l)
      }),
      l = H(16)
    ft(
      'resize',
      () => {
        ;(l.value = parseFloat(getComputedStyle(document.documentElement).fontSize)), u()
      },
      !0,
    )
    const i = H(0),
      u = () => {
        if (!n.value) return
        const v = [],
          h = n.value.children.length
        for (let _ = 0; _ < h; _++) {
          const y = n.value.children.item(_)
          y && v.push(y[r.value])
        }
        i.value = h ? Math.trunc(v.reduce((_, y) => _ + y, 0) / (h - 1)) : 0
      },
      c = ct()
    et(() => {
      var v, g
      n.value ||
        (n.value = (g = (v = c == null ? void 0 : c.parent) == null ? void 0 : v.refs) == null ? void 0 : g.list),
        u()
    }),
      ge(t, u),
      ge(a, u)
    let d = 0
    const m = p(() => {
      const v = of(e.itemSize, l),
        g = Math.max(v, i.value, 1)
      return Math.abs((d / g) * 100 - 100) > 5 || d === 0 ? ((d = g), g) : d
    })
    return { list: n, wrapper: o, itemSize: m, wrapperSize: a }
  },
  oP = { trackBy: { type: [String, Number, Function], default: '' } },
  rP = (e) => ({
    getKey: (n, o, r) => {
      if (e.trackBy && n && typeof n == 'object' && !Na(e.trackBy)) {
        const a = Array.isArray(n)
        let l
        if ((a && !isNaN(+e.trackBy) && (l = n[+e.trackBy]), a || (l = n[e.trackBy]), l || l === 0)) return l
        ot(`${a ? 'Index' : 'Key'} '${e.trackBy}' wasn't found in provided ${a ? 'array' : 'object'}: `, n)
      }
      return Na(e.trackBy) ? e.trackBy(n) : r
    },
  }),
  aP = re({
    name: 'VaVirtualScroller',
    __name: 'VaVirtualScroller',
    props: {
      ...oP,
      ...tP,
      items: { type: Array, default: () => [] },
      bench: { type: [Number, String], default: 10, validator: (e) => Number(e) >= 0 },
      disabled: { type: Boolean, default: !1 },
      table: { type: Boolean, default: !1 },
    },
    emits: ['scroll:bottom'],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        a = H(0),
        l = We('bench'),
        s = p(() => (o.horizontal ? 'scrollLeft' : 'scrollTop')),
        i = () => {
          c.value && (a.value = c.value[s.value])
        }
      o.disabled || ft('scroll', i, !0)
      const { list: u, wrapper: c, itemSize: d, wrapperSize: m } = nP(o, a),
        { getKey: v } = rP(o),
        g = (U, D, O) => v(U, D, O)
      ge(a, (U) => {
        U + m.value === z.value && r('scroll:bottom')
      })
      const h = p(() => Math.max(0, Math.floor(a.value / d.value) - l.value)),
        _ = p(() => {
          var U
          return (U = o.items) != null && U.length
            ? o.disabled
              ? o.items.length
              : Math.min(o.items.length - h.value, Math.ceil(m.value / d.value) + l.value * 2)
            : 0
        }),
        y = p(() => h.value + _.value),
        b = p(() => {
          var U
          return (U = o.items) != null && U.length ? o.items.slice(h.value, y.value) : []
        }),
        w = p(() => (o.horizontal ? 'width' : 'height')),
        S = p(() => o.table && o.disabled),
        $ = p(() => ({ [w.value]: S.value || !m.value ? void 0 : `${m.value}px` })),
        k = rt('va-virtual-scroller', () => ({ ...yt(o, ['horizontal']) })),
        z = p(() => {
          var U
          return (((U = o.items) == null ? void 0 : U.length) ?? 0) * d.value
        }),
        V = p(() => ({ [w.value]: S.value ? void 0 : `${z.value}px` })),
        T = p(() => h.value * d.value),
        B = p(() => ({ transform: `translate${o.horizontal ? 'X' : 'Y'}(${T.value}px)` })),
        K = p(() => (o.horizontal ? 'left' : 'top'))
      return (
        t({
          scrollToAttribute: K,
          virtualScrollTo: (U) => {
            var D
            ;(!U && U !== 0) || (D = c.value) == null || D.scrollTo({ [K.value]: U * d.value })
          },
        }),
        (U, D) => (
          C(),
          A(
            'div',
            { ref_key: 'wrapper', ref: c, class: Pe(['va-virtual-scroller', f(k)]), style: me($.value) },
            [
              L(
                U.$slots,
                'content',
                pe(
                  ke({
                    containerStyleComputed: V.value,
                    listStyleComputed: B.value,
                    renderBuffer: b.value,
                    uniqueKey: g,
                    currentListOffset: T.value,
                  }),
                ),
                () => [
                  Y(
                    'div',
                    { class: 'va-virtual-scroller__container', style: me(V.value) },
                    [
                      Y(
                        'div',
                        {
                          ref_key: 'list',
                          ref: u,
                          role: 'list',
                          class: 'va-virtual-scroller__list',
                          style: me(B.value),
                        },
                        [
                          (C(!0),
                          A(
                            Te,
                            null,
                            Ue(b.value, (O, R) =>
                              L(U.$slots, 'default', pe(le({ key: g(O, R) }, { item: O, index: h.value + R }))),
                            ),
                            128,
                          )),
                        ],
                        4,
                      ),
                    ],
                    4,
                  ),
                ],
              ),
            ],
            6,
          )
        )
      )
    },
  }),
  Bs = ye(aP),
  lP = { key: 0, class: 'va-inner-loading__overlay', 'aria-hidden': 'true' },
  sP = re({
    name: 'VaInnerLoading',
    __name: 'VaInnerLoading',
    props: {
      ...Ja,
      ...Le,
      color: { type: String },
      icon: { type: String, default: 'va-loading' },
      size: { type: [Number, String], default: 30 },
    },
    setup(e) {
      const t = e,
        { getColor: n } = Re(),
        o = p(() => n(t.color)),
        r = p(() => ({ 'va-inner-loading--active': t.loading })),
        a = p(() => ({ 'aria-busy': t.loading }))
      return (l, s) => (
        C(),
        A(
          'div',
          le({ class: ['va-inner-loading', r.value], 'aria-live': 'polite' }, a.value),
          [
            L(l.$slots, 'default'),
            l.$props.loading
              ? (C(),
                A('div', lP, [
                  L(l.$slots, 'loading', {}, () => [
                    ne(
                      f(Ke),
                      {
                        class: 'va-inner-loading__spinner',
                        spin: 'counter-clockwise',
                        color: o.value,
                        size: l.$props.size,
                        name: l.$props.icon,
                      },
                      null,
                      8,
                      ['color', 'size', 'name'],
                    ),
                  ]),
                ]))
              : W('', !0),
          ],
          16,
        )
      )
    },
  }),
  qh = ye(sP),
  iP = { key: 0 },
  uP = { ref: 'list', class: 'va-data-table__table-tbody' },
  cP = { key: 'showNoDataHtml', class: 'va-data-table__table-tr' },
  dP = { class: 'va-data-table__table-td no-data', colspan: '99999' },
  mP = ['innerHTML'],
  fP = { key: 'showNoDataFilteredHtml', class: 'va-data-table__table-tr' },
  pP = { class: 'va-data-table__table-td no-data', colspan: '99999' },
  vP = ['innerHTML'],
  gP = ['onClick', 'onDblclick', 'onContextmenu'],
  hP = { key: 0, class: 'va-data-table__grid-column-header' },
  yP = { key: 0, class: 'va-data-table__table-tr' },
  af = Qe(Bs, ['items', 'trackBy', 'horizontal', 'disabled', 'table']),
  lf = Qe(fu),
  _P = re({
    name: 'VaDataTable',
    inheritAttrs: !1,
    __name: 'VaDataTable',
    props: {
      ...Le,
      ...af,
      ...RV,
      ...BV,
      ...WV,
      ...jV,
      ...Gh,
      ...zV,
      ...MV,
      ...kV,
      ...VV(),
      ...IV,
      ...Zr,
      ...yt(lf, ['ariaSelectAllRowsLabel', 'ariaSortColumnByLabel']),
      hoverable: { type: Boolean, default: !1 },
      clickable: { type: Boolean, default: !1 },
      loading: { type: Boolean, default: !1 },
      loadingColor: { type: String, default: 'primary' },
      noDataHtml: { type: String, default: 'No items' },
      noDataFilteredHtml: { type: String, default: 'No items match the provided filtering condition' },
      hideDefaultHeader: { type: Boolean, default: !1 },
      footerClone: { type: Boolean, default: !1 },
      striped: { type: Boolean, default: !1 },
      virtualScroller: { type: Boolean, default: !1 },
      virtualTrackBy: { type: [String, Number], default: 'initialIndex' },
      grid: { type: Boolean, default: !1 },
      gridColumns: { type: [Number, String], default: 0 },
      wrapperSize: { type: [Number, String], default: 'auto' },
      ariaSelectRowLabel: Be('$t:selectRowByIndex'),
    },
    emits: [
      'update:modelValue',
      'update:sortBy',
      'update:sortingOrder',
      'filtered',
      'sorted',
      'selectionChange',
      'row:click',
      'row:dblclick',
      'row:contextmenu',
      'columnSorted',
      ...GV,
    ],
    setup(e, { emit: t }) {
      const { tp: n } = ut(),
        o = e,
        r = t,
        { columnsComputed: a } = wV(o),
        { rowsComputed: l } = EV(a, o),
        { filteredRows: s } = FV(l, o, r),
        {
          sortBySync: i,
          sortingOrderSync: u,
          toggleSorting: c,
          sortedRows: d,
          sortingOrderIconName: m,
        } = HV(a, s, o, r),
        { paginatedRows: v } = TV(d, o),
        {
          ctrlSelectRow: g,
          shiftSelectRows: h,
          toggleBulkSelection: _,
          isRowSelected: y,
          severalRowsSelected: b,
          allRowsSelected: w,
          toggleRowSelection: S,
        } = xV(v, o, r),
        { CSSVariables: $, getCellCSSVariables: k, getClass: z, getStyle: V } = Kh(o),
        { getRowBind: T, getCellBind: B } = NV(o),
        K = DV(o, v),
        j = p(() => o.items.length === 0),
        U = p(() => v.value.length === 0),
        D = (se, Ee, He) => {
          r(se, { event: Ee, item: He.source, itemIndex: He.initialIndex, row: He }), o.selectable && o.grid && S(He)
        },
        O = p(() => ({
          ...Rn(x, ['class', 'style']),
          class: yt(o, ['striped', 'selectable', 'hoverable', 'clickable']),
        })),
        R = it(af),
        N = p(() => ({
          ...R.value,
          items: v.value,
          trackBy: o.virtualTrackBy,
          disabled: !o.virtualScroller,
          table: !0,
        })),
        x = Io(),
        ce = p(() => ({
          class: [
            { 'va-data-table--sticky': o.stickyHeader || o.stickyFooter },
            { 'va-data-table--scroll': !!o.height },
            { 'va-data-table--virtual-scroller': I.value },
            { 'va-data-table--grid': o.grid },
            x.class,
          ],
          style: [x.style],
          ...N.value,
        })),
        ue = it(lf),
        be = p(() => ({
          ...ue.value,
          columns: a.value,
          sortingOrderIconName: m.value,
          severalRowsSelected: b.value,
          sortingOrderSync: u.value,
          allRowsSelected: w.value,
          sortBySync: i.value,
        })),
        {
          scrollContainer: xe,
          topTrigger: we,
          bottomTrigger: J,
          doRenderTopTrigger: _e,
          doRenderBottomTrigger: Ce,
        } = KV(o, r),
        I = p(() => o.virtualScroller && !o.grid),
        M = p(() => o.gridColumns || 'var(--va-data-table-grid-tbody-columns)'),
        ae = (se, Ee) => (Ee.displayFormatFn ? Ee.displayFormatFn(se.value) : se.value)
      return (se, Ee) => (
        C(),
        ee(
          f(Bs),
          le({ class: 'va-data-table' }, ce.value, {
            ref_key: 'scrollContainer',
            ref: xe,
            style: `--va-css-variables-selected-color: ${String(
              f($).selectedColor,
            )};--va-css-variables-hover-color: ${String(f($).hoverColor)};--va-css-variables-table-height: ${String(
              f($).tableHeight,
            )};--va-css-variables-thead-bg: ${String(f($).theadBg)};--va-css-variables-tfoot-bg: ${String(
              f($).tfootBg,
            )};--va-grid-columns-count: ${String(M.value)}`,
          }),
          {
            content: G(
              ({
                uniqueKey: He,
                renderBuffer: P,
                currentListOffset: E,
                listStyleComputed: X,
                containerStyleComputed: te,
              }) => [
                ne(
                  f(qh),
                  { 'aria-live': 'polite', style: me(te), loading: e.loading, color: e.loadingColor },
                  {
                    default: G(() => [
                      f(_e)
                        ? (C(),
                          A(
                            'div',
                            { key: 0, ref_key: 'topTrigger', ref: we, class: 'va-data-table__scroll-trigger' },
                            null,
                            512,
                          ))
                        : W('', !0),
                      Y(
                        'table',
                        le({ class: 'va-data-table__table', style: X }, O.value),
                        [
                          'colgroup' in se.$slots
                            ? (C(), A('colgroup', iP, [L(se.$slots, 'colgroup', pe(ke(f(a))))]))
                            : W('', !0),
                          Y(
                            'thead',
                            {
                              class: Pe([
                                'va-data-table__table-thead',
                                { 'va-data-table__table-thead--sticky': se.$props.stickyHeader },
                              ]),
                              style: me({ top: I.value && se.$props.stickyHeader ? `-${E}px` : void 0 }),
                            },
                            [
                              L(se.$slots, 'headerPrepend'),
                              L(se.$slots, 'header', {}, () => [
                                e.hideDefaultHeader
                                  ? W('', !0)
                                  : (C(),
                                    ee(
                                      f(fu),
                                      le({ key: 0 }, be.value, { onToggleBulkSelection: f(_), onToggleSorting: f(c) }),
                                      Ht({ _: 2 }, [
                                        Ue(se.$slots, (q, Q) => ({
                                          name: Q,
                                          fn: G((ie) => [L(se.$slots, Q, pe(ke(ie)))]),
                                        })),
                                      ]),
                                      1040,
                                      ['onToggleBulkSelection', 'onToggleSorting'],
                                    )),
                              ]),
                              L(se.$slots, 'headerAppend'),
                            ],
                            6,
                          ),
                          Y(
                            'tbody',
                            uP,
                            [
                              L(se.$slots, 'bodyPrepend'),
                              ne(
                                Fz,
                                {
                                  name: I.value ? '' : f(K),
                                  css: !se.$props.virtualScroller,
                                  appear: !se.$props.virtualScroller,
                                },
                                {
                                  default: G(() => [
                                    j.value
                                      ? (C(),
                                        A('tr', cP, [
                                          Y('td', dP, [
                                            L(se.$slots, 'no-data', {}, () => [
                                              Y('div', { innerHTML: e.noDataHtml }, null, 8, mP),
                                            ]),
                                          ]),
                                        ]))
                                      : U.value
                                        ? (C(),
                                          A('tr', fP, [
                                            Y('td', pP, [
                                              L(se.$slots, 'no-filtered-data', {}, () => [
                                                L(se.$slots, 'no-data', {}, () => [
                                                  Y('div', { innerHTML: e.noDataFilteredHtml }, null, 8, vP),
                                                ]),
                                              ]),
                                            ]),
                                          ]))
                                        : W('', !0),
                                    (C(!0),
                                    A(
                                      Te,
                                      null,
                                      Ue(
                                        P,
                                        (q, Q) => (
                                          C(),
                                          A(
                                            Te,
                                            { key: `table-row_${He(q, Q)}` },
                                            [
                                              Y(
                                                'tr',
                                                le(
                                                  {
                                                    class: [
                                                      'va-data-table__table-tr',
                                                      [
                                                        {
                                                          selected: f(y)(q),
                                                          'va-data-table__table-tr--expanded': q.isExpandableRowVisible,
                                                        },
                                                      ],
                                                    ],
                                                  },
                                                  f(T)(q),
                                                  {
                                                    onClick: (ie) => D('row:click', ie, q),
                                                    onDblclick: (ie) => D('row:dblclick', ie, q),
                                                    onContextmenu: (ie) => D('row:contextmenu', ie, q),
                                                  },
                                                ),
                                                [
                                                  se.selectable && !se.$props.grid
                                                    ? (C(),
                                                      A(
                                                        'td',
                                                        {
                                                          class:
                                                            'va-data-table__table-td va-data-table__table-cell-select',
                                                          key: `selectable_${He(q, Q)}`,
                                                          onSelectstart: Ee[0] || (Ee[0] = Se(() => {}, ['prevent'])),
                                                        },
                                                        [
                                                          ne(
                                                            f(ol),
                                                            {
                                                              class: 'va-data-table__table-cell-checkbox',
                                                              'model-value': f(y)(q),
                                                              color: se.selectedColor,
                                                              'aria-label': f(n)(se.$props.ariaSelectRowLabel, {
                                                                index: q.initialIndex,
                                                              }),
                                                              onClick: [
                                                                Se((ie) => f(h)(q), ['shift', 'exact', 'stop']),
                                                                Se((ie) => f(g)(q), ['ctrl', 'exact', 'stop']),
                                                                Se((ie) => f(g)(q), ['exact', 'stop']),
                                                              ],
                                                            },
                                                            null,
                                                            8,
                                                            ['model-value', 'color', 'aria-label', 'onClick'],
                                                          ),
                                                        ],
                                                        32,
                                                      ))
                                                    : W('', !0),
                                                  (C(!0),
                                                  A(
                                                    Te,
                                                    null,
                                                    Ue(
                                                      q.cells,
                                                      (ie, ve) => (
                                                        C(),
                                                        A(
                                                          'td',
                                                          le(
                                                            {
                                                              key: `table-cell_${ie.column.name + ie.rowIndex}`,
                                                              class: [
                                                                'va-data-table__table-td',
                                                                f(z)(ie.column.tdClass),
                                                              ],
                                                              style: [
                                                                ie.column.width
                                                                  ? {
                                                                      minWidth: ie.column.width,
                                                                      maxWidth: ie.column.width,
                                                                    }
                                                                  : {},
                                                                f(k)(ie),
                                                                f(V)(ie.column.tdStyle),
                                                              ],
                                                            },
                                                            f(B)(ie, q),
                                                          ),
                                                          [
                                                            `cell(${ie.column.name})` in se.$slots
                                                              ? L(
                                                                  se.$slots,
                                                                  `cell(${ie.column.name})`,
                                                                  pe(
                                                                    le(
                                                                      { key: 0 },
                                                                      {
                                                                        ...ie,
                                                                        row: q,
                                                                        isExpanded: q.isExpandableRowVisible,
                                                                      },
                                                                    ),
                                                                  ),
                                                                )
                                                              : L(
                                                                  se.$slots,
                                                                  'cell',
                                                                  pe(le({ key: 1 }, { cell: ie, row: q })),
                                                                  () => [
                                                                    se.$props.grid
                                                                      ? (C(), A('span', hP, Ae(f(a)[ve].label), 1))
                                                                      : W('', !0),
                                                                    Fe(' ' + Ae(ae(ie, f(a)[ve])), 1),
                                                                  ],
                                                                ),
                                                          ],
                                                          16,
                                                        )
                                                      ),
                                                    ),
                                                    128,
                                                  )),
                                                ],
                                                16,
                                                gP,
                                              ),
                                              q.isExpandableRowVisible
                                                ? (C(),
                                                  A('tr', yP, [
                                                    (C(),
                                                    A(
                                                      'td',
                                                      {
                                                        class: 'va-data-table__table-expanded-content',
                                                        colspan: '99999',
                                                        key: He(q, Q),
                                                      },
                                                      [L(se.$slots, 'expandableRow', pe(ke(q)))],
                                                    )),
                                                  ]))
                                                : W('', !0),
                                            ],
                                            64,
                                          )
                                        ),
                                      ),
                                      128,
                                    )),
                                  ]),
                                  _: 2,
                                },
                                1032,
                                ['name', 'css', 'appear'],
                              ),
                              L(se.$slots, 'bodyAppend'),
                            ],
                            512,
                          ),
                          ['footer', 'footerPrepend', 'footerAppend'].some((q) => se.$slots[q]) ||
                          (e.footerClone && !se.$props.grid)
                            ? (C(),
                              A(
                                'tfoot',
                                {
                                  key: 1,
                                  class: Pe([
                                    'va-data-table__table-tfoot',
                                    { 'va-data-table__table-tfoot--sticky': se.$props.stickyFooter },
                                  ]),
                                  style: me({ bottom: I.value && se.$props.stickyFooter ? `${E}px` : void 0 }),
                                },
                                [
                                  L(se.$slots, 'footerPrepend'),
                                  L(se.$slots, 'footer', {}, () => [
                                    e.hideDefaultHeader
                                      ? W('', !0)
                                      : (C(),
                                        ee(
                                          f(fu),
                                          le({ key: 0 }, be.value, {
                                            'is-footer': '',
                                            onToggleBulkSelection: f(_),
                                            onToggleSorting: f(c),
                                          }),
                                          Ht({ _: 2 }, [
                                            Ue(se.$slots, (q, Q) => ({
                                              name: Q,
                                              fn: G((ie) => [L(se.$slots, Q, pe(ke(ie)))]),
                                            })),
                                          ]),
                                          1040,
                                          ['onToggleBulkSelection', 'onToggleSorting'],
                                        )),
                                  ]),
                                  L(se.$slots, 'footerAppend'),
                                ],
                                6,
                              ))
                            : W('', !0),
                        ],
                        16,
                      ),
                      f(Ce)
                        ? (C(),
                          A(
                            'div',
                            { key: 1, ref_key: 'bottomTrigger', ref: J, class: 'va-data-table__scroll-trigger' },
                            null,
                            512,
                          ))
                        : W('', !0),
                    ]),
                    _: 2,
                  },
                  1032,
                  ['style', 'loading', 'color'],
                ),
              ],
            ),
            _: 3,
          },
          16,
          ['style'],
        )
      )
    },
  }),
  bP = ye(_P),
  sf = (e) => (e === null ? !1 : typeof e == 'object' && ('start' in e || 'end' in e)),
  zP = (e, t) => {
    const n = H(e.value),
      o = p({
        get: () => n.value,
        set: (a) => {
          if ((t.value && (e.value = a), !a)) {
            e.value = a
            return
          }
          sf(a) ? a.end !== null && (e.value = a) : (e.value = a), (n.value = a)
        },
      })
    return (
      ge(e, (a) => {
        n.value = a
      }),
      {
        valueComputed: o,
        reset: () => {
          n.value && sf(n.value) && (n.value = e.value)
        },
      }
    )
  },
  ya = (e) => Object.prototype.toString.call(e) === '[object Date]',
  uf = (e) => new Date(Date.parse(e)),
  cf = (e) => ya(e) && !isNaN(e.getTime()),
  CP = (e) => {
    const t = (l) => {
        const s = l.split(e.delimiter)
        return s.length < 2
          ? !1
          : s.every((i) => {
              const u = (e.parseDate || uf)(i)
              return cf(u)
            })
      },
      n = (l) => l.includes(e.rangeDelimiter),
      o = H(!0),
      r = (l) => {
        const s = l.split('.'),
          i = (s == null ? void 0 : s.length) === 3 ? s.reverse().join('-') : l,
          u = (e.parseDate || uf)(i)
        return (o.value = cf(u)), u
      }
    return {
      parseDateInputValue: (l) => {
        if (((o.value = !0), e.parse)) return e.parse(l, o)
        if (t(l)) return l.split(e.delimiter).map(r)
        if (n(l)) {
          const [s, i] = l.split(e.rangeDelimiter).map(r)
          return { start: s, end: i }
        }
        return r(l)
      },
      isValid: o,
    }
  },
  SP = (e) => {
    const t = Date.parse(e)
    return !isNaN(t) && !e.includes(' ')
  },
  wP = (e) => e.endsWith('GMT'),
  $P = (e) => {
    const t = new Date(e)
    return !isNaN(t.getTime())
  },
  kP = (e, t) => (wP(t) ? e.toUTCString() : SP(t) ? e.toISOString() : $P(t) ? e.toString() : null),
  bi = (e) => (e === null ? !1 : typeof e == 'object' && ('start' in e || 'end' in e)),
  zi = (e) => (e === null ? !1 : Array.isArray(e)),
  df = (e) => (e === null ? !1 : typeof e == 'string' || typeof e == 'number' || e instanceof Date),
  TP = (e, t, n, o, r) => {
    const a = (c, d) => {
        if (r) return r(d)
        if (typeof c == 'string') {
          const m = kP(d, c)
          return m || o(d)
        }
        return typeof c == 'number' ? d.getTime() : d
      },
      l = (c) => (c instanceof Date ? c : new Date(c)),
      s = p(() =>
        e.value === null || e.value === void 0
          ? null
          : typeof e.value == 'string'
            ? n(e.value)
            : typeof e.value == 'number'
              ? new Date(e.value)
              : e.value,
      ),
      i = p({
        get: () => {
          if (s.value === null || s.value === void 0) return null
          if (zi(s.value)) return s.value.map(l)
          if (bi(s.value)) {
            const { start: c, end: d } = s.value
            return { start: c ? l(c) : null, end: d ? l(d) : null }
          }
          return l(s.value)
        },
        set(c) {
          var d, m
          if (c == null) {
            e.value = c
            return
          }
          if (zi(c) && (zi(e.value) || ci(e.value))) {
            const v = e.value
            e.value = c.map((g, h) => a((v == null ? void 0 : v[h]) || (v == null ? void 0 : v[0]), g))
            return
          }
          if (bi(c) && (bi(e.value) || ci(e.value))) {
            const { start: v, end: g } = c
            e.value = {
              start: v ? a((d = e.value) == null ? void 0 : d.start, v) : null,
              end: g ? a((m = e.value) == null ? void 0 : m.start, g) : null,
            }
            return
          }
          if (df(c) && (df(e.value) || ci(e.value))) {
            e.value = a(e.value, c)
            return
          }
          throw new Error('Input date is not the same as date from props')
        },
      })
    return {
      text: p({
        get: () => (i.value === null || i.value === void 0 ? '' : o(i.value)),
        set: (c) => {
          e.value = n(c)
        },
      }),
      normalized: i,
    }
  },
  VP = (e, t) => (e == null ? void 0 : e.toDateString()) === (t == null ? void 0 : t.toDateString()),
  Yh = (e, t) => (e == null ? void 0 : e.getFullYear()) === (t == null ? void 0 : t.getFullYear()),
  PP = (e, t) => Yh(e, t) && (e == null ? void 0 : e.getMonth()) === (t == null ? void 0 : t.getMonth()),
  AP = (e) => {
    const t = new Date()
    return t.setFullYear(e), t
  },
  Mr = (e) => (e === null ? !1 : typeof e == 'object' && ('start' in e || 'end' in e)),
  Ns = (e) => ya(e),
  Rs = (e) => Array.isArray(e),
  Xh = 0,
  Jh = 11,
  EP = (e) => (e.month === Jh ? { ...e, year: e.year + 1, month: Xh } : { ...e, month: e.month + 1 }),
  IP = (e) => (e.month === Xh ? { ...e, year: e.year - 1, month: Jh } : { ...e, month: e.month - 1 }),
  xP = (e) =>
    ya(e) ? e : ya(e == null ? void 0 : e.start) ? e.start : Array.isArray(e) && ya(e[0]) ? e[0] : new Date(),
  Qh = (e, t, n) => {
    const o = xP(e.modelValue),
      r = { type: 'day', year: o.getFullYear(), month: o.getMonth(), ...n },
      a = H(r),
      l = p({
        get() {
          return { ...a.value, ...e.view }
        },
        set(u) {
          ;(a.value = u), t('update:view', u)
        },
      })
    return {
      syncView: l,
      next: () => {
        l.value.type === 'day'
          ? (l.value = EP(l.value))
          : l.value.type === 'month' && (l.value = { ...l.value, year: l.value.year + 1 })
      },
      prev: () => {
        l.value.type === 'day'
          ? (l.value = IP(l.value))
          : l.value.type === 'month' && (l.value = { ...l.value, year: l.value.year - 1 })
      },
    }
  },
  OP = ['onKeypress'],
  Tc = re({
    name: 'VaDatePickerCell',
    __name: 'VaDatePickerCell',
    props: {
      otherMonth: { type: Boolean, default: !1 },
      today: { type: Boolean, default: !1 },
      inRange: { type: Boolean, default: !1 },
      disabled: { type: Boolean, default: !1 },
      selected: { type: Boolean, default: !1 },
      weekend: { type: Boolean, default: !1 },
      hidden: { type: Boolean, default: !1 },
      focused: { type: Boolean, default: !1 },
      highlightWeekend: { type: Boolean, default: !1 },
      highlightToday: { type: Boolean, default: !1 },
      readonly: { type: Boolean, default: !1 },
      color: { type: String, default: 'primary' },
    },
    emits: ['click'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        r = () => {
          n.disabled || o('click')
        },
        { getColor: a } = Re(),
        l = p(() => a(n.color)),
        { textColorComputed: s } = Vt(l)
      return (i, u) =>
        e.hidden
          ? (C(),
            A(
              'div',
              {
                key: 0,
                class: 'va-date-picker-cell va-date-picker-cell_clear',
                style: me(`--va-bg: ${String(l.value)};--va-text-color-computed: ${String(f(s))}`),
              },
              null,
              4,
            ))
          : (C(),
            A(
              'div',
              {
                key: 1,
                class: Pe([
                  'va-date-picker-cell',
                  {
                    'va-date-picker-cell_other-month': e.otherMonth,
                    'va-date-picker-cell_today': e.highlightToday && e.today,
                    'va-date-picker-cell_in-range': e.inRange,
                    'va-date-picker-cell_disabled': e.disabled,
                    'va-date-picker-cell_highlighted-weekend': e.highlightWeekend && e.weekend,
                    'va-date-picker-cell_selected': e.selected,
                    'va-date-picker-cell_focused': e.focused,
                    'va-date-picker-cell_readonly': e.readonly,
                  },
                ]),
                onClick: r,
                onKeypress: $e(Se(r, ['prevent', 'stop']), ['space', 'enter']),
                style: me(`--va-bg: ${String(l.value)};--va-text-color-computed: ${String(f(s))}`),
              },
              [L(i.$slots, 'default')],
              46,
              OP,
            ))
    },
  })
function mf(e) {
  return e === void 0
}
const Vc = ({ rowSize: e, start: t, end: n, onSelected: o, onFocusIndex: r }) => {
    const a = H(-1)
    let l = !1
    return {
      focusedCellIndex: a,
      containerAttributes: {
        onFocus: () => {
          if (l) return
          l = !1
          const m = r === void 0 ? f(t) || 0 : f(r)
          a.value = m
        },
        onKeydown: (m) => {
          if (
            (['ArrowRight', 'ArrowLeft', 'ArrowDown', 'ArrowUp', 'Enter', 'Space'].includes(m.key) &&
              (m.preventDefault(), m.stopPropagation()),
            m.key === 'Enter' || m.key === 'Space')
          ) {
            if (o === void 0) return
            o(a.value)
            return
          }
          m.key === 'ArrowRight' && (a.value += 1),
            m.key === 'ArrowLeft' && (a.value -= 1),
            m.key === 'ArrowDown' && (a.value += e),
            m.key === 'ArrowUp' && (a.value -= e),
            !mf(t) && a.value < f(t) && (a.value = f(t)),
            !mf(n) && a.value > f(n) - 1 && (a.value = f(n) - 1)
        },
        onBlur: () => {
          ;(l = !1), (a.value = -1)
        },
        onMousedown: () => {
          l = !0
        },
        tabindex: 0,
      },
    }
  },
  LP = (e, t) => {
    if (t === 'single') return e
    if (t === 'range') return { start: e, end: null }
    if (t === 'multiple') return [e]
    if (t === 'auto') return e
    throw new Error('Unknown mode')
  },
  Ll = (e, t) => {
    throw Error(`Incorrect modelValue for mode ${t}. Got ${JSON.stringify(e)}`)
  },
  BP = (e) => (Ns(e) ? 'single' : Mr(e) ? 'range' : Rs(e) ? 'multiple' : Ll(e, 'auto')),
  ff = (e) => (e.start && e.end && e.start > e.end ? { start: e.end, end: e.start } : e),
  NP = (e, t, n) => ({
    updateModelValue: (r) => {
      if (!e.modelValue) {
        t('update:modelValue', LP(r, e.mode))
        return
      }
      const a = e.mode === 'auto' ? BP(e.modelValue) : e.mode
      if (a === 'single') {
        if (!Ns(e.modelValue)) return Ll(e.modelValue, a)
        t('update:modelValue', r)
      } else if (a === 'range') {
        if (!Mr(e.modelValue)) return Ll(e.modelValue, a)
        if (e.modelValue.end && n(e.modelValue.end, r))
          return t('update:modelValue', { start: e.modelValue.start, end: null })
        if (e.modelValue.start && n(e.modelValue.start, r))
          return t('update:modelValue', { start: null, end: e.modelValue.end })
        if (e.modelValue.end === null) return t('update:modelValue', ff({ start: e.modelValue.start, end: r }))
        if (e.modelValue.start === null) return t('update:modelValue', ff({ end: e.modelValue.end, start: r }))
        t('update:modelValue', { start: r, end: null })
      } else if (a === 'multiple') {
        if (!Rs(e.modelValue)) return Ll(e.modelValue, a)
        !!e.modelValue.find((s) => n(s, r))
          ? t(
              'update:modelValue',
              e.modelValue.filter((s) => !n(s, r)),
            )
          : t(
              'update:modelValue',
              [...e.modelValue, r].sort((s, i) => s.getTime() - i.getTime()),
            )
      }
    },
  }),
  RP = (e) => ({ month: PP, day: VP, year: Yh })[e],
  Pc = (e, t, n, o) => {
    const r = RP(e),
      a = n.allowedDays || n.allowedMonths || n.allowedYears,
      l = (g) => (a === void 0 ? !1 : !a(g)),
      s = H(-1),
      i = p(() => t.value[s.value]),
      { updateModelValue: u } = NP(n, o, r),
      c = (g) => {
        n.readonly || l(g) || (u(g), o(`click:${e}`, g))
      },
      d = (g) => r(new Date(), g),
      m = (g) =>
        n.modelValue
          ? Ns(n.modelValue)
            ? r(n.modelValue, g)
            : Rs(n.modelValue)
              ? !!n.modelValue.find((h) => r(h, g))
              : Mr(n.modelValue)
                ? r(n.modelValue.start, g) || r(n.modelValue.end, g)
                : !1
          : !1,
      v = (g) => {
        if (!n.modelValue || !Mr(n.modelValue)) return !1
        if (n.modelValue.start && n.modelValue.end) return n.modelValue.start < g && n.modelValue.end > g
        const h = n.modelValue.start || n.modelValue.end
        return h && i.value ? (h < g ? i.value >= g : i.value <= g) : !1
      }
    return (
      ge(i, (g) => {
        o(`hover:${e}`, g)
      }),
      { hoveredIndex: s, hoveredValue: i, onClick: c, isToday: d, isSelected: m, isInRange: v }
    )
  },
  Ci = (e, t) => new Date(e, t + 1, 0).getDate(),
  DP = (e, t) => new Date(e, t, 1).getDay(),
  Si = (e) => Array.from(Array(e).keys()).map((t) => t + 1),
  MP = (e, t) => {
    const o = (c) => {
        var d
        return !t || !((d = t.firstWeekday) != null && d.value)
          ? c
          : t.firstWeekday.value.toLowerCase() === 'monday'
            ? c === 0
              ? 6
              : c - 1
            : c
      },
      r = p(() => o(DP(e.value.year, e.value.month))),
      a = () => {
        if (r.value === 0) return []
        const c = Ci(e.value.year, e.value.month - 1)
        return Si(c)
          .slice(-r.value)
          .map((m) => new Date(e.value.year, e.value.month - 1, m))
      },
      l = () => Si(Ci(e.value.year, e.value.month)).map((d) => new Date(e.value.year, e.value.month, d)),
      s = p(() => [...a(), ...l()]),
      i = p(() => s.value.length)
    return {
      calendarDates: p(() => {
        const c = s.value,
          d = 7 * 6 - c.length,
          m = Ci(e.value.year, e.value.month + 1),
          v = Si(m)
        return [...c, ...v.slice(0, d).map((g) => new Date(e.value.year, e.value.month + 1, g))]
      }),
      currentMonthStartIndex: r,
      currentMonthEndIndex: i,
    }
  },
  FP = ['onMouseenter'],
  jP = { class: 'va-date-picker-cell__day' },
  Sl = re({
    name: 'VaDayPicker',
    __name: 'VaDayPicker',
    props: {
      monthNames: { type: Array, required: !0 },
      weekdayNames: { type: Array, required: !0 },
      firstWeekday: { type: String, default: 'Sunday' },
      hideWeekDays: { type: Boolean, default: !1 },
      view: { type: Object, default: () => ({ type: 'day' }) },
      modelValue: { type: [Date, Array, Object] },
      mode: { type: String, default: 'auto' },
      showOtherMonths: { type: Boolean, default: !1 },
      allowedDays: { type: Function },
      weekends: { type: Function },
      highlightWeekend: { type: Boolean, default: !1 },
      highlightToday: { type: Boolean, default: !1 },
      readonly: { type: Boolean, default: !1 },
      color: { type: String, default: 'primary' },
    },
    emits: ['update:modelValue', 'hover:day', 'click:day'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        { firstWeekday: r, weekdayNames: a, view: l } = Sn(n),
        { calendarDates: s, currentMonthStartIndex: i, currentMonthEndIndex: u } = MP(l, { firstWeekday: r }),
        c = p(() => (r.value.toLowerCase() === 'sunday' ? a.value : [...a.value.slice(1), a.value[0]])),
        { hoveredIndex: d, onClick: m, isToday: v, isSelected: g, isInRange: h } = Pc('day', s, n, o),
        _ = p(() => (n.showOtherMonths ? 0 : i.value)),
        y = p(() => (n.showOtherMonths ? s.value.length : u.value)),
        { focusedCellIndex: b, containerAttributes: w } = Vc({
          rowSize: 7,
          start: _,
          end: y,
          onSelected: (z) => m(s.value[z]),
        })
      ge(b, (z) => {
        d.value = z
      }),
        ge(d, (z) => {
          b.value = z
        })
      const S = (z) => n.view.month !== z.getMonth(),
        $ = (z) => (n.allowedDays === void 0 ? !1 : !n.allowedDays(z)),
        k = (z) => (n.weekends === void 0 ? z.getDay() === 6 || z.getDay() === 0 : n.weekends(z))
      return (z, V) => (
        C(),
        A(
          'div',
          le({ class: 'va-day-picker' }, f(w)),
          [
            e.hideWeekDays
              ? W('', !0)
              : (C(!0),
                A(
                  Te,
                  { key: 0 },
                  Ue(
                    c.value,
                    (T) => (
                      C(),
                      A('div', { key: T, class: 'va-day-picker__weekday' }, [
                        L(z.$slots, 'weekday', {}, () => [Fe(Ae(T), 1)]),
                      ])
                    ),
                  ),
                  128,
                )),
            (C(!0),
            A(
              Te,
              null,
              Ue(
                f(s),
                (T, B) => (
                  C(),
                  A(
                    'div',
                    {
                      class: 'va-day-picker__calendar__day-wrapper',
                      key: B,
                      onMouseenter: (K) => (d.value = B),
                      onMouseleave: V[0] || (V[0] = (K) => (d.value = -1)),
                    },
                    [
                      ne(
                        Tc,
                        {
                          hidden: S(T) && !e.showOtherMonths,
                          today: f(v)(T),
                          selected: f(g)(T),
                          'in-range': f(h)(T),
                          'other-month': S(T),
                          weekend: k(T),
                          disabled: $(T),
                          focused: f(d) === B,
                          'highlight-today': e.highlightToday,
                          'highlight-weekend': e.highlightWeekend,
                          readonly: z.$props.readonly,
                          color: e.color,
                          onClick: (K) => {
                            f(m)(T), (b.value = B)
                          },
                        },
                        {
                          default: G(() => [
                            Y('span', jP, [L(z.$slots, 'day', pe(ke({ date: T })), () => [Fe(Ae(T.getDate()), 1)])]),
                          ]),
                          _: 2,
                        },
                        1032,
                        [
                          'hidden',
                          'today',
                          'selected',
                          'in-range',
                          'other-month',
                          'weekend',
                          'disabled',
                          'focused',
                          'highlight-today',
                          'highlight-weekend',
                          'readonly',
                          'color',
                          'onClick',
                        ],
                      ),
                    ],
                    40,
                    FP,
                  )
                ),
              ),
              128,
            )),
          ],
          16,
        )
      )
    },
  }),
  HP = { key: 0, class: 'va-date-picker-header va-date-picker__header' },
  UP = { class: 'va-date-picker__header__text' },
  WP = { class: 'va-date-picker__header__month' },
  wl = re({
    name: 'VaDatePickerHeader',
    __name: 'VaDatePickerHeader',
    props: {
      monthNames: { type: Array, required: !0 },
      view: { type: Object },
      color: { type: String },
      disabled: { type: Boolean, default: !1 },
      ariaNextPeriodLabel: Be('$t:nextPeriod'),
      ariaPreviousPeriodLabel: Be('$t:previousPeriod'),
      ariaSwitchViewLabel: Be('$t:switchView'),
    },
    emits: ['update:view'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        { syncView: r, prev: a, next: l } = Qh(n, o),
        s = () => {
          r.value.type === 'day'
            ? (r.value = { ...r.value, type: 'month' })
            : r.value.type === 'month' && (r.value = { ...r.value, type: 'year' })
        },
        i = (d) => {
          r.value = d
        },
        u = lh(Fg(mc())),
        { tp: c } = ut()
      return (d, m) =>
        f(r).type !== 'year'
          ? (C(),
            A('div', HP, [
              L(d.$slots, 'buttonPrev', pe(ke({ onClick: f(a) })), () => [
                ne(
                  f(Xe),
                  {
                    'va-child': 'prevButton',
                    disabled: d.$props.disabled,
                    icon: 'va-arrow-left',
                    preset: 'plain',
                    size: 'small',
                    color: e.color,
                    textColor: f(u),
                    'aria-label': f(c)(d.$props.ariaPreviousPeriodLabel),
                    round: '',
                    onClick: f(a),
                  },
                  null,
                  8,
                  ['disabled', 'color', 'textColor', 'aria-label', 'onClick'],
                ),
              ]),
              Y('div', UP, [
                L(
                  d.$slots,
                  'header',
                  pe(
                    ke({
                      year: f(r).year,
                      month: f(r).month,
                      monthNames: e.monthNames,
                      view: f(r),
                      changeView: i,
                      switchView: s,
                    }),
                  ),
                  () => [
                    ne(
                      f(Xe),
                      {
                        'va-child': 'middleButton',
                        disabled: d.$props.disabled,
                        preset: 'plain',
                        size: 'small',
                        color: e.color,
                        textColor: f(u),
                        'aria-label': f(c)(d.$props.ariaSwitchViewLabel),
                        onClick: s,
                      },
                      {
                        default: G(() => [
                          L(d.$slots, 'year', pe(ke({ year: f(r).year })), () => [Fe(Ae(f(r).year), 1)]),
                          f(r).type === 'day'
                            ? L(d.$slots, 'month', pe(le({ key: 0 }, { month: f(r).month })), () => [
                                Y('span', WP, Ae(e.monthNames[f(r).month]), 1),
                              ])
                            : W('', !0),
                        ]),
                        _: 3,
                      },
                      8,
                      ['disabled', 'color', 'textColor', 'aria-label'],
                    ),
                  ],
                ),
              ]),
              L(d.$slots, 'buttonNext', pe(ke({ onClick: f(l) })), () => [
                ne(
                  f(Xe),
                  {
                    'va-child': 'nextButton',
                    disabled: d.$props.disabled,
                    icon: 'va-arrow-right',
                    preset: 'plain',
                    size: 'small',
                    color: e.color,
                    textColor: f(u),
                    'aria-label': f(c)(d.$props.ariaNextPeriodLabel),
                    onClick: f(l),
                    round: '',
                  },
                  null,
                  8,
                  ['disabled', 'color', 'textColor', 'aria-label', 'onClick'],
                ),
              ]),
            ]))
          : W('', !0)
    },
  }),
  GP = ['onMouseenter'],
  $l = re({
    name: 'VaMonthPicker',
    __name: 'VaMonthPicker',
    props: {
      modelValue: { type: [Date, Array, Object] },
      monthNames: { type: Array, required: !0 },
      view: { type: Object, default: () => ({ type: 'month' }) },
      allowedMonths: { type: Function, default: void 0 },
      highlightToday: { type: Boolean, default: !0 },
      mode: { type: String, default: 'auto' },
      readonly: { type: Boolean, default: !1 },
      color: { type: String, default: 'primary' },
    },
    emits: ['update:modelValue', 'hover:month', 'click:month'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        { view: r } = Sn(n),
        a = p(() => Array.from(Array(12).keys()).map((g) => new Date(r.value.year, g))),
        { hoveredIndex: l, onClick: s, isToday: i, isSelected: u, isInRange: c } = Pc('month', a, n, o),
        d = (g) => (n.allowedMonths === void 0 ? !1 : !n.allowedMonths(g)),
        { focusedCellIndex: m, containerAttributes: v } = Vc({
          rowSize: 3,
          start: 0,
          end: a.value.length,
          onSelected: (g) => s(a.value[g]),
        })
      return (
        ge(m, (g) => {
          l.value = g
        }),
        ge(l, (g) => {
          m.value = g
        }),
        (g, h) => (
          C(),
          A(
            'div',
            le({ class: 'va-month-picker' }, f(v)),
            [
              (C(!0),
              A(
                Te,
                null,
                Ue(
                  a.value,
                  (_, y) => (
                    C(),
                    A(
                      'div',
                      {
                        key: y,
                        class: 'va-month-picker__month-wrapper',
                        onMouseenter: (b) => (l.value = y),
                        onMouseleave: h[0] || (h[0] = (b) => (l.value = -1)),
                      },
                      [
                        ne(
                          Tc,
                          {
                            'in-range': !!f(c)(_),
                            selected: !!f(u)(_),
                            disabled: !!d(_),
                            today: !!f(i)(_),
                            focused: f(l) === y,
                            'highlight-today': e.highlightToday,
                            readonly: g.$props.readonly,
                            color: e.color,
                            onClick: (b) => {
                              f(s)(_), (m.value = y)
                            },
                          },
                          {
                            default: G(() => [
                              L(g.$slots, 'month', pe(ke({ monthIndex: y, month: e.monthNames[y] })), () => [
                                Fe(Ae(e.monthNames[y]), 1),
                              ]),
                            ]),
                            _: 2,
                          },
                          1032,
                          [
                            'in-range',
                            'selected',
                            'disabled',
                            'today',
                            'focused',
                            'highlight-today',
                            'readonly',
                            'color',
                            'onClick',
                          ],
                        ),
                      ],
                      40,
                      GP,
                    )
                  ),
                ),
                128,
              )),
            ],
            16,
          )
        )
      )
    },
  }),
  kl = re({
    name: 'VaYearPicker',
    __name: 'VaYearPicker',
    props: {
      modelValue: { type: [Date, Array, Object] },
      allowedYears: { type: Function, default: void 0 },
      highlightToday: { type: Boolean, default: !0 },
      startYear: { type: [Number, String], default: 1970 },
      mode: { type: String, default: 'auto' },
      view: { type: Object, default: () => ({ type: 'year' }) },
      endYear: { type: [Number, String], default: () => new Date().getFullYear() + 50 },
      readonly: { type: Boolean, default: !1 },
      color: { type: String, default: 'primary' },
    },
    emits: ['update:modelValue', 'hover:year', 'click:year'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        r = je(),
        { view: a } = Sn(n),
        l = (S, $) => {
          const k = $ - S + 1
          return Array.from(Array(k).keys()).map((z) => AP(S + z))
        },
        s = We('startYear'),
        i = We('endYear'),
        u = p(() => l(s.value, i.value)),
        c = (S) => {
          if (!r.value) return
          const $ = r.value.scrollHeight,
            k = r.value.offsetHeight,
            z = ($ / u.value.length) * S,
            V = $ / u.value.length,
            T = z - r.value.scrollTop
          T < 0 ? r.value.scrollTo({ top: z }) : T > k && r.value.scrollTo({ top: z - k + V })
        },
        d = (S) => {
          if (!r.value) return
          const $ = r.value.scrollHeight,
            k = r.value.offsetHeight,
            z = ($ / u.value.length) * S
          r.value.scrollTo({ top: z - k / 2 })
        }
      et(() => {
        const S = u.value.findIndex(($) => $.getFullYear() === a.value.year)
        d(S)
      })
      const { hoveredIndex: m, onClick: v, isToday: g, isSelected: h, isInRange: _ } = Pc('year', u, n, o),
        y = (S) => (n.allowedYears === void 0 ? !1 : !n.allowedYears(S)),
        { focusedCellIndex: b, containerAttributes: w } = Vc({
          rowSize: 1,
          start: 0,
          end: u.value.length,
          onFocusIndex: p(() => u.value.findIndex((S) => S.getFullYear() === a.value.year)),
          onSelected: (S) => v(u.value[S]),
        })
      return (
        ge(b, (S) => S !== -1 && c(S)),
        ge(b, (S) => {
          m.value = S
        }),
        ge(m, (S) => {
          b.value = S
        }),
        (S, $) => (
          C(),
          A(
            'div',
            le({ ref_key: 'rootNode', ref: r, class: 'va-year-picker' }, f(w), {
              onKeydown:
                $[1] ||
                ($[1] = $e(
                  Se(() => {}, ['prevent']),
                  ['space'],
                )),
            }),
            [
              (C(!0),
              A(
                Te,
                null,
                Ue(
                  u.value,
                  (k, z) => (
                    C(),
                    ee(
                      Tc,
                      {
                        key: k.toString(),
                        'in-range': f(_)(k),
                        selected: f(h)(k),
                        disabled: y(k),
                        today: f(g)(k),
                        focused: f(b) === z,
                        'highlight-today': e.highlightToday,
                        readonly: S.$props.readonly,
                        color: e.color,
                        onClick: (V) => {
                          f(v)(k), (b.value = z)
                        },
                        onMouseenter: (V) => (m.value = z),
                        onMouseleave: $[0] || ($[0] = (V) => (m.value = -1)),
                      },
                      { default: G(() => [Fe(Ae(k.getFullYear()), 1)]), _: 2 },
                      1032,
                      [
                        'in-range',
                        'selected',
                        'disabled',
                        'today',
                        'focused',
                        'highlight-today',
                        'readonly',
                        'color',
                        'onClick',
                        'onMouseenter',
                      ],
                    )
                  ),
                ),
                128,
              )),
            ],
            16,
          )
        )
      )
    },
  }),
  KP = { class: 'va-date-picker__picker-wrapper' },
  qP = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  YP = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'],
  ns = re({
    name: 'VaDatePicker',
    __name: 'VaDatePicker',
    props: {
      ...lg({ prevButton: Xe, nextButton: Xe, middleButton: Xe }),
      ...Tt,
      ...Le,
      ...Qe(wl),
      ...Qe(Sl),
      ...Qe($l),
      ...Qe(kl),
      modelValue: { type: [Date, Array, Object] },
      monthNames: { type: Array, default: qP },
      weekdayNames: { type: Array, default: YP },
      view: { type: Object },
      type: { type: String, default: 'day' },
      readonly: { type: Boolean, default: !1 },
      disabled: { type: Boolean, default: !1 },
      color: { type: String, default: void 0 },
      weekendsColor: { type: String, default: void 0 },
    },
    emits: [...Mt, ...Yo(wl), ...Yo(kl), ...Yo(Sl), ...Yo($l)],
    setup(e, { expose: t, emit: n }) {
      const o = e
      sg(o)
      const r = n,
        a = H(),
        { valueComputed: l } = vt(o, r),
        { syncView: s } = Qh(o, r, { type: o.type }),
        i = p(() => ({ 'va-date-picker_without-week-days': o.hideWeekDays, 'va-date-picker_disabled': o.disabled })),
        u = (k) => {
          o.readonly || (o.type === 'day' && (l.value = k))
        },
        c = (k) => {
          r('click:month', k)
          const z = k.getFullYear(),
            V = k.getMonth()
          o.type !== 'month' && (s.value = { type: 'day', year: z, month: V })
        },
        d = (k) => {
          o.type === 'month' && (l.value = k)
        },
        m = (k) => {
          r('click:year', k)
          const z = k.getFullYear()
          o.type !== 'year' && (s.value = { type: 'month', year: z, month: s.value.month })
        },
        v = (k) => {
          o.type === 'year' && (l.value = k)
        },
        { colorsToCSSVariable: g } = Re(),
        h = p(() => ({ ...g({ color: o.color, 'weekends-color': o.weekendsColor }, 'va-date-picker') })),
        _ = () => {
          var k
          return (k = a.value) == null ? void 0 : k.$el.focus()
        }
      ge(s, (k, z) => {
        k.type !== z.type && dt(_)
      })
      const y = (k) => o.readonly && o.type === k,
        b = it(Qe(Sl)),
        w = it(Qe(wl)),
        S = it(Qe($l)),
        $ = it(Qe(kl))
      return (
        t({ focus: _, focusCurrentPicker: _ }),
        (k, z) => (
          C(),
          A(
            'div',
            { class: Pe(['va-date-picker', i.value]), style: me(h.value) },
            [
              ne(
                wl,
                le(f(w), { view: f(s), 'onUpdate:view': z[0] || (z[0] = (V) => (nt(s) ? (s.value = V) : null)) }),
                Ht({ _: 2 }, [Ue(k.$slots, (V, T) => ({ name: T, fn: G((B) => [L(k.$slots, T, pe(ke(B)))]) }))]),
                1040,
                ['view'],
              ),
              Y('div', KP, [
                f(s).type === 'day'
                  ? (C(),
                    ee(
                      Sl,
                      le({ key: 0, ref_key: 'currentPicker', ref: a }, f(b), {
                        'model-value': f(l),
                        view: f(s),
                        readonly: k.$props.disabled || y('day'),
                        'onUpdate:modelValue': u,
                        'onHover:day': z[1] || (z[1] = (V) => k.$emit('hover:day', V)),
                        'onClick:day': z[2] || (z[2] = (V) => k.$emit('click:day', V)),
                      }),
                      Ht({ _: 2 }, [Ue(k.$slots, (V, T) => ({ name: T, fn: G((B) => [L(k.$slots, T, pe(ke(B)))]) }))]),
                      1040,
                      ['model-value', 'view', 'readonly'],
                    ))
                  : W('', !0),
                f(s).type === 'month'
                  ? (C(),
                    ee(
                      $l,
                      le({ key: 1, ref_key: 'currentPicker', ref: a }, f(S), {
                        view: f(s),
                        'model-value': f(l),
                        readonly: k.$props.disabled || y('month'),
                        'onUpdate:modelValue': d,
                        'onHover:month': z[3] || (z[3] = (V) => k.$emit('hover:month', V)),
                        'onClick:month': c,
                      }),
                      Ht({ _: 2 }, [Ue(k.$slots, (V, T) => ({ name: T, fn: G((B) => [L(k.$slots, T, pe(ke(B)))]) }))]),
                      1040,
                      ['view', 'model-value', 'readonly'],
                    ))
                  : W('', !0),
                f(s).type === 'year'
                  ? (C(),
                    ee(
                      kl,
                      le({ key: 2, ref_key: 'currentPicker', ref: a }, f($), {
                        view: f(s),
                        'model-value': f(l),
                        readonly: k.$props.disabled || y('year'),
                        'onHover:year': z[4] || (z[4] = (V) => k.$emit('hover:year', V)),
                        'onUpdate:modelValue': v,
                        'onClick:year': m,
                      }),
                      Ht({ _: 2 }, [Ue(k.$slots, (V, T) => ({ name: T, fn: G((B) => [L(k.$slots, T, pe(ke(B)))]) }))]),
                      1040,
                      ['view', 'model-value', 'readonly'],
                    ))
                  : W('', !0),
              ]),
            ],
            6,
          )
        )
      )
    },
  }),
  Zh = Qe(pn, ['innerAnchorSelector', 'stateful', 'keyboardNavigation', 'modelValue']),
  $n = {
    ...Zh,
    modelValue: {},
    closeOnChange: { type: Boolean, default: null },
    isOpen: { type: Boolean, default: void 0 },
  },
  Ac = ['update:isOpen'],
  Ec = function (e, t, n = {}) {
    const [o] = rr('isOpen', e, t, !1),
      r = p(() => (e.closeOnChange !== null ? e.closeOnChange : f(n.defaultCloseOnValueUpdate || !1)))
    return (
      ge(
        () => e.modelValue,
        () => {
          r.value && (o.value = !1)
        },
      ),
      { dropdownProps: it(Zh), isOpenSync: o }
    )
  },
  pf = Qe(un, ['focused', 'maxLength', 'counterValue']),
  vf = Qe(ns),
  XP = re({
    name: 'VaDateInput',
    __name: 'VaDateInput',
    props: {
      ...$n,
      ...rl,
      ...pf,
      ...vf,
      ...ro,
      ...Le,
      clearValue: { type: void 0, default: void 0 },
      modelValue: { type: [Date, Array, Object, String, Number] },
      resetOnClose: { type: Boolean, default: !0 },
      closeOnContentClick: { type: Boolean, default: !1 },
      offset: { ...$n.offset, default: () => [2, 0] },
      format: { type: Function },
      formatDate: { type: Function, default: (e) => e.toLocaleDateString() },
      formatValue: { type: Function },
      parse: { type: Function },
      parseDate: { type: Function },
      delimiter: { type: String, default: ', ' },
      rangeDelimiter: { type: String, default: ' ~ ' },
      manualInput: { type: Boolean, default: !1 },
      color: { type: String, default: 'primary' },
      leftIcon: { type: Boolean, default: !1 },
      icon: { type: String, default: 'va-calendar' },
      ariaToggleDropdownLabel: Be('$t:toggleDropdown'),
      ariaResetLabel: Be('$t:resetDate'),
      ariaSelectedDateLabel: Be('$t:selectedDate'),
    },
    emits: [...Vs, ...Yo(ns), ...Os, ...Bo, ...Mt, ...Ac, 'update:text'],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        a = je(),
        l = H(),
        { resetOnClose: s } = Sn(o),
        { trapFocusIn: i, freeFocus: u } = Jg(),
        c = () => {
          const de = St(l.value)
          if (!de) {
            u()
            return
          }
          i(de)
        }
      ge([l], () => {
        c()
      })
      const { valueComputed: d } = vt(o, r),
        { isOpenSync: m, dropdownProps: v } = Ec(o, r, {
          defaultCloseOnValueUpdate: p(() => !(Array.isArray(h.value) || (Mr(h.value) && h.value.end === null))),
        }),
        g = p(() => !s.value),
        { valueComputed: h, reset: _ } = zP(d, g)
      ge(m, (de) => {
        !de && !g.value && _()
      })
      const { isFocused: y, focus: b, blur: w, onFocus: S, onBlur: $ } = lo(a),
        k = wc(l),
        z = (de) => (de ? o.formatDate(de) : '...'),
        { parseDateInputValue: V, isValid: T } = CP(o)
      ge(h, () => {
        T.value = !0
      })
      const B = (de) =>
          o.format
            ? o.format(h.value)
            : Rs(de)
              ? de.map((Oe) => o.formatDate(Oe)).join(o.delimiter)
              : Ns(de)
                ? o.formatDate(de)
                : Mr(de)
                  ? z(de.start) + o.rangeDelimiter + z(de.end)
                  : (de == null, ''),
        { text: K, normalized: j } = TP(h, Ut(o, 'mode'), V, B, o.formatValue),
        U = p(() => (T.value ? (h.value ? K.value : o.clearValue ? B(o.clearValue) : '') : '')),
        D = ({ target: de }) => {
          if (o.disabled) return
          const Oe = de.value
          T.value && (h.value = Oe === '' ? o.clearValue : V(Oe))
        },
        O = () =>
          ae(() => {
            ;(d.value = o.clearValue), r('clear'), se()
          }),
        R = () => {
          ;(m.value = !1), b()
        },
        N = () => {
          dt(() => {
            var de
            return (de = l.value) == null ? void 0 : de.focusCurrentPicker()
          })
        },
        x = () => {
          m.value ? N() : b()
        },
        ce = (de) =>
          m.value
            ? !1
            : o.disabled || o.readonly
              ? !0
              : de === void 0
                ? !1
                : o.manualInput && (de == null ? void 0 : de.code) !== 'Space',
        ue = (de) => {
          ce(de instanceof KeyboardEvent ? de : void 0) || ((m.value = !m.value), dt(x))
        },
        be = () => {
          o.disabled || o.readonly || ((m.value = !0), dt(N))
        },
        {
          isDirty: xe,
          isTouched: we,
          computedError: J,
          computedErrorMessages: _e,
          listeners: Ce,
          validationAriaAttributes: I,
          validate: M,
          withoutValidation: ae,
          resetValidation: se,
        } = ao(o, r, { reset: O, focus: b, value: h })
      ge(m, (de) => {
        de || (we.value = !0)
      })
      const Ee = p(() => (!T.value && h.value !== o.clearValue) || J.value),
        He = Zt(),
        P = p(() => {
          const de = [o.leftIcon && 'prependInner', (!o.leftIcon || o.clearable) && 'icon']
          return Object.keys(He).filter((Oe) => !de.includes(Oe))
        }),
        { canBeCleared: E, clearIconProps: X, onFocus: te, onBlur: q } = Ls(o, h),
        Q = p(() => (o.disabled ? {} : o.manualInput ? { cursor: 'text' } : { cursor: 'pointer' })),
        ie = p(() => (o.manualInput ? (o.disabled || o.readonly ? -1 : 0) : -1)),
        ve = p(() => ({
          role: ie.value === 0 ? 'button' : 'none',
          ariaHidden: ie.value === -1,
          name: o.icon,
          color: 'secondary',
          tabindex: ie.value,
        })),
        he = it(pf),
        fe = p(() => ({
          ...he.value,
          focused: y.value || k.value,
          error: Ee.value,
          errorMessages: _e.value,
          readonly: o.readonly || !o.manualInput,
        })),
        Ie = p(() => ({
          focus: () => {
            o.disabled || (S(), !o.readonly && te())
          },
          blur: () => {
            o.disabled || ($(), !o.readonly && (q(), Ce.onBlur()))
          },
        })),
        { tp: F } = ut(),
        Z = Io(),
        Ve = p(() => ({
          readonly: o.readonly || !o.manualInput,
          disabled: o.disabled,
          tabindex: o.disabled ? -1 : 0,
          placeholder: o.placeholder,
          value: U.value,
          ariaLabel: o.label || F(o.ariaSelectedDateLabel),
          ariaRequired: o.requiredMark,
          ariaDisabled: o.disabled,
          ariaReadOnly: o.readonly,
          ...I.value,
          ...Rn(Z, ['class', 'style']),
        })),
        De = p(() => ({
          ...v.value,
          stateful: !1,
          innerAnchorSelector: '.va-input-wrapper__field',
          trigger: ['click', 'right-click', 'enter', 'space'],
        })),
        qe = fe,
        Ye = Ie,
        oe = it(vf)
      return (
        t({
          valueText: U,
          valueWithoutText: j,
          valueDate: j,
          focus: b,
          blur: w,
          reset: O,
          validate: M,
          showDropdown: be,
          hideAndFocus: R,
          toggleDropdown: ue,
          focusDatePicker: N,
          isDirty: xe,
          isTouched: we,
        }),
        (de, Oe) => (
          C(),
          ee(
            f(pn),
            le(
              {
                modelValue: f(m),
                'onUpdate:modelValue': Oe[9] || (Oe[9] = (Ne) => (nt(m) ? (m.value = Ne) : null)),
                class: ['va-date-input', de.$attrs.class],
                style: de.$attrs.style,
              },
              De.value,
              { onOpen: N, role: 'none' },
            ),
            {
              anchor: G(() => [
                L(
                  de.$slots,
                  'input',
                  pe(
                    ke({
                      valueText: U.value,
                      inputAttributes: Ve.value,
                      inputWrapperProps: f(qe),
                      inputListeners: f(Ye),
                    }),
                  ),
                  () => [
                    ne(
                      f(un),
                      le({ class: 'va-date-input__anchor', style: Q.value }, f(qe), yn(f(Ye)), {
                        'model-value': U.value,
                        onChange: D,
                      }),
                      Ht(
                        {
                          icon: G(() => [
                            f(E)
                              ? (C(),
                                ee(
                                  f(Ke),
                                  le(
                                    { key: 0, 'aria-label': f(F)(de.$props.ariaResetLabel) },
                                    { ...ve.value, ...f(X) },
                                    {
                                      onClick: Se(O, ['stop']),
                                      onKeydown: [$e(Se(O, ['stop']), ['enter']), $e(Se(O, ['stop']), ['space'])],
                                    },
                                  ),
                                  null,
                                  16,
                                  ['aria-label', 'onKeydown'],
                                ))
                              : W('', !0),
                            !de.$props.leftIcon && de.$props.icon
                              ? (C(),
                                ee(
                                  f(Ke),
                                  le({ key: 1, 'aria-label': f(F)(de.$props.ariaToggleDropdownLabel) }, ve.value),
                                  null,
                                  16,
                                  ['aria-label'],
                                ))
                              : W('', !0),
                          ]),
                          _: 2,
                        },
                        [
                          Ue(P.value, (Ne) => ({ name: Ne, fn: G((pt) => [L(de.$slots, Ne, pe(ke(pt)))]) })),
                          de.$slots.prependInner || de.$props.leftIcon
                            ? {
                                name: 'prependInner',
                                fn: G((Ne) => [
                                  L(de.$slots, 'prependInner', pe(ke(Ne))),
                                  de.$props.leftIcon
                                    ? (C(),
                                      ee(
                                        f(Ke),
                                        le({ key: 0, 'aria-label': f(F)(de.$props.ariaToggleDropdownLabel) }, ve.value),
                                        null,
                                        16,
                                        ['aria-label'],
                                      ))
                                    : W('', !0),
                                ]),
                                key: '0',
                              }
                            : void 0,
                        ],
                      ),
                      1040,
                      ['style', 'model-value'],
                    ),
                  ],
                ),
              ]),
              default: G(() => [
                ne(
                  f(ir),
                  {
                    class: 'va-date-input__dropdown-content',
                    onKeydown: Oe[8] || (Oe[8] = $e((Ne) => f(b)(), ['esc'])),
                    role: 'dialog',
                  },
                  {
                    default: G(() => [
                      ne(
                        ns,
                        le({ ref_key: 'datePicker', ref: l }, f(oe), {
                          modelValue: f(j),
                          'onUpdate:modelValue': Oe[0] || (Oe[0] = (Ne) => (nt(j) ? (j.value = Ne) : null)),
                          'onClick:day': Oe[1] || (Oe[1] = (Ne) => de.$emit('click:day', Ne)),
                          'onClick:month': Oe[2] || (Oe[2] = (Ne) => de.$emit('click:month', Ne)),
                          'onClick:year': Oe[3] || (Oe[3] = (Ne) => de.$emit('click:year', Ne)),
                          'onHover:day': Oe[4] || (Oe[4] = (Ne) => de.$emit('hover:day', Ne)),
                          'onHover:month': Oe[5] || (Oe[5] = (Ne) => de.$emit('hover:month', Ne)),
                          'onHover:year': Oe[6] || (Oe[6] = (Ne) => de.$emit('hover:year', Ne)),
                          'onUpdate:view':
                            Oe[7] ||
                            (Oe[7] = (Ne) => {
                              de.$nextTick(() => c()), de.$emit('update:view', Ne)
                            }),
                        }),
                        Ht({ _: 2 }, [
                          Ue(de.$slots, (Ne, pt) => ({ name: pt, fn: G((Yt) => [L(de.$slots, pt, pe(ke(Yt)))]) })),
                        ]),
                        1040,
                        ['modelValue'],
                      ),
                    ]),
                    _: 3,
                  },
                ),
              ]),
              _: 3,
            },
            16,
            ['modelValue', 'class', 'style'],
          )
        )
      )
    },
  }),
  JP = ye(XP),
  QP = ye(ns),
  ZP = ['aria-orientation'],
  eA = { key: 0, class: 'va-divider__text' },
  Tl = 'va-divider',
  tA = re({
    name: 'VaDivider',
    __name: 'VaDivider',
    props: {
      ...Le,
      vertical: { type: Boolean, default: !1 },
      dashed: { type: Boolean, default: !1 },
      inset: { type: Boolean, default: !1 },
      orientation: { type: String, default: 'center', validator: (e) => ['left', 'right', 'center'].includes(e) },
      color: { type: String, default: 'backgroundBorder' },
    },
    setup(e) {
      const t = e,
        { getColor: n } = Re(),
        o = p(() => n(t.color)),
        r = Zt(),
        a = p(() => !!r.default),
        l = p(() => ({
          [`${Tl}--vertical`]: t.vertical,
          [`${Tl}--inset`]: t.inset,
          [`${Tl}--${t.orientation}`]: t.orientation && !t.vertical,
          [`${Tl}--dashed`]: t.dashed,
        }))
      return (s, i) => (
        C(),
        A(
          'div',
          {
            role: 'separator',
            class: Pe(['va-divider', l.value]),
            'aria-orientation': e.vertical ? 'vertical' : 'horizontal',
            'aria-hidden': !0,
            style: me(`--va-color-computed: ${String(o.value)}`),
          },
          [a.value && !e.vertical ? (C(), A('div', eA, [L(s.$slots, 'default')])) : W('', !0)],
          14,
          ZP,
        )
      )
    },
  }),
  ey = ye(tA),
  al = Symbol('VaFileUpload'),
  nA = re({
    name: 'VaList',
    __name: 'VaList',
    props: { ...Le, fit: { type: Boolean, default: !1 } },
    setup(e) {
      const t = e,
        n = p(() => ({ 'va-list--fit': t.fit }))
      return (o, r) => (C(), A('div', { class: Pe(['va-list', n.value]), role: 'list' }, [L(o.$slots, 'default')], 2))
    },
  }),
  oA = re({
    name: 'VaListItem',
    __name: 'VaListItem',
    props: { ...gr, ...Le, tag: { type: String, default: 'div' }, disabled: { type: Boolean, default: !1 } },
    emits: ['focus', 'click'],
    setup(e, { emit: t }) {
      const n = e,
        o = p(() => (n.disabled ? -1 : 0)),
        r = rt('va-list-item', () => ({ ...yt(n, ['disabled']) })),
        { tagComputed: a, hrefComputed: l } = No(n)
      return (s, i) => (
        C(),
        ee(
          an(f(a)),
          {
            class: Pe(['va-list-item', f(r)]),
            role: 'listitem',
            href: f(l),
            target: s.target,
            to: s.to,
            replace: s.replace,
            exact: s.exact,
            'active-class': s.activeClass,
            'exact-active-class': s.exactActiveClass,
            tabindex: o.value,
          },
          {
            default: G(() => [
              Y(
                'div',
                {
                  class: 'va-list-item__inner',
                  onClick: i[0] || (i[0] = (u) => s.$emit('click')),
                  onFocus: i[1] || (i[1] = (u) => s.$emit('focus')),
                },
                [L(s.$slots, 'default')],
                32,
              ),
            ]),
            _: 3,
          },
          8,
          ['href', 'target', 'to', 'replace', 'exact', 'active-class', 'exact-active-class', 'class', 'tabindex'],
        )
      )
    },
  }),
  rA = re({
    name: 'VaListLabel',
    __name: 'VaListLabel',
    props: { ...Le, color: { type: String, default: 'primary' } },
    setup(e) {
      const t = e,
        { getColor: n } = Re(),
        o = p(() => ({ color: n(t.color) }))
      return (r, a) => (C(), A('div', { class: 'va-list-label', style: me(o.value) }, [L(r.$slots, 'default')], 4))
    },
  }),
  aA = re({
    name: 'VaListItemLabel',
    __name: 'VaListItemLabel',
    props: { ...Le, caption: { type: Boolean, default: !1 }, lines: { type: [Number, String], default: 1 } },
    setup(e) {
      const t = e,
        n = We('lines'),
        o = p(() => ({ 'va-list-item-label--caption': t.caption })),
        r = p(() => ({ '-webkit-line-clamp': n.value }))
      return (a, l) => (
        C(), A('div', { class: Pe(['va-list-item-label', o.value]), style: me(r.value) }, [L(a.$slots, 'default')], 6)
      )
    },
  }),
  lA = re({
    name: 'VaListItemSection',
    __name: 'VaListItemSection',
    props: { ...Le, icon: { type: Boolean, default: !1 }, avatar: { type: Boolean, default: !1 } },
    setup(e) {
      const t = e,
        n = p(() => ({
          'va-list-item-section--main': !t.icon && !t.avatar,
          'va-list-item-section--icon': t.icon,
          'va-list-item-section--avatar': t.avatar,
        }))
      return (o, r) => (C(), A('div', { class: Pe(['va-list-item-section', n.value]) }, [L(o.$slots, 'default')], 2))
    },
  }),
  sA = re({
    name: 'VaListSeparator',
    __name: 'VaListSeparator',
    props: { ...Le, fit: { type: Boolean, default: !1 }, spaced: { type: Boolean, default: !1 } },
    setup(e) {
      const t = e,
        n = p(() => ({ 'va-list-separator--offset': !t.fit, 'va-list-separator--spaced': t.spaced }))
      return (o, r) => (C(), A('div', { 'aria-hidden': 'true', class: Pe(['va-list-separator', n.value]) }, null, 2))
    },
  }),
  Ds = ye(oA),
  iA = ye(rA),
  uA = ye(aA),
  Fr = ye(lA),
  cA = ye(sA),
  ty = ye(nA),
  dA = { key: 0, class: 'va-progress-bar__info' },
  mA = re({
    name: 'VaProgressBar',
    __name: 'VaProgressBar',
    props: {
      ...Le,
      modelValue: { type: [Number, String], default: 0 },
      indeterminate: { type: Boolean, default: !1 },
      color: { type: String, default: 'primary' },
      size: { type: [Number, String], default: 'medium' },
      buffer: { type: [Number, String], default: 100 },
      rounded: { type: Boolean, default: !0 },
      reverse: { type: Boolean, default: !1 },
      contentInside: { type: Boolean, default: !1 },
      showPercent: { type: Boolean, default: !1 },
      max: { type: [Number, String], default: 100 },
      ariaLabel: Be('$t:progressState'),
    },
    setup(e) {
      const t = e,
        { getColor: n, getHoverColor: o } = Re(),
        r = p(() => n(t.color)),
        { textColorComputed: a } = Vt(r),
        l = p(() => typeof t.size == 'string' && ['small', 'medium', 'large'].includes(t.size)),
        s = () => {
          if (typeof t.size == 'number') return `${t.size}px`
          if (!l.value) return t.size
        },
        { tp: i } = ut(),
        u = p(() => (100 / Number(t.max)) * Number(t.modelValue)),
        c = p(() => ({ 'va-progress-bar--square': !t.rounded, [`va-progress-bar--${t.size}`]: l.value })),
        d = p(() => ({ '--va-progress-bar-color': r.value, '--va-progress-bar-background-color': o(r.value) })),
        m = p(() => ({ height: s() })),
        v = p(() => ({
          width: `${t.indeterminate ? 100 : lr(Number(t.buffer), 0, 100)}%`,
          color: a.value,
          [t.reverse ? 'right' : 'left']: 0,
        })),
        g = p(() => ({ marginLeft: t.reverse ? 'auto' : void 0, width: `${lr(u.value, 0, 100)}%` })),
        h = p(() => ({ animationDirection: t.reverse ? 'reverse' : 'normal' })),
        _ = p(() => ({
          role: 'progressbar',
          'aria-label': i(t.ariaLabel),
          'aria-valuenow': t.indeterminate ? void 0 : t.modelValue,
        }))
      return (y, b) => (
        C(),
        A(
          'div',
          le({ class: ['va-progress-bar', c.value], style: d.value }, _.value),
          [
            y.$props.contentInside
              ? W('', !0)
              : (C(),
                A('div', dA, [
                  L(y.$slots, 'default', pe(ke({ value: y.$props.modelValue })), () => [
                    y.$props.showPercent
                      ? (C(), A(Te, { key: 0 }, [Fe(Ae(y.$props.modelValue) + '% ', 1)], 64))
                      : W('', !0),
                  ]),
                ])),
            Y(
              'div',
              { class: 'va-progress-bar__wrapper', style: me(m.value) },
              [
                Y(
                  'div',
                  { class: 'va-progress-bar__buffer', style: me(v.value) },
                  [
                    y.$props.contentInside
                      ? L(y.$slots, 'default', pe(le({ key: 0 }, { value: y.$props.modelValue })), () => [
                          y.$props.showPercent
                            ? (C(), A(Te, { key: 0 }, [Fe(Ae(y.$props.modelValue) + '% ', 1)], 64))
                            : W('', !0),
                        ])
                      : W('', !0),
                  ],
                  4,
                ),
                e.indeterminate
                  ? (C(),
                    A(
                      Te,
                      { key: 0 },
                      [
                        Y(
                          'div',
                          { class: 'va-progress-bar__progress--indeterminate-start', style: me(h.value) },
                          null,
                          4,
                        ),
                        Y(
                          'div',
                          { class: 'va-progress-bar__progress--indeterminate-end', style: me(h.value) },
                          null,
                          4,
                        ),
                      ],
                      64,
                    ))
                  : (C(), A('div', { key: 1, class: 'va-progress-bar__progress', style: me(g.value) }, null, 4)),
              ],
              4,
            ),
          ],
          16,
        )
      )
    },
  }),
  ny = ye(mA),
  ll = (e, t) => {
    const n = kt(e)
    if (!n) throw new Error(t)
    return n
  },
  fA = { class: 'va-file-upload-undo__text' },
  pA = 'The VaFileUploadUndo component should be used in the context of VaFileUpload component',
  vA = re({
    name: 'VaFileUploadUndo',
    __name: 'VaFileUploadUndo',
    props: { vertical: { type: Boolean, default: !1 } },
    emits: ['recover'],
    setup(e, { emit: t }) {
      const n = e,
        o = H(100),
        { undoDuration: r, undoButtonText: a, deletedFileMessage: l } = ll(al, pA),
        s = rt('va-file-upload-undo', () => ({ vertical: n.vertical })),
        i = p(() => `${r.value ?? 0}ms`)
      return (
        et(() => {
          const u = setTimeout(() => {
            ;(o.value = 0), clearTimeout(u)
          }, 0)
        }),
        (u, c) => (
          C(),
          A(
            Te,
            null,
            [
              ne(
                f(ny),
                {
                  'model-value': o.value,
                  rounded: !1,
                  class: 'va-file-upload-undo-progress-bar',
                  style: me(`--va-undo-duration-style: ${String(i.value)}`),
                },
                null,
                8,
                ['model-value', 'style'],
              ),
              Y(
                'div',
                { class: Pe(['va-file-upload-undo', f(s)]), style: me(`--va-undo-duration-style: ${String(i.value)}`) },
                [
                  Y('span', fA, Ae(f(l)), 1),
                  ne(
                    f(Xe),
                    {
                      class: 'va-file-upload-undo__button',
                      'aria-label': f(a),
                      size: 'small',
                      outline: '',
                      onClick: c[0] || (c[0] = (d) => u.$emit('recover')),
                    },
                    { default: G(() => [Fe(Ae(f(a)), 1)]), _: 1 },
                    8,
                    ['aria-label'],
                  ),
                ],
                6,
              ),
            ],
            64,
          )
        )
      )
    },
  }),
  oy = ye(vA),
  gA = { class: 'va-file-upload-list-item__content' },
  hA = { key: 0, class: 'va-file-upload-list-item__name' },
  yA = { class: 'va-file-upload-list-item__size' },
  _A = 'The VaFileUploadListItem component should be used in the context of VaFileUpload component',
  bA = re({
    name: 'VaFileUploadListItem',
    __name: 'VaFileUploadListItem',
    props: {
      file: { type: Object, default: null },
      color: { type: String, default: 'success' },
      ariaRemoveFileLabel: Be('$t:removeFile'),
    },
    emits: ['remove'],
    setup(e, { emit: t }) {
      const { tp: n } = ut(),
        o = t,
        { undo: r, disabled: a, undoDuration: l } = ll(al, _A),
        { onFocus: s, onBlur: i } = lo(),
        u = H(!1),
        c = () => {
          r.value
            ? ((u.value = !0),
              setTimeout(() => {
                u.value && (o('remove'), (u.value = !1))
              }, l.value ?? 0))
            : (o('remove'), (u.value = !1))
        },
        d = () => {
          u.value = !1
        },
        m = rt('va-file-upload-list-item', () => ({ undo: u.value }))
      return (v, g) => (
        C(),
        ee(
          f(Ds),
          { class: Pe(['va-file-upload-list-item', f(m)]), tabindex: '-1', disabled: f(a), 'aria-disabled': f(a) },
          {
            default: G(() => [
              u.value && f(r)
                ? (C(), ee(f(Fr), { key: 0 }, { default: G(() => [ne(f(oy), { onRecover: d })]), _: 1 }))
                : (C(),
                  ee(
                    f(Fr),
                    { key: 1 },
                    {
                      default: G(() => [
                        Y('div', gA, [
                          e.file && e.file.name ? (C(), A('div', hA, Ae(e.file && e.file.name), 1)) : W('', !0),
                          Y('div', yA, Ae(e.file && e.file.size), 1),
                          f(a)
                            ? W('', !0)
                            : (C(),
                              ee(
                                f(Xe),
                                {
                                  key: 1,
                                  flat: '',
                                  color: 'danger',
                                  icon: 'clear',
                                  class: 'va-file-upload-list-item__delete',
                                  'aria-label': f(n)(v.$props.ariaRemoveFileLabel),
                                  onClick: Se(c, ['stop']),
                                  onKeydown: [$e(Se(c, ['stop']), ['enter']), $e(Se(c, ['stop']), ['space'])],
                                  onFocus: f(s),
                                  onBlur: f(i),
                                },
                                null,
                                8,
                                ['aria-label', 'onKeydown', 'onFocus', 'onBlur'],
                              )),
                        ]),
                      ]),
                      _: 1,
                    },
                  )),
            ]),
            _: 1,
          },
          8,
          ['class', 'disabled', 'aria-disabled'],
        )
      )
    },
  }),
  ry = ye(bA),
  zA = ['src', 'alt'],
  CA = { class: 'va-file-upload-gallery-item__overlay' },
  SA = ['title'],
  wA = 'The VaFileUploadGalleryItem component should be used in the context of VaFileUpload component',
  $A = re({
    name: 'VaFileUploadGalleryItem',
    __name: 'VaFileUploadGalleryItem',
    props: {
      file: { type: Object, default: null },
      color: { type: String, default: 'success' },
      ariaRemoveFileLabel: Be('$t:removeFile'),
    },
    emits: ['remove'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        { undo: r, disabled: a, undoDuration: l } = ll(al, wA),
        { isFocused: s, onFocus: i, onBlur: u } = lo(),
        c = H(''),
        d = H(!1),
        m = p(() => ({ backgroundColor: fr(n.color, 0.7) })),
        v = rt('va-file-upload-gallery-item', () => ({ notImage: !c.value, focused: s.value, undo: d.value })),
        g = () => {
          r.value
            ? ((d.value = !0),
              setTimeout(() => {
                d.value && (o('remove'), (d.value = !1))
              }, l.value ?? 0))
            : (o('remove'), (d.value = !1))
        },
        h = () => {
          d.value = !1
        },
        _ = () => {
          if (!(!n.file.name || !n.file.image)) {
            if (n.file.image.url) c.value = n.file.image.url
            else if (n.file.image instanceof File) {
              const S = new FileReader()
              S.readAsDataURL(n.file.image),
                (S.onload = ($) => {
                  var k, z
                  ;((k = $.target) == null ? void 0 : k.result).includes('image') &&
                    (c.value = (z = $.target) == null ? void 0 : z.result)
                })
            }
          }
        }
      et(_), ge(() => n.file, _)
      const { t: y, tp: b } = ut(),
        { textColorComputed: w } = Vt(Ut(n, 'color'))
      return (S, $) => (
        C(),
        ee(
          f(Ds),
          {
            class: Pe(['va-file-upload-gallery-item', f(v)]),
            tabindex: '-1',
            disabled: f(a),
            'aria-disabled': f(a),
            onFocus: f(i),
            onBlur: f(u),
          },
          {
            default: G(() => [
              d.value && f(r)
                ? (C(), ee(f(Fr), { key: 0 }, { default: G(() => [ne(f(oy), { vertical: '', onRecover: h })]), _: 1 }))
                : (C(),
                  ee(
                    f(Fr),
                    { key: 1 },
                    {
                      default: G(() => [
                        c.value
                          ? (C(),
                            A(
                              'img',
                              {
                                key: 0,
                                src: c.value,
                                alt: e.file.name || '',
                                class: 'va-file-upload-gallery-item__image',
                              },
                              null,
                              8,
                              zA,
                            ))
                          : W('', !0),
                        Y('div', CA, [
                          Y(
                            'div',
                            { class: 'va-file-upload-gallery-item__overlay-background', style: me(m.value) },
                            null,
                            4,
                          ),
                          e.file && e.file.name
                            ? (C(),
                              A(
                                'div',
                                {
                                  key: 0,
                                  class: 'va-file-upload-gallery-item__name',
                                  title: e.file.name,
                                  style: me({ color: f(w) }),
                                },
                                Ae(e.file.name),
                                13,
                                SA,
                              ))
                            : W('', !0),
                          f(a)
                            ? W('', !0)
                            : (C(),
                              ee(
                                f(Xe),
                                {
                                  key: 1,
                                  flat: '',
                                  color: 'danger',
                                  icon: 'va-delete',
                                  class: 'va-file-upload-gallery-item__delete',
                                  'aria-label': f(b)(S.$props.ariaRemoveFileLabel),
                                  onClick: g,
                                  onFocus: f(i),
                                  onBlur: f(u),
                                },
                                null,
                                8,
                                ['aria-label', 'onFocus', 'onBlur'],
                              )),
                        ]),
                      ]),
                      _: 1,
                    },
                  )),
            ]),
            _: 1,
          },
          8,
          ['class', 'disabled', 'aria-disabled', 'onFocus', 'onBlur'],
        )
      )
    },
  }),
  ay = ye($A),
  kA = { class: 'va-file-upload-single-item__name' },
  TA = 'The VaFileUploadSingleItem component should be used in the context of VaFileUpload component',
  VA = re({
    name: 'VaFileUploadSingleItem',
    __name: 'VaFileUploadSingleItem',
    props: { file: { type: Object, default: null }, ariaRemoveFileLabel: Be('$t:removeFile') },
    emits: ['remove'],
    setup(e, { emit: t }) {
      const { t: n, tp: o } = ut(),
        { disabled: r } = ll(al, TA)
      return (a, l) => (
        C(),
        ee(
          f(Ds),
          { disabled: f(r), 'aria-disabled': f(r), class: 'va-file-upload-single-item', tabindex: '-1' },
          {
            default: G(() => [
              ne(
                f(Fr),
                { class: 'va-file-upload-single-item__content' },
                {
                  default: G(() => [
                    Y('div', kA, Ae(e.file && e.file.name), 1),
                    f(r)
                      ? W('', !0)
                      : (C(),
                        ee(
                          f(Xe),
                          {
                            key: 0,
                            class: 'va-file-upload-single-item__button',
                            'aria-label': f(o)(a.$props.ariaRemoveFileLabel),
                            size: 'small',
                            color: 'danger',
                            preset: 'secondary',
                            onClick: l[0] || (l[0] = (s) => a.$emit('remove')),
                          },
                          { default: G(() => [Fe(' Delete ')]), _: 1 },
                          8,
                          ['aria-label'],
                        )),
                  ]),
                  _: 1,
                },
              ),
            ]),
            _: 1,
          },
          8,
          ['disabled', 'aria-disabled'],
        )
      )
    },
  }),
  ly = ye(VA),
  gf = Qe(ay),
  hf = Qe(ry),
  yf = Qe(ly),
  PA = re({
    name: 'VaFileUploadList',
    __name: 'VaFileUploadList',
    props: { type: { type: String, default: '' }, files: { type: Array, default: null }, ...gf, ...hf, ...yf },
    emits: ['remove', 'removeSingle'],
    setup(e, { emit: t }) {
      const n = e,
        o = p(() => n.files.map(r)),
        r = (c) => ({ name: c.name || c.url || '', size: a(c.size), date: l(new Date()), image: c }),
        a = (c) => {
          if (c === 0) return '0 Bytes'
          if (!c) return ''
          const d = 1024,
            m = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
            v = Math.floor(Math.log(c) / Math.log(d))
          return parseFloat((c / Math.pow(d, v)).toFixed(2)) + ' ' + m[v]
        },
        l = (c = new Date()) =>
          c.toLocaleDateString('en-US', {
            hour: '2-digit',
            minute: '2-digit',
            month: 'short',
            day: 'numeric',
            year: 'numeric',
          }),
        s = it(gf),
        i = it(hf),
        u = it(yf)
      return (c, d) => (
        C(),
        ee(
          f(ty),
          {
            class: Pe(['va-file-upload-list', `va-file-upload-list--${e.type}`]),
            role: e.type !== 'single' ? 'list' : void 0,
          },
          {
            default: G(() => [
              e.type === 'list'
                ? (C(!0),
                  A(
                    Te,
                    { key: 0 },
                    Ue(
                      o.value,
                      (m, v) => (
                        C(),
                        ee(
                          f(ry),
                          le({ key: m.name }, f(i), {
                            file: m,
                            role: 'listitem',
                            onRemove: (g) => c.$emit('remove', v),
                          }),
                          null,
                          16,
                          ['file', 'onRemove'],
                        )
                      ),
                    ),
                    128,
                  ))
                : W('', !0),
              e.type === 'gallery'
                ? (C(!0),
                  A(
                    Te,
                    { key: 1 },
                    Ue(
                      o.value,
                      (m, v) => (
                        C(),
                        ee(
                          f(ay),
                          le(f(s), { key: m.name, file: m, role: 'listitem', onRemove: (g) => c.$emit('remove', v) }),
                          null,
                          16,
                          ['file', 'onRemove'],
                        )
                      ),
                    ),
                    128,
                  ))
                : W('', !0),
              e.type === 'single' && o.value.length
                ? (C(),
                  ee(
                    f(ly),
                    le({ key: 2 }, f(u), {
                      file: o.value[o.value.length - 1],
                      onRemove: d[0] || (d[0] = (m) => c.$emit('removeSingle')),
                    }),
                    null,
                    16,
                    ['file'],
                  ))
                : W('', !0),
            ]),
            _: 1,
          },
          8,
          ['role', 'class'],
        )
      )
    },
  }),
  sy = ye(PA),
  AA = { class: 'va-file-upload__field' },
  EA = { key: 0, class: 'va-file-upload__field__text' },
  IA = ['accept', 'multiple', 'disabled'],
  _f = Qe(sy),
  xA = re({
    name: 'VaFileUpload',
    __name: 'VaFileUpload',
    props: {
      ...Le,
      ..._f,
      fileTypes: { type: String, default: '' },
      dropzone: { type: Boolean, default: !1 },
      hideFileList: { type: Boolean, default: !1 },
      color: { type: String, default: 'primary' },
      disabled: { type: Boolean, default: !1 },
      undo: { type: Boolean, default: !1 },
      undoDuration: { type: [Number, String], default: 3e3 },
      undoButtonText: Be('$t:undo'),
      dropZoneText: Be('$t:dropzone'),
      uploadButtonText: Be('$t:uploadFile'),
      deletedFileMessage: Be('$t:fileDeleted'),
      fileIncorrectMessage: Be('$t:fileTypeIncorrect'),
      modelValue: { type: [Object, Array], default: () => [] },
      type: { type: String, default: 'list', validator: (e) => ['list', 'gallery', 'single'].includes(e) },
    },
    emits: ['update:modelValue', 'file-removed', 'file-added'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        r = je(),
        a = H(!1),
        l = H(!1),
        { getColor: s, shiftHSLAColor: i } = Re(),
        u = p(() => s(n.color)),
        c = p(() => ({ backgroundColor: n.dropzone ? i(u.value, { a: l.value ? -0.82 : -0.92 }) : 'transparent' })),
        d = rt('va-file-upload', () => ({ dropzone: n.dropzone, disabled: n.disabled })),
        m = p({
          get() {
            return Array.isArray(n.modelValue) ? n.modelValue : [n.modelValue]
          },
          set($) {
            n.type === 'single' ? o('update:modelValue', $[0]) : o('update:modelValue', $)
          },
        }),
        v = ($) =>
          $.filter((k) => {
            const z = k.name || k.url
            if (!z) return !1
            if (k.url || ['audio/*', 'video/*', 'image/*'].find((j) => n.fileTypes.includes(j))) return !0
            const B = z.substring(z.lastIndexOf('.') + 1).toLowerCase(),
              K = n.fileTypes.includes(B)
            return K || (a.value = !0), K
          }),
        g = ($) => {
          var k, z
          const V = ((k = $.target) == null ? void 0 : k.files) || ((z = $.dataTransfer) == null ? void 0 : z.files)
          if (!V) return
          const T = n.fileTypes ? v(Array.from(V)) : V
          ;(m.value = n.type === 'single' ? T : [...m.value, ...T]), o('file-added', T)
        },
        h = ($) => {
          g($), r.value && (r.value.value = '')
        },
        _ = ($) => {
          if ($ in m.value) {
            const k = m.value[$]
            ;(m.value = m.value.filter((z, V) => V !== $)), o('file-removed', k)
          }
        },
        y = () => {
          if (m.value.length > 0) {
            const $ = m.value[0]
            ;(m.value = []), o('file-removed', $)
          }
        },
        b = () => {
          r.value && r.value.click()
        }
      et(() => {
        if (Array.isArray(m.value)) {
          const $ = v(m.value)
          $.length !== m.value.length && (m.value = $)
        }
      })
      const { tp: w } = ut()
      ln(al, {
        undo: Ut(n, 'undo'),
        disabled: Ut(n, 'disabled'),
        undoDuration: We('undoDuration'),
        undoButtonText: p(() => w(n.undoButtonText)),
        deletedFileMessage: p(() => w(n.deletedFileMessage)),
      })
      const S = it(_f)
      return ($, k) => (
        C(),
        A(
          'div',
          { class: Pe(['va-file-upload', f(d)]), style: me(c.value) },
          [
            L($.$slots, 'default', {}, () => [
              Y('div', AA, [
                e.dropzone ? (C(), A('div', EA, Ae(f(w)(e.dropZoneText)), 1)) : W('', !0),
                ne(
                  f(Xe),
                  {
                    class: 'va-file-upload__field__button',
                    disabled: e.disabled,
                    'aria-disabled': e.disabled,
                    color: u.value,
                    style: me({ 'pointer-events': l.value ? 'none' : void 0 }),
                    onChange: h,
                    onClick: b,
                  },
                  { default: G(() => [Fe(Ae(f(w)(e.uploadButtonText)), 1)]), _: 1 },
                  8,
                  ['disabled', 'aria-disabled', 'color', 'style'],
                ),
              ]),
            ]),
            Y(
              'input',
              {
                ref_key: 'fileInputRef',
                ref: r,
                type: 'file',
                class: 'va-file-upload__field__input',
                tabindex: -1,
                'aria-hidden': 'true',
                accept: e.fileTypes,
                multiple: e.type !== 'single',
                disabled: e.disabled,
                onChange: h,
                onDragenter: k[0] || (k[0] = (z) => (l.value = !0)),
                onDragleave: k[1] || (k[1] = (z) => (l.value = !1)),
              },
              null,
              40,
              IA,
            ),
            m.value.length && !$.$props.hideFileList
              ? (C(),
                ee(
                  f(sy),
                  le({ key: 0 }, f(S), {
                    type: e.type,
                    files: m.value,
                    color: u.value,
                    onRemove: _,
                    onRemoveSingle: y,
                  }),
                  null,
                  16,
                  ['type', 'files', 'color'],
                ))
              : W('', !0),
            ne(
              f(dc),
              {
                modelValue: a.value,
                'onUpdate:modelValue': k[2] || (k[2] = (z) => (a.value = z)),
                'hide-default-actions': '',
                message: f(w)('$t:fileTypeIncorrect'),
              },
              null,
              8,
              ['modelValue', 'message'],
            ),
          ],
          6,
        )
      )
    },
  }),
  OA = ye(xA),
  LA = (e) => {
    const t = H(new Map())
    return {
      immediate: p(() => e.immediate),
      fields: p(() => [...t.value.values()]),
      forceHideErrors: p(() => e.hideErrors),
      forceHideErrorMessages: p(() => e.hideErrorMessages),
      forceHideLoading: p(() => e.hideLoading),
      forceDirty: H(!1),
      registerField: (n, o) => {
        t.value.set(n, o)
      },
      unregisterField: (n) => {
        t.value.delete(n)
      },
    }
  },
  BA = (e) => {
    const t = LA(e)
    ln(Og, t)
    const { fields: n, forceDirty: o } = t,
      r = p(() => n.value.map((w) => f(w.name)).filter(Boolean)),
      a = p(() => n.value.reduce((w, S) => (f(S.name) && (w[f(S.name)] = S), w), {})),
      l = p(() => n.value.reduce((w, S) => (f(S.name) && (w[f(S.name)] = f(S.value)), w), {})),
      s = p(() => n.value.every((w) => f(w.isValid))),
      i = p(() => n.value.some((w) => f(w.isLoading))),
      u = p(() => n.value.map((w) => f(w.errorMessages)).flat()),
      c = p(() => n.value.reduce((w, S) => (f(S.name) && (w[f(S.name)] = f(S.errorMessages)), w), {})),
      d = p({
        get() {
          return n.value.some((w) => f(w.isDirty)) || o.value
        },
        set(w) {
          ;(o.value = w),
            n.value.forEach((S) => {
              S.isDirty = w
            })
        },
      }),
      m = p({
        get() {
          return n.value.some((w) => w.isTouched)
        },
        set(w) {
          n.value.forEach((S) => {
            S.isTouched = w
          })
        },
      }),
      v = () => ((d.value = !0), n.value.reduce((w, S) => S.validate() && w, !0)),
      g = () => ((d.value = !0), Promise.all(n.value.map((w) => w.validateAsync())).then((w) => w.every(Boolean))),
      h = () => {
        ;(d.value = !1), n.value.forEach((w) => w.reset())
      },
      _ = () => {
        ;(d.value = !1), n.value.forEach((w) => w.resetValidation())
      },
      y = () => {
        var w
        ;(w = n.value[0]) == null || w.focus()
      },
      b = () => {
        const w = n.value.find((S) => !S.isValid)
        w == null || w.focus()
      }
    return (
      Lg({
        name: Ut(e, 'name'),
        isValid: s,
        isLoading: i,
        isDirty: d,
        isTouched: m,
        validate: v,
        validateAsync: g,
        reset: h,
        resetValidation: _,
        focus: y,
        errorMessages: u,
      }),
      {
        immediate: p(() => e.immediate),
        isDirty: d,
        isTouched: m,
        formData: l,
        fields: n,
        fieldsNamed: a,
        fieldNames: r,
        isValid: s,
        isLoading: i,
        errorMessages: u,
        errorMessagesNamed: c,
        validate: v,
        validateAsync: g,
        reset: h,
        resetValidation: _,
        focus: y,
        focusInvalidField: b,
      }
    )
  },
  cn = { stateful: !0 },
  NA = {
    VaInput: cn,
    VaSelect: cn,
    VaCheckbox: cn,
    VaRadio: cn,
    VaDatePicker: cn,
    VaTimePicker: cn,
    VaColorPicker: cn,
    VaSlider: cn,
    VaSwitch: cn,
    VaFileUpload: cn,
    VaRating: cn,
    VaDateInput: cn,
    VaTimeInput: cn,
  },
  RA = re({
    name: 'VaForm',
    __name: 'VaForm',
    props: {
      ...Le,
      autofocus: { type: Boolean, default: !1 },
      immediate: { type: Boolean, default: !1 },
      tag: { type: String, default: 'form' },
      trigger: { type: String, default: 'blur' },
      modelValue: { type: Boolean, default: !0 },
      hideErrors: { type: Boolean, default: !1 },
      hideErrorMessages: { type: Boolean, default: !1 },
      hideLoading: { type: Boolean, default: !1 },
      stateful: { type: Boolean, default: !1 },
      name: { type: String, default: void 0 },
    },
    emits: ['update:modelValue'],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        a = BA(o)
      ge(a.isValid, (z) => {
        r('update:modelValue', z)
      }),
        ge(
          () => o.autofocus,
          (z) => {
            z && a.focus()
          },
        ),
        et(() => {
          o.autofocus && a.focus()
        }),
        ge(
          a.fields,
          (z) => {
            z.length && o.immediate && a.validate()
          },
          { immediate: !0 },
        ),
        QC(p(() => (o.stateful ? NA : {})))
      const {
        immediate: l,
        isDirty: s,
        isTouched: i,
        formData: u,
        fields: c,
        fieldsNamed: d,
        fieldNames: m,
        isValid: v,
        isLoading: g,
        errorMessages: h,
        errorMessagesNamed: _,
        validate: y,
        validateAsync: b,
        reset: w,
        resetValidation: S,
        focus: $,
        focusInvalidField: k,
      } = a
      return (
        t({
          immediate: l,
          isDirty: s,
          formData: u,
          fields: c,
          fieldsNamed: d,
          fieldNames: m,
          isValid: v,
          isTouched: i,
          isLoading: g,
          errorMessages: h,
          errorMessagesNamed: _,
          validate: y,
          validateAsync: b,
          reset: w,
          resetValidation: S,
          focus: $,
          focusInvalidField: k,
        }),
        (z, V) => (
          C(),
          ee(
            an(e.tag),
            le(
              { class: 'va-form', onSubmit: V[0] || (V[0] = (T) => z.$attrs.action === void 0 && T.preventDefault()) },
              z.$attrs,
            ),
            {
              default: G(() => [
                L(
                  z.$slots,
                  'default',
                  pe(
                    ke({
                      isValid: f(v),
                      isDirty: f(s),
                      isTouched: f(i),
                      isLoading: f(g),
                      errorMessages: f(h),
                      errorMessagesNamed: f(_),
                      formData: f(u),
                      fields: f(c),
                      fieldsNamed: f(d),
                      fieldNames: f(m),
                      validate: f(y),
                      validateAsync: f(b),
                      reset: f(w),
                      resetValidation: f(S),
                      focus: f($),
                      focusInvalidField: f(k),
                    }),
                  ),
                ),
              ]),
              _: 3,
            },
            16,
          )
        )
      )
    },
  }),
  DA = ye(RA),
  MA = (e = 0) => new Promise((t) => setTimeout(t, e)),
  FA = (e, t, n) => {
    const o = () => {
        var a
        ;(a = t.value) == null || a.addEventListener('scroll', n.value, { passive: !0 })
      },
      r = () => {
        var a
        ;(a = t.value) == null || a.removeEventListener('scroll', n.value)
      }
    return (
      et(() => {
        t.value && ((t.value.style.overflowY = 'scroll'), e.reverse && (t.value.scrollTop = t.value.scrollHeight), o())
      }),
      wt(r),
      { addScrollListener: o, removeScrollListener: r }
    )
  },
  jA = { class: 'va-infinite-scroll__spinner__default' },
  HA = re({
    name: 'VaInfiniteScroll',
    __name: 'VaInfiniteScroll',
    props: {
      ...Le,
      load: { type: Function, required: !0 },
      offset: { type: [Number, String], default: 500 },
      reverse: { type: Boolean, default: !1 },
      disabled: { type: Boolean, default: !1 },
      scrollTarget: { type: [String, Object], default: null },
      debounce: { type: [Number, String], default: 100 },
      tag: { type: String, default: 'div' },
    },
    emits: ['onload', 'onerror'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        r = je(),
        a = je(),
        l = H(!1),
        s = H(!1),
        i = H(!1),
        u = H(),
        c = H(0),
        d = H(0),
        m = p(() => {
          var U
          let D
          return (
            typeof n.scrollTarget == 'string'
              ? (D = document.querySelector(n.scrollTarget))
              : (D = n.scrollTarget || ((U = r.value) == null ? void 0 : U.parentElement)),
            D || document.body
          )
        }),
        { addScrollListener: v, removeScrollListener: g } = FA(n, m, u),
        h = We('offset'),
        _ = We('debounce'),
        { getColor: y } = Re(),
        b = p(() => (s.value ? y('danger') : y('primary'))),
        w = p(() => {
          var U
          return ((U = a.value) == null ? void 0 : U.offsetHeight) || 0
        }),
        S = p(() => h.value + w.value),
        $ = () => {
          n.disabled || ((l.value = !1), g())
        },
        k = () => {
          n.disabled || v()
        },
        z = () => {
          const { scrollTop: U, scrollHeight: D, clientHeight: O } = m.value
          c.value = D - U
          const R = U - d.value
          if (((d.value = U), n.disabled || s.value || l.value)) return
          if (i.value) {
            i.value = !1
            return
          }
          ;(n.reverse && R > 0) ||
            (!n.reverse && R < 0) ||
            (n.reverse ? U : D - U - O) > S.value ||
            ((l.value = !0), n.load().then(B).catch(j))
        },
        V = (U) => {
          ;(i.value = !0), (m.value.scrollTop = U)
        },
        T = () => {
          const { scrollTop: U, scrollHeight: D, clientHeight: O } = m.value
          if (n.reverse) {
            const R = D - U < c.value,
              N = U >= w.value
            if (R && N) return
            D - c.value > w.value ? V(D - c.value) : V(w.value)
          }
          n.reverse || (!(D - U - O >= w.value) && V(D - O - w.value))
        },
        B = () => {
          T(), (l.value = !1), o('onload')
        },
        K = () => {
          T(), (i.value = !1), (s.value = !1), (l.value = !1), o('onerror')
        },
        j = () => {
          $(), (s.value = !0), MA(1200).then(K).then(k)
        }
      return (
        ge(
          () => _.value,
          (U) => {
            u.value = fc(z, U)
          },
          { immediate: !0 },
        ),
        ge(
          () => n.disabled,
          (U) => {
            U ? $() : k()
          },
        ),
        (U, D) => (
          C(),
          ee(
            an(U.$props.tag),
            {
              ref_key: 'element',
              ref: r,
              role: 'feed',
              class: Pe(['va-infinite-scroll', { 'va-infinite-scroll--reversed': U.$props.reverse }]),
              'aria-busy': l.value,
            },
            {
              default: G(() => [
                L(U.$slots, 'default'),
                Y(
                  'div',
                  {
                    ref_key: 'spinnerSlotContainer',
                    ref: a,
                    class: Pe(['va-infinite-scroll__spinner', { 'va-infinite-scroll__spinner--invisible': !l.value }]),
                  },
                  [
                    U.$props.disabled
                      ? W('', !0)
                      : L(U.$slots, 'loading', { key: 0 }, () => [
                          Y('div', jA, [
                            ne(f(qr), { size: 'small', thickness: 0.15, color: b.value, indeterminate: '' }, null, 8, [
                              'color',
                            ]),
                          ]),
                        ]),
                  ],
                  2,
                ),
              ]),
              _: 3,
            },
            8,
            ['class', 'aria-busy'],
          )
        )
      )
    },
  }),
  UA = ye(HA),
  WA = { top: [0, 1, 2], left: [0, 3, 6], right: [2, 5, 8], bottom: [6, 7, 8] },
  GA = ['left', 'right', 'top', 'bottom'],
  KA = (e) => {
    const t = () => [...GA].sort((o, r) => (e[o].order ?? 0) - (e[r].order ?? 0)),
      n = (o, r, a) => {
        r.forEach((l) => {
          o[l] = a
        })
      }
    return p(() => {
      const o = t(),
        r = ['.', '.', '.', '.', '.', '.', '.', '.', '.'].map(() => 'content')
      return (
        o.forEach((a) => {
          n(r, WA[a], a)
        }),
        [
          '"' + r.slice(0, 3).join(' ') + '"',
          '"' + r.slice(3, 6).join(' ') + '"',
          '"' + r.slice(6, 9).join(' ') + '"',
        ].join(' ')
      )
    })
  },
  qA = {
    top: { type: Object, default: () => ({ order: 2 }) },
    right: { type: Object, default: () => ({ order: 1 }) },
    left: { type: Object, default: () => ({ order: 1 }) },
    bottom: { type: Object, default: () => ({ order: 2 }) },
  },
  iy = 'VaLayout',
  YA = (e) => {
    const t = H({ top: null, right: null, bottom: null, left: null }),
      n = p(() => {
        const { top: r, right: a, bottom: l, left: s } = t.value,
          { top: i, right: u, bottom: c, left: d } = e
        return {
          top: r && !i.absolute ? r.sizes.height : 0,
          right: a && !u.absolute ? a.sizes.width : 0,
          bottom: l && !c.absolute ? l.sizes.height : 0,
          left: s && !d.absolute ? s.sizes.width : 0,
        }
      }),
      o = p(() => ({
        top: e.top.order || 0,
        right: e.right.order || 0,
        bottom: e.bottom.order || 0,
        left: e.left.order || 0,
      }))
    return ln(iy, { items: t, paddings: n, orders: o }), { paddings: n, orders: o, items: t }
  },
  XA = (e, t) => {
    const n = kt(iy, null)
    if (!n) throw new Error('VaLayoutChild must be used inside VaLayout')
    return (
      vn(() => {
        t.value ? (n.items.value[e] = { sizes: t.value }) : (n.items.value[e] = null)
      }),
      wt(() => {
        n.items.value[e] = null
      }),
      {
        paddings: p(() =>
          Object.keys(n.paddings.value).reduce(
            (o, r) => (n.orders.value[r] > n.orders.value[e] && (o[r] = n.paddings.value[r]), o),
            {},
          ),
        ),
      }
    )
  },
  JA = {},
  QA = { class: 'va-layout__absolute-area-wrapper' }
function ZA(e, t) {
  return C(), A('div', QA, [L(e.$slots, 'default')])
}
const eE = yr(JA, [['render', ZA]]),
  tE = re({
    name: 'VaLayoutSizeKeeper',
    __name: 'VaResizeObserver',
    emits: { resize: (e) => !0 },
    setup(e, { emit: t }) {
      const n = t,
        o = H()
      let r = null
      return (
        ge(o, (a) => {
          r && r.disconnect(),
            (r = new ResizeObserver(([l]) => {
              n('resize', l.contentRect)
            })),
            r.observe(a)
        }),
        (a, l) => (C(), A('div', { class: 'va-resize-observer', ref_key: 'el', ref: o }, [L(a.$slots, 'default')], 512))
      )
    },
  }),
  bf = re({
    name: 'VaLayoutFixedWrapper',
    __name: 'VaLayoutFixedWrapper',
    props: { area: { type: String, required: !0 } },
    setup(e) {
      const t = e,
        n = H(null),
        o = p(() => (t.area === 'top' || t.area === 'bottom' ? 'vertical' : 'horizontal')),
        r = (s) => (s ? s + 'px' : '0px'),
        a = p(() =>
          o.value === 'vertical'
            ? { width: `calc(100% - ${r(l.value.left)} - ${r(l.value.right)})`, [t.area]: 0 }
            : { height: `calc(100% - ${r(l.value.top)} - ${r(l.value.bottom)})`, [t.area]: 0 },
        ),
        { paddings: l } = XA(t.area, n)
      return (
        p(() => Object.keys(l.value).reduce((s, i) => (i === t.area ? s : { ...s, [i]: `${l.value[i]}px` }), {})),
        (s, i) => (
          C(),
          A(
            'div',
            {
              class: 'va-layout-fixed-wrapper',
              style: me([
                [
                  {
                    height: n.value && o.value === 'vertical' ? n.value.height + 'px' : 'auto',
                    width: n.value && o.value === 'horizontal' ? n.value.width + 'px' : 'auto',
                  },
                ],
                `--va-styles-width: ${String(a.value.width)};--va-styles-height: ${String(a.value.height)}`,
              ]),
            },
            [
              ne(
                tE,
                {
                  class: Pe(['va-layout-fixed-wrapper__content', `va-layout-fixed-wrapper__content--${e.area}`]),
                  style: me(n.value ? {} : { position: 'relative' }),
                  onResize: i[0] || (i[0] = (u) => (n.value = u)),
                },
                { default: G(() => [L(s.$slots, 'default')]), _: 3 },
                8,
                ['class', 'style'],
              ),
            ],
            4,
          )
        )
      )
    },
  }),
  nE = re({
    name: 'VaLayoutArea',
    __name: 'VaLayoutArea',
    props: { area: { type: String, required: !0 }, config: { type: Object, required: !0 } },
    emits: ['overlay-click'],
    setup(e, { emit: t }) {
      const n = e,
        o = p(() => n.config.absolute || !1),
        r = p(() => n.config.fixed || !1),
        a = p(() => n.config.overlay || !1),
        l = p(() => (n.config.order || 0) + 1)
      return (s, i) => (
        C(),
        A(
          Te,
          null,
          [
            o.value
              ? (C(),
                ee(
                  eE,
                  {
                    key: 0,
                    style: me(
                      `--va-props-area: ${String(s.$props.area)};--va-z-index: ${String(
                        l.value,
                      )};--va-z-index-1: ${String(l.value - 1)}`,
                    ),
                  },
                  {
                    default: G(() => [
                      Y(
                        'div',
                        { class: Pe(`va-layout-area va-layout__area va-layout__area--${e.area}`) },
                        [
                          r.value
                            ? (C(),
                              ee(
                                bf,
                                { key: 0, area: e.area },
                                { default: G(() => [L(s.$slots, 'default')]), _: 3 },
                                8,
                                ['area'],
                              ))
                            : L(s.$slots, 'default', { key: 1 }),
                        ],
                        2,
                      ),
                    ]),
                    _: 3,
                  },
                  8,
                  ['style'],
                ))
              : (C(),
                A(
                  'div',
                  {
                    key: 1,
                    class: Pe(`va-layout-area va-layout__area va-layout__area--${e.area}`),
                    style: me(
                      `--va-props-area: ${String(s.$props.area)};--va-z-index: ${String(
                        l.value,
                      )};--va-z-index-1: ${String(l.value - 1)}`,
                    ),
                  },
                  [
                    r.value
                      ? (C(),
                        ee(bf, { key: 0, area: e.area }, { default: G(() => [L(s.$slots, 'default')]), _: 3 }, 8, [
                          'area',
                        ]))
                      : L(s.$slots, 'default', { key: 1 }),
                  ],
                  6,
                )),
            ne(
              Ka,
              {
                style: me(
                  `--va-props-area: ${String(s.$props.area)};--va-z-index: ${String(l.value)};--va-z-index-1: ${String(
                    l.value - 1,
                  )}`,
                ),
              },
              {
                default: G(() => [
                  a.value
                    ? (C(),
                      A(
                        'div',
                        {
                          key: 0,
                          class: Pe(['va-layout-area__overlay', { 'va-layout-area__overlay--fixed': r.value }]),
                          onClick: i[0] || (i[0] = (u) => s.$emit('overlay-click')),
                        },
                        null,
                        2,
                      ))
                    : W('', !0),
                ]),
                _: 1,
              },
              8,
              ['style'],
            ),
          ],
          64,
        )
      )
    },
  }),
  oE = { class: 'va-layout__area va-layout__area--content' },
  zf = ['top', 'left', 'right', 'bottom'],
  rE = re({
    name: 'VaLayout',
    __name: 'VaLayout',
    props: { ...qA, allowBodyScrollOnOverlay: { type: Boolean, default: !1 } },
    emits: ['top-overlay-click', 'left-overlay-click', 'right-overlay-click', 'bottom-overlay-click'],
    setup(e, { emit: t }) {
      const n = e,
        { paddings: o } = YA(n),
        r = p(
          () =>
            !n.allowBodyScrollOnOverlay &&
            zf.some((c) => {
              var d
              return (d = n[c]) == null ? void 0 : d.overlay
            }),
        ),
        a = vr()
      vn(() => {
        var c
        const d = (c = a.value) == null ? void 0 : c.body
        d && (r.value ? (d.style.overflow = 'hidden') : (d.style.overflow = ''))
      })
      const l = KA(n),
        s = Zt(),
        i = p(() => [s.top ? 'min-content' : '0fr', '1fr', s.bottom ? 'min-content' : '0fr'].filter(Boolean).join(' ')),
        u = p(() => [s.left ? 'min-content' : '0fr', '1fr', s.right ? 'min-content' : '0fr'].filter(Boolean).join(' '))
      return (c, d) => (
        C(),
        A(
          'div',
          {
            class: 'va-layout',
            style: me(
              `--va-horizontal-template: ${String(u.value)};--va-vertical-template: ${String(
                i.value,
              )};--va-template-area: ${String(f(l))};--va-paddings-top-px: ${
                f(o).top + 'px'
              };--va-paddings-bottom-px: ${f(o).bottom + 'px'};--va-paddings-left-px: ${
                f(o).left + 'px'
              };--va-paddings-right-px: ${f(o).right + 'px'}`,
            ),
          },
          [
            (C(),
            A(
              Te,
              null,
              Ue(zf, (m) =>
                ne(
                  nE,
                  { key: m, area: m, config: c.$props[m] || {}, onOverlayClick: (v) => c.$emit(`${m}-overlay-click`) },
                  { default: G(() => [L(c.$slots, m)]), _: 2 },
                  1032,
                  ['area', 'config', 'onOverlayClick'],
                ),
              ),
              64,
            )),
            Y('div', oE, [L(c.$slots, 'default', {}, () => [L(c.$slots, 'content')])]),
          ],
          4,
        )
      )
    },
  }),
  aE = no(rE),
  lE = { class: 'va-navbar__left' },
  sE = { class: 'va-navbar__center' },
  iE = { class: 'va-navbar__right' },
  uE = re({
    name: 'VaNavbar',
    __name: 'VaNavbar',
    props: {
      ...sh,
      ...Le,
      color: { type: String, default: 'background-secondary' },
      textColor: { type: String },
      shape: { type: Boolean, default: !1 },
      shadowed: { type: Boolean, default: !1 },
      bordered: { type: Boolean, default: !1 },
    },
    setup(e) {
      const t = e,
        { scrollRoot: n, isScrolledDown: o } = uh(t.fixed),
        { fixedBarStyleComputed: r } = ih(t, o),
        { getColor: a, shiftHSLAColor: l } = Re(),
        s = p(() => a(t.color)),
        { textColorComputed: i } = Vt(s),
        u = p(() => ({ borderTopColor: l(s.value, { h: -1, s: -11, l: 10 }) })),
        c = p(() => ({ ...r.value, backgroundColor: s.value, color: i.value, fill: i.value })),
        d = rt('va-navbar', () => ({ shadowed: t.shadowed, bordered: t.bordered }))
      return (m, v) => (
        C(),
        A(
          'header',
          { ref_key: 'scrollRoot', ref: n, class: Pe(['va-navbar', f(d)]), style: me(c.value) },
          [
            L(m.$slots, 'default', {}, () => [
              Y('div', lE, [L(m.$slots, 'left')]),
              Y('div', sE, [L(m.$slots, 'center')]),
              Y('div', iE, [L(m.$slots, 'right')]),
            ]),
            e.shape
              ? (C(), A('div', { key: 0, class: 'va-navbar__background-shape', style: me(u.value) }, null, 4))
              : W('', !0),
          ],
          6,
        )
      )
    },
  }),
  cE = re({ name: 'VaNavbarItem', props: {} }),
  dE = { class: 'va-navbar__item' }
function mE(e, t, n, o, r, a) {
  return C(), A('div', dE, [L(e.$slots, 'default')])
}
const fE = yr(cE, [['render', mE]]),
  pE = ye(uE),
  vE = ye(fE),
  gE = ['role'],
  hE = ['value', 'checked', 'aria-checked', 'onChange'],
  yE = Y(
    'span',
    { 'aria-hidden': 'true', class: 'va-radio__icon' },
    [Y('span', { class: 'va-radio__icon__background' }), Y('span', { class: 'va-radio__icon__dot' })],
    -1,
  ),
  _E = re({
    name: 'VaRadio',
    __name: 'VaRadio',
    props: {
      ...zc,
      ...Le,
      ...Xr,
      modelValue: { type: [Boolean, Array, String, Object, Number], default: null },
      options: { type: Array, default: () => [] },
      name: { type: String, default: '' },
      label: { type: String, default: void 0 },
      leftLabel: { type: Boolean, default: !1 },
      color: { type: String, default: 'primary' },
      option: { type: [Object, String, Number], default: void 0 },
      vertical: { type: Boolean, default: !1 },
    },
    emits: xs,
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        { getColor: r } = Re(),
        a = { container: je(), input: je(), label: je() },
        {
          computedError: l,
          computedErrorMessages: s,
          validationAriaAttributes: i,
          onBlur: u,
          onFocus: c,
        } = Cc(n, o, a),
        { getText: d, getDisabled: m, getValue: v } = Jr(n),
        g = (D) => (n.options.length > 0 ? d(D) : n.label ?? d(D)),
        h = (D) => m(D) || n.disabled,
        _ = p(() => n.options.length === 0 && !n.option),
        y = (D) => (_.value ? n.modelValue : n.modelValue === v(D)),
        b = p(() => (_.value ? [{}] : n.option ? [n.option] : n.options)),
        w = (D) => ({
          'va-radio--left-label': n.leftLabel,
          'va-radio--selected': y(D),
          'va-radio--readonly': n.readonly,
          'va-radio--disabled': n.disabled,
          'va-radio--indeterminate': n.indeterminate,
          'va-radio--error': l.value,
          'va-radio--single-option': _.value,
        }),
        S = (D, O) => {
          var R
          if (_.value) {
            o('update:modelValue', ((R = O == null ? void 0 : O.target) == null ? void 0 : R.checked) || !1)
            return
          }
          o('update:modelValue', D)
        },
        $ = p(() => ({ color: l.value ? r('danger') : '' }))
      p(() => {
        const D = { background: r(n.color), borderColor: r(n.color) }
        return l.value && (D.borderColor = r('danger')), D
      })
      const k = p(() => ({ backgroundColor: r(n.color) })),
        z = p(() => ({ borderColor: l.value ? r('danger') : r(n.color), backgroundColor: r(n.color) })),
        V = p(() => ({ borderColor: l.value ? r('danger') : r(n.color) })),
        T = Fn(),
        B = p(() => n.name || T),
        K = (D) => {
          const O = h(D)
          return { name: B.value, disabled: O, readonly: n.readonly, tabindex: O ? -1 : 0 }
        },
        j = p(() => (n.vertical ? 'column' : 'row')),
        U = p(() => {
          var D
          return ((D = n.options) == null ? void 0 : D.length) > 0 ? 'radiogroup' : ''
        })
      return (D, O) => (
        C(),
        ee(
          f($s),
          {
            disabled: D.disabled,
            success: D.success,
            messages: D.messages,
            error: f(l),
            'error-messages': f(s),
            'error-count': D.errorCount,
            onBlur: f(u),
            style: me(
              `--va-flex-direction: ${String(j.value)};--va-label-style-color: ${String(
                $.value.color,
              )};--va-icon-computed-styles-border-color: ${String(
                V.value.borderColor,
              )};--va-icon-dot-computed-styles-border-color: ${String(
                z.value.borderColor,
              )};--va-icon-dot-computed-styles-background-color: ${String(
                z.value.backgroundColor,
              )};--va-icon-background-computed-styles-background-color: ${String(k.value.backgroundColor)}`,
            ),
          },
          {
            default: G(({ ariaAttributes: R }) => [
              Y(
                'div',
                le({ ref: 'container', class: 'va-radio', role: U.value }, R),
                [
                  (C(!0),
                  A(
                    Te,
                    null,
                    Ue(
                      b.value,
                      (N, x) => (
                        C(),
                        A(
                          'label',
                          { key: x, class: Pe([w(N), 'va-radio__square']) },
                          [
                            Y(
                              'input',
                              le(
                                {
                                  ref_for: !0,
                                  ref: 'input',
                                  class: 'va-radio__input',
                                  type: 'radio',
                                  role: 'radio',
                                  value: y(N),
                                  checked: y(N),
                                  'aria-checked': y(N),
                                },
                                { ...K(N), ...R },
                                {
                                  onChange: (ce) => S(f(v)(N), ce),
                                  onFocus: O[0] || (O[0] = (...ce) => f(c) && f(c)(...ce)),
                                  onBlur: O[1] || (O[1] = (...ce) => f(u) && f(u)(...ce)),
                                },
                              ),
                              null,
                              16,
                              hE,
                            ),
                            L(D.$slots, 'icon', pe(ke({ value: y(N), text: g(N), disabled: h(N), index: x })), () => [
                              yE,
                            ]),
                            g(N) || D.$slots.default
                              ? (C(),
                                A(
                                  'div',
                                  { key: 0, ref_for: !0, ref: 'label', class: 'va-radio__text' },
                                  [
                                    L(
                                      D.$slots,
                                      'default',
                                      pe(ke({ value: y(N), text: g(N), disabled: h(N), index: x })),
                                      () => [Fe(Ae(g(N)), 1)],
                                    ),
                                  ],
                                  512,
                                ))
                              : W('', !0),
                          ],
                          2,
                        )
                      ),
                    ),
                    128,
                  )),
                ],
                16,
                gE,
              ),
            ]),
            _: 3,
          },
          8,
          ['disabled', 'success', 'messages', 'error', 'error-messages', 'error-count', 'onBlur', 'style'],
        )
      )
    },
  }),
  uy = ye(_E),
  bE = { class: 'va-switch__inner' },
  zE = { class: 'va-switch__checker-wrapper' },
  CE = { class: 'va-switch__checker' },
  SE = { class: 'va-switch__checker-circle' },
  wE = ['id'],
  $E = re({
    name: 'VaSwitch',
    __name: 'VaSwitch',
    props: {
      ...zc,
      ...Le,
      id: { type: String, default: '' },
      name: { type: String, default: '' },
      modelValue: { type: [Number, Boolean, Array, String, Object], default: !1 },
      trueLabel: { type: String, default: null },
      falseLabel: { type: String, default: null },
      trueInnerLabel: { type: String, default: null },
      falseInnerLabel: { type: String, default: null },
      ariaLabel: Be('$t:switch'),
      color: { type: String, default: 'primary' },
      offColor: { type: String, default: 'background-element' },
      size: { type: String, default: 'medium', validator: (e) => ['medium', 'small', 'large'].includes(e) },
    },
    emits: [...xs, 'focus', 'blur', 'update:modelValue'],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        a = { container: je(), input: je(), label: je() },
        { getColor: l } = Re(),
        { hasKeyboardFocus: s, keyboardFocusListeners: i } = Qr(),
        {
          isChecked: u,
          computedError: c,
          isIndeterminate: d,
          computedErrorMessages: m,
          validationAriaAttributes: v,
          toggleSelection: g,
          onBlur: h,
          onFocus: _,
          reset: y,
          focus: b,
          isDirty: w,
          isTouched: S,
          isLoading: $,
          isError: k,
        } = Cc(o, r, a),
        z = p(() => l(u.value ? o.color : o.offColor)),
        { textColorComputed: V } = Vt(z),
        T = p(() =>
          o.trueInnerLabel && u.value ? o.trueInnerLabel : o.falseInnerLabel && !u.value ? o.falseInnerLabel : '',
        ),
        B = p(() => (o.trueLabel && u.value ? o.trueLabel : o.falseLabel && !u.value ? o.falseLabel : o.label)),
        K = rt('va-switch', () => ({
          ...yt(o, ['readonly', 'disabled', 'leftLabel']),
          checked: u.value,
          indeterminate: d.value,
          small: o.size === 'small',
          large: o.size === 'large',
          error: c.value,
          keyboardFocus: s.value,
        })),
        j = p(() => ({ lineHeight: m.value.length ? 1 : 0 })),
        U = p(() => ({ small: '15px', medium: '20px', large: '25px' })[o.size]),
        D = p(() => ({ borderColor: c.value ? l('danger') : '', backgroundColor: z.value })),
        O = p(() => ({ color: c.value ? l('danger') : '' })),
        R = p(() => ({ color: V.value, 'text-align': u.value ? 'left' : 'right' })),
        N = Zt(),
        x = Fn(),
        ce = p(() => `aria-label-id-${x}`),
        ue = p(() => ({
          id: o.id || void 0,
          name: o.name || void 0,
          disabled: o.disabled,
          readonly: o.readonly,
          'aria-disabled': o.disabled,
          'aria-readonly': o.readonly,
          'aria-checked': !!o.modelValue,
          'aria-label': N.default ? void 0 : o.ariaLabel,
          'aria-labelledby': B.value || N.default ? ce.value : void 0,
          tabindex: o.disabled ? -1 : 0,
          checked: u.value,
          ...v.value,
        })),
        be = () => {
          var we
          ;(we = a.input.value) == null || we.click()
        },
        xe = a.input
      return (
        t({ focus: b, reset: y, isDirty: w, isTouched: S, isLoading: $, isError: k }),
        (we, J) => (
          C(),
          ee(
            f($s),
            {
              class: Pe(['va-switch', f(K)]),
              style: me(j.value),
              disabled: we.$props.disabled,
              success: we.$props.success,
              messages: we.$props.messages,
              error: f(c),
              'error-messages': f(m),
              'error-count': we.$props.errorCount,
            },
            {
              default: G(() => [
                Y(
                  'div',
                  {
                    ref: 'container',
                    class: 'va-switch__container',
                    tabindex: '-1',
                    onBlur: J[5] || (J[5] = (..._e) => f(h) && f(h)(..._e)),
                    onClick: J[6] || (J[6] = (..._e) => f(g) && f(g)(..._e)),
                  },
                  [
                    Y('div', bE, [
                      Y(
                        'input',
                        le(
                          { ref_key: 'input', ref: xe, type: 'checkbox', class: 'va-switch__input', role: 'switch' },
                          ue.value,
                          yn(f(i), !0),
                          {
                            onFocus: J[0] || (J[0] = (..._e) => f(_) && f(_)(..._e)),
                            onBlur: J[1] || (J[1] = (..._e) => f(h) && f(h)(..._e)),
                            onKeypress: $e(be, ['enter']),
                          },
                        ),
                        null,
                        16,
                      ),
                      Y(
                        'div',
                        { class: 'va-switch__track', 'aria-hidden': 'true', style: me(D.value) },
                        [
                          T.value || we.$slots.innerLabel
                            ? (C(),
                              A(
                                'div',
                                { key: 0, class: 'va-switch__track-label', style: me(R.value) },
                                [L(we.$slots, 'innerLabel', {}, () => [Fe(Ae(T.value), 1)])],
                                4,
                              ))
                            : W('', !0),
                          Y('div', zE, [
                            Y('div', CE, [
                              L(we.$slots, 'checker', pe(ke({ value: f(u) })), () => [
                                Y('div', SE, [
                                  we.$props.loading
                                    ? (C(),
                                      ee(
                                        f(qr),
                                        { key: 0, indeterminate: '', size: U.value, color: D.value.backgroundColor },
                                        null,
                                        8,
                                        ['size', 'color'],
                                      ))
                                    : W('', !0),
                                ]),
                              ]),
                            ]),
                          ]),
                        ],
                        4,
                      ),
                    ]),
                    B.value || we.$slots.default
                      ? (C(),
                        A(
                          'div',
                          {
                            key: 0,
                            ref: 'label',
                            class: 'va-switch__label',
                            style: me(O.value),
                            id: ce.value,
                            onBlur: J[2] || (J[2] = (..._e) => f(h) && f(h)(..._e)),
                            onClick: J[3] || (J[3] = (..._e) => f(g) && f(g)(..._e)),
                            onKeydown:
                              J[4] ||
                              (J[4] = $e(
                                Se((..._e) => f(g) && f(g)(..._e), ['stop']),
                                ['enter'],
                              )),
                          },
                          [L(we.$slots, 'default', {}, () => [Fe(Ae(B.value), 1)])],
                          44,
                          wE,
                        ))
                      : W('', !0),
                  ],
                  544,
                ),
              ]),
              _: 3,
            },
            8,
            ['class', 'style', 'disabled', 'success', 'messages', 'error', 'error-messages', 'error-count'],
          )
        )
      )
    },
  }),
  cy = ye($E),
  Ms = () => {
    const e = je([]),
      t = (o) => {
        o && e.value.push(o)
      },
      n = (o) => (r) => {
        r && (e.value[o] = r)
      }
    return (
      Ru(() => {
        e.value = []
      }),
      { itemRefs: e, setItemRef: t, setItemRefByIndex: n }
    )
  },
  kE = { class: 'va-option-list__list' },
  TE = re({
    name: 'VaOptionList',
    __name: 'VaOptionList',
    props: {
      ...Le,
      ...Xr,
      ...ro,
      ...Tt,
      type: { type: String, default: 'checkbox', validator: (e) => ['radio', 'checkbox', 'switch'].includes(e) },
      disabled: { type: Boolean, default: !1 },
      readonly: { type: Boolean, default: !1 },
      defaultValue: { type: [String, Number, Boolean, Object, Array] },
      name: { type: String, default: '' },
      color: { type: String, default: 'primary' },
      leftLabel: { type: Boolean, default: !1 },
      modelValue: { type: [String, Number, Boolean, Object, Array] },
    },
    emits: [...Mt, ...Bo, 'clear'],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        { valueComputed: a } = vt(o, r, 'modelValue', { defaultValue: o.defaultValue }),
        { getValue: l, getText: s, getTrackBy: i, getDisabled: u } = Jr(o),
        { itemRefs: c, setItemRef: d } = Ms(),
        m = p(() => o.type === 'radio'),
        v = p({
          get() {
            const k = m.value ? null : []
            return a.value || k
          },
          set(k) {
            o.readonly ||
              (m.value && !Array.isArray(k)
                ? (a.value = k && l(k))
                : (a.value = Array.isArray(k) ? k.map(l) : [k && l(k)]))
          },
        }),
        g = (k) => o.disabled || u(k),
        h = () =>
          w(() => {
            ;(a.value = null), r('clear'), S()
          }),
        _ = () => {
          const k = Array.isArray(c.value) && c.value.find((z) => !z.disabled)
          k && typeof k.focus == 'function' && k.focus()
        },
        {
          computedError: y,
          computedErrorMessages: b,
          withoutValidation: w,
          resetValidation: S,
        } = ao(o, r, { reset: h, focus: _, value: a }),
        $ = p(() => yt(o, ['name', 'color', 'readonly', 'leftLabel']))
      return (
        et(() => {
          Kr &&
            o.type !== 'radio' &&
            !Array.isArray(o.modelValue) &&
            console.warn(`Prop 'modelValue = ${o.modelValue}' has not a proper type!
 For component property 'type = ${o.type}' it must be of type 'array'.`)
        }),
        t({ focus: _, reset: h }),
        (k, z) => (
          C(),
          ee(
            f($s),
            { error: f(y), 'error-messages': f(b), 'error-count': k.$props.errorCount },
            {
              default: G(() => [
                Y('ul', kE, [
                  (C(!0),
                  A(
                    Te,
                    null,
                    Ue(
                      k.$props.options,
                      (V) => (
                        C(),
                        A('li', { key: f(i)(V) }, [
                          L(
                            k.$slots,
                            'default',
                            pe(ke({ option: V, selectedValue: v.value, isDisabled: g, getText: f(s), getValue: f(l) })),
                            () => [
                              k.$props.type === 'radio'
                                ? (C(),
                                  ee(
                                    f(uy),
                                    le(
                                      {
                                        key: 0,
                                        ref_for: !0,
                                        ref: f(d),
                                        modelValue: v.value,
                                        'onUpdate:modelValue': z[0] || (z[0] = (T) => (v.value = T)),
                                        label: f(s)(V),
                                        disabled: g(V),
                                        option: f(l)(V),
                                      },
                                      $.value,
                                    ),
                                    null,
                                    16,
                                    ['modelValue', 'label', 'disabled', 'option'],
                                  ))
                                : k.$props.type === 'checkbox'
                                  ? (C(),
                                    ee(
                                      f(ol),
                                      le(
                                        {
                                          key: 1,
                                          ref_for: !0,
                                          ref: f(d),
                                          modelValue: v.value,
                                          'onUpdate:modelValue': z[1] || (z[1] = (T) => (v.value = T)),
                                          label: f(s)(V),
                                          disabled: g(V),
                                          'array-value': f(l)(V),
                                        },
                                        $.value,
                                      ),
                                      null,
                                      16,
                                      ['modelValue', 'label', 'disabled', 'array-value'],
                                    ))
                                  : (C(),
                                    ee(
                                      f(cy),
                                      le(
                                        {
                                          key: 2,
                                          ref_for: !0,
                                          ref: f(d),
                                          modelValue: v.value,
                                          'onUpdate:modelValue': z[2] || (z[2] = (T) => (v.value = T)),
                                          label: f(s)(V),
                                          disabled: g(V),
                                          'array-value': f(l)(V),
                                        },
                                        $.value,
                                      ),
                                      null,
                                      16,
                                      ['modelValue', 'label', 'disabled', 'array-value'],
                                    )),
                            ],
                          ),
                        ])
                      ),
                    ),
                    128,
                  )),
                ]),
              ]),
              _: 3,
            },
            8,
            ['error', 'error-messages', 'error-count'],
          )
        )
      )
    },
  }),
  VE = ye(TE),
  PE = (e = 1, t, n, o = !1) => {
    let r = 0
    if ((n === 0 && (n = 1), t > n && (t = n), t === 0)) (r = 1), (t = n > 10 ? 10 : n)
    else {
      const l = t / 2
      e - l <= 0 || e > n ? (r = 1) : (r = e + l > n ? n - t + 1 : Math.ceil(e - l))
    }
    const a = []
    for (let l = 0; l < t; l++) a.push(r + l)
    return (
      o && t < 7
        ? n >= 7 &&
          ot(
            '[va-pagination] To work in a proper way, the `boundaryNumbers` prop needs at least 7 visible pages to be set via the `visiblePages` prop (first, last, 2 boundaries, current, previous, next).',
          )
        : o && (r !== 1 && a.splice(0, 2, 1, '...'), a[a.length - 1] !== n && a.splice(-2, 2, '...', n)),
      a
    )
  },
  AE = ['aria-label', 'onKeydown'],
  EE = ['aria-label'],
  IE = re({
    name: 'VaPagination',
    __name: 'VaPagination',
    props: {
      ...Tt,
      ...Le,
      modelValue: { type: Number, default: 1 },
      visiblePages: { type: [Number, String], default: 0 },
      pages: { type: [Number, String], default: 0 },
      disabled: { type: Boolean, default: !1 },
      color: { type: String, default: 'primary' },
      size: { type: String, default: 'medium', validator: (e) => ['small', 'medium', 'large'].includes(e) },
      boundaryLinks: { type: Boolean, default: !0 },
      boundaryNumbers: { type: Boolean, default: !1 },
      directionLinks: { type: Boolean, default: !0 },
      input: { type: Boolean, default: !1 },
      hideOnSinglePage: { type: Boolean, default: !1 },
      total: { type: [Number, String], default: null },
      pageSize: { type: [Number, String], default: null },
      boundaryIconLeft: { type: String, default: 'va-arrow-first' },
      boundaryIconRight: { type: String, default: 'va-arrow-last' },
      directionIconLeft: { type: String, default: 'va-arrow-left' },
      directionIconRight: { type: String, default: 'va-arrow-right' },
      gapped: { type: Boolean, default: !1 },
      borderColor: { type: String, default: '' },
      rounded: { type: Boolean, default: !1 },
      activePageColor: { type: String, default: '' },
      activeButtonProps: { type: Object, default: () => ({}) },
      buttonProps: { type: Object, default: () => ({}) },
      buttonsPreset: { type: String, default: 'primary' },
      ariaLabel: Be('$t:pagination'),
      ariaGoToTheFirstPageLabel: Be('$t:goToTheFirstPage'),
      ariaGoToPreviousPageLabel: Be('$t:goToPreviousPage'),
      ariaGoToSpecificPageLabel: Be('$t:goToSpecificPage'),
      ariaGoToSpecificPageInputLabel: Be('$t:goToSpecificPageInput'),
      ariaGoToNextPageLabel: Be('$t:goNextPage'),
      ariaGoToLastPageLabel: Be('$t:goLastPage'),
    },
    emits: [...Mt],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        a = je(),
        l = H(''),
        s = p(() => !!((m.value || m.value === 0) && v.value)),
        { valueComputed: i } = vt(o, r),
        u = p({
          get: () => (s.value ? Math.ceil(i.value / v.value) || 1 : i.value),
          set: (J) => {
            i.value = J
          },
        }),
        c = We('visiblePages'),
        d = We('pages'),
        m = We('total'),
        v = We('pageSize'),
        g = p(() => {
          const { boundaryNumbers: J } = o,
            _e = u.value || 1,
            Ce = s.value ? Math.ceil(m.value / v.value) : d.value
          return PE(_e, c.value, Ce, J)
        }),
        h = p(() => (s.value ? Math.ceil(m.value / v.value) || 1 : +d.value)),
        _ = p(() => (!!c.value && h.value > c.value) || o.input),
        y = p(() => {
          const { boundaryLinks: J, boundaryNumbers: _e } = o
          return _.value && J && !_e
        }),
        b = p(() => _.value && o.directionLinks),
        w = p(() => h.value > 1 || (!o.hideOnSinglePage && h.value <= 1)),
        S = () => {
          ;(l.value = String(u.value)),
            dt(() => {
              var J
              return (J = a.value) == null ? void 0 : J.setSelectionRange(0, a.value.value.length)
            })
        },
        { setItemRefByIndex: $, itemRefs: k } = Ms(),
        z = (J) => {
          var _e
          if (J === '...' || J === u.value) return
          const Ce = lr(J, 1, h.value)
          ;(u.value = s.value ? (Ce - 1) * v.value + 1 : Ce), (_e = k.value[J - 1]) == null || _e.focus()
        },
        V = () => {
          var J
          ;(l.value = ''), (J = a.value) == null || J.blur()
        },
        T = () => {
          if ((+l.value === u.value && V(), !l.value.length)) return
          let J = Number.parseInt(l.value)
          switch (!0) {
            case J < 1:
              J = 1
              break
            case J > h.value:
              J = h.value
              break
            case isNaN(J):
              J = u.value
              break
          }
          z(J), V()
        },
        { getColor: B, colorToRgba: K } = Re(),
        j = p(() => {
          const { color: J, buttonsPreset: _e } = Sn(o)
          if (!J.value) return 'transparent'
          switch (_e.value) {
            case 'default':
              return B(J.value)
            case void 0:
            case 'primary':
              return K(B(J.value), 0.1)
            default:
              return 'transparent'
          }
        }),
        U = p(() => ({ cursor: 'default', color: B(o.color), opacity: o.disabled ? 0.4 : 1, borderColor: j.value }))
      ge([s, () => d.value], () => {
        if (Kr && s.value && d.value) throw new Error('Please, use either `total` and `page-size` props, or `pages`.')
      })
      const D = p(() => ({ disabled: o.disabled, placeholder: `${u.value}/${h.value}` })),
        O = p(() => ({
          size: o.size,
          preset: o.buttonsPreset,
          color: o.color,
          borderColor: o.borderColor,
          round: o.rounded,
          ...o.buttonProps,
        })),
        R = p(() => ({
          preset: o.buttonsPreset === 'default' ? 'primary' : 'default',
          color: o.activePageColor || o.color,
          ...o.activeButtonProps,
        })),
        N = (J) => (!isNaN(+J) && J === u.value ? Object.assign({}, O.value, R.value) : O.value),
        x = p(() => o.input && !o.boundaryLinks && !o.directionLinks),
        ce = rt('va-pagination__input', () => ({
          sm: o.size === 'small' && x.value,
          md: o.size === 'medium' && x.value,
          lg: o.size === 'large' && x.value,
          auto: !x.value,
        })),
        ue = rt('va-pagination', () => ({ ...yt(o, ['gapped', 'rounded', 'disabled']), bordered: !!o.borderColor })),
        be = () => z(u.value + 1),
        xe = () => z(u.value - 1),
        { tp: we } = ut()
      return (
        t({ goNextPage: be, goPrevPage: xe }),
        (J, _e) =>
          w.value
            ? (C(),
              A(
                'nav',
                {
                  key: 0,
                  class: Pe(['va-pagination', f(ue)]),
                  'aria-label': f(we)(J.$props.ariaLabel),
                  onKeydown: [
                    $e(Se(xe, ['stop']), ['left']),
                    $e(Se(be, ['stop']), ['right']),
                    $e(Se(xe, ['stop']), ['up']),
                    $e(Se(be, ['stop']), ['down']),
                  ],
                },
                [
                  y.value
                    ? L(
                        J.$slots,
                        'firstPageLink',
                        pe(le({ key: 0 }, { onClick: () => z(1), disabled: J.$props.disabled || u.value === 1 })),
                        () => [
                          y.value
                            ? (C(),
                              ee(
                                f(Xe),
                                le(
                                  {
                                    key: 0,
                                    'aria-label': f(we)(J.$props.ariaGoToTheFirstPageLabel),
                                    disabled: J.$props.disabled || u.value === 1,
                                    icon: J.$props.boundaryIconLeft,
                                  },
                                  O.value,
                                  { onClick: _e[0] || (_e[0] = (Ce) => z(1)) },
                                ),
                                null,
                                16,
                                ['aria-label', 'disabled', 'icon'],
                              ))
                            : W('', !0),
                        ],
                      )
                    : W('', !0),
                  b.value
                    ? L(
                        J.$slots,
                        'prevPageLink',
                        pe(le({ key: 1 }, { onClick: xe, disabled: J.$props.disabled || u.value === 1 })),
                        () => [
                          b.value
                            ? (C(),
                              ee(
                                f(Xe),
                                le(
                                  {
                                    key: 0,
                                    'aria-label': f(we)(J.$props.ariaGoToPreviousPageLabel),
                                    disabled: J.$props.disabled || u.value === 1,
                                    icon: J.$props.directionIconLeft,
                                  },
                                  O.value,
                                  { onClick: xe },
                                ),
                                null,
                                16,
                                ['aria-label', 'disabled', 'icon'],
                              ))
                            : W('', !0),
                        ],
                      )
                    : W('', !0),
                  J.$props.input
                    ? Pn(
                        (C(),
                        A(
                          'input',
                          le(
                            {
                              key: 3,
                              'onUpdate:modelValue': _e[1] || (_e[1] = (Ce) => (l.value = Ce)),
                              ref_key: 'htmlInput',
                              ref: a,
                              class: ['va-pagination__input va-button', f(ce)],
                              'aria-label': f(we)(J.$props.ariaGoToSpecificPageInputLabel),
                              style: U.value,
                            },
                            D.value,
                            { onKeydown: $e(T, ['enter']), onFocus: S, onBlur: T },
                          ),
                          null,
                          16,
                          EE,
                        )),
                        [[bs, l.value]],
                      )
                    : L(J.$slots, 'default', { key: 2 }, () => [
                        (C(!0),
                        A(
                          Te,
                          null,
                          Ue(
                            g.value,
                            (Ce, I) => (
                              C(),
                              ee(
                                f(Xe),
                                le(
                                  {
                                    key: I,
                                    ref_for: !0,
                                    ref: f($)(I),
                                    class: {
                                      'va-button--ellipsis': Ce === '...',
                                      'va-button--current': Ce === u.value,
                                    },
                                    'aria-label': f(we)(J.$props.ariaGoToSpecificPageLabel, { page: Ce }),
                                    'aria-current': Ce === u.value,
                                    disabled: J.$props.disabled || Ce === '...',
                                  },
                                  N(Ce),
                                  { onClick: (M) => z(Ce) },
                                ),
                                { default: G(() => [Fe(Ae(Ce), 1)]), _: 2 },
                                1040,
                                ['class', 'aria-label', 'aria-current', 'disabled', 'onClick'],
                              )
                            ),
                          ),
                          128,
                        )),
                      ]),
                  b.value
                    ? L(
                        J.$slots,
                        'nextPageLink',
                        pe(le({ key: 4 }, { onClick: be, disabled: J.$props.disabled || u.value === h.value })),
                        () => [
                          b.value
                            ? (C(),
                              ee(
                                f(Xe),
                                le(
                                  {
                                    key: 0,
                                    'aria-label': f(we)(J.$props.ariaGoToNextPageLabel),
                                    disabled: J.$props.disabled || u.value === h.value,
                                    icon: J.$props.directionIconRight,
                                  },
                                  O.value,
                                  { onClick: be },
                                ),
                                null,
                                16,
                                ['aria-label', 'disabled', 'icon'],
                              ))
                            : W('', !0),
                        ],
                      )
                    : W('', !0),
                  y.value
                    ? L(
                        J.$slots,
                        'lastPageLink',
                        pe(
                          le(
                            { key: 5 },
                            { onClick: () => z(h.value), disabled: J.$props.disabled || u.value === h.value },
                          ),
                        ),
                        () => [
                          y.value
                            ? (C(),
                              ee(
                                f(Xe),
                                le(
                                  {
                                    key: 0,
                                    'aria-label': f(we)(J.$props.ariaGoToLastPageLabel),
                                    disabled: J.$props.disabled || u.value === h.value,
                                    icon: J.$props.boundaryIconRight,
                                  },
                                  O.value,
                                  { onClick: _e[2] || (_e[2] = (Ce) => z(h.value)) },
                                ),
                                null,
                                16,
                                ['aria-label', 'disabled', 'icon'],
                              ))
                            : W('', !0),
                        ],
                      )
                    : W('', !0),
                ],
                42,
                AE,
              ))
            : W('', !0)
      )
    },
  }),
  xE = ye(IE),
  OE = () => {
    const e = ks(),
      t = new Proxy(e.value || {}, {
        get: (o, r, a) => {
          var l, s
          if (r === 'scrollTop') return (l = e.value) == null ? void 0 : l.scrollY
          if (r === 'scrollLeft') return (s = e.value) == null ? void 0 : s.scrollX
          const i = Reflect.get(o, r, a)
          return typeof i == 'function' ? i.bind(o) : i
        },
      }),
      n = (o) => (o ? (o.scrollHeight > o.clientHeight ? o : n(o.parentElement)) : t)
    return { getScrollableParent: n }
  },
  LE = { class: 'va-parallax__image-container' },
  BE = ['src', 'alt'],
  NE = { class: 'va-parallax__item-container' },
  RE = re({
    name: 'VaParallax',
    __name: 'VaParallax',
    props: {
      ...Le,
      target: { type: [Object, String] },
      src: { type: String, default: '', required: !0 },
      alt: { type: String, default: 'parallax' },
      height: { type: [Number, String], default: 400 },
      reversed: { type: Boolean, default: !1 },
      speed: {
        type: [Number, String],
        default: 0.5,
        validator: (e) => {
          const t = Number(e)
          return t >= 0 && t <= 1
        },
      },
    },
    setup(e) {
      const t = e,
        n = je(),
        o = je(),
        r = H(0),
        a = H(0),
        l = H(0),
        s = H(0),
        i = H(0),
        u = H(0),
        c = H(0),
        d = H(!1),
        m = p(() => ({ height: y.value + 'px' })),
        v = p(() => ({
          display: 'block',
          transform: `translate(-50%, ${a.value}px)`,
          opacity: d.value ? 1 : 0,
          top: t.reversed ? 0 : 'auto',
        })),
        { getScrollableParent: g } = OE(),
        h = p(() => {
          var V
          if (!t.target) return g((V = n.value) == null ? void 0 : V.parentElement)
          if (t.target instanceof HTMLElement) return t.target
          const T = document.querySelector(t.target)
          return T || (ot('VaParallax target prop got wrong selector. Target is null'), null)
        }),
        _ = p(() => {
          var V
          return ((V = o.value) == null ? void 0 : V.naturalHeight) || 0
        }),
        y = We('height'),
        b = We('speed'),
        w = () => {
          var V, T
          const B = ((V = n.value) == null ? void 0 : V.getBoundingClientRect()) || { top: 0 }
          ;(i.value = ((T = h.value) == null ? void 0 : T.scrollTop) || 0),
            (l.value = _.value - y.value),
            (r.value = B.top + i.value),
            (u.value = window.innerHeight),
            (c.value = i.value + u.value)
        },
        S = () => {
          w(),
            (s.value = (c.value - r.value) / (y.value + u.value)),
            (a.value = Math.round(l.value * s.value) * b.value),
            t.reversed && (a.value = -a.value)
        },
        $ = () => {
          var V, T
          ;(V = h.value) == null || V.addEventListener('scroll', S),
            (T = h.value) == null || T.addEventListener('resize', S)
        },
        k = () => {
          var V, T
          ;(V = h.value) == null || V.removeEventListener('scroll', S),
            (T = h.value) == null || T.removeEventListener('resize', S)
        }
      return (
        et(() => {
          var V, T
          ;(V = o.value) != null && V.complete
            ? (S(), $())
            : (T = o.value) == null ||
              T.addEventListener(
                'load',
                () => {
                  S(), $()
                },
                !1,
              ),
            (d.value = !0)
        }),
        wt(k),
        (V, T) => (
          C(),
          A(
            'div',
            { ref_key: 'rootElement', ref: n, class: 'va-parallax', style: me(m.value) },
            [
              Y('div', LE, [
                Y(
                  'img',
                  {
                    ref_key: 'img',
                    ref: o,
                    class: 'va-parallax__image',
                    src: V.$props.src,
                    alt: V.$props.alt,
                    style: me(v.value),
                  },
                  null,
                  12,
                  BE,
                ),
              ]),
              Y('div', NE, [L(V.$slots, 'default')]),
            ],
            4,
          )
        )
      )
    },
  }),
  DE = ye(RE),
  ME = { key: 0, 'aria-hidden': 'true', class: 'va-popover__icon' },
  FE = { key: 1 },
  jE = { key: 0, class: 'va-popover__title' },
  HE = { key: 1, class: 'va-popover__body' },
  wi = Qe(pn, ['closeOnClickOutside']),
  UE = re({
    name: 'VaPopover',
    __name: 'VaPopover',
    props: {
      ...wi,
      ...Le,
      trigger: { ...wi.trigger, default: ['hover', 'enter', 'space', 'arrow-down', 'arrow-up'] },
      color: { type: String, default: '#1b1a1f' },
      textColor: { type: String },
      icon: { type: String, default: '' },
      title: { type: String, default: '' },
      message: { type: String, default: '' },
      autoHide: { type: Boolean, default: !0 },
      offset: { type: [Array, Number], default: 4 },
      contentClass: { type: String, default: '' },
    },
    setup(e) {
      const t = e,
        n = it(wi),
        { getColor: o, getBoxShadowColor: r } = Re(),
        a = Zt(),
        { textColorComputed: l } = Vt(p(() => o(t.color))),
        s = p(() => t.icon || a.icon),
        i = p(() => t.title || a.title),
        u = p(() => t.message || a.body),
        c = p(() => i.value || u.value),
        d = p(() => ({
          boxShadow: `var(--va-popover-content-box-shadow) ${r(o(t.color))}`,
          backgroundColor: o(t.color),
          color: l.value,
        }))
      return (m, v) => (
        C(),
        ee(
          f(pn),
          le(f(n), {
            'model-value': m.modelValue,
            'close-on-click-outside': e.autoHide,
            offset: m.$props.offset,
            'content-class': m.$props.contentClass,
            class: 'va-popover',
          }),
          {
            default: G(() => [
              Y(
                'div',
                { style: me(d.value), class: 'va-popover__content', role: 'tooltip' },
                [
                  s.value
                    ? (C(),
                      A('div', ME, [
                        L(m.$slots, 'icon', {}, () => [
                          ne(f(Ke), { name: m.$props.icon, color: f(l) }, null, 8, ['name', 'color']),
                        ]),
                      ]))
                    : W('', !0),
                  c.value
                    ? (C(),
                      A('div', FE, [
                        i.value
                          ? (C(), A('div', jE, [L(m.$slots, 'title', {}, () => [Fe(Ae(m.$props.title), 1)])]))
                          : W('', !0),
                        u.value
                          ? (C(), A('div', HE, [L(m.$slots, 'body', {}, () => [Fe(Ae(m.$props.message), 1)])]))
                          : W('', !0),
                      ]))
                    : W('', !0),
                ],
                4,
              ),
            ]),
            anchor: G(() => [L(m.$slots, 'default')]),
            _: 3,
          },
          16,
          ['model-value', 'close-on-click-outside', 'offset', 'content-class'],
        )
      )
    },
  }),
  WE = ye(UE)
var At = ((e) => ((e[(e.EMPTY = 0)] = 'EMPTY'), (e[(e.HALF = 0.5)] = 'HALF'), (e[(e.FULL = 1)] = 'FULL'), e))(At || {})
const GE = () => {
    const e = ct()
    if (!e) throw new Error('useRating hooks must be used on top of setup function')
    return { props: e.props, emit: e.emit }
  },
  KE = {
    ...Tt,
    modelValue: { type: Number, default: 0 },
    clearable: { type: Boolean, default: !1 },
    hover: { type: Boolean, default: !1 },
  },
  qE = (e) => {
    const { emit: t } = GE(),
      { isHovered: n, onMouseEnter: o, onMouseLeave: r } = Qa(),
      { valueComputed: a } = vt(e, t),
      l = H(0),
      s = p(() => (!e.disabled && !e.readonly && e.hover && n.value ? l.value : a.value))
    return {
      visibleValue: s,
      modelValue: a,
      hoveredValue: l,
      isHovered: n,
      onMouseEnter: o,
      onMouseLeave: r,
      onItemValueUpdate: (d, m) => {
        const v = d + m
        if (e.clearable && a.value === v) {
          a.value = 0
          return
        }
        a.value = v
      },
      onItemHoveredValueUpdate: (d, m) => {
        e.hover && (l.value = d + m)
      },
      getItemValue: (d) => {
        const m = s.value - d
        return lr(m, At.EMPTY, At.FULL)
      },
    }
  },
  dy = { unselectedColor: { type: String }, color: { type: String, default: 'primary' }, modelValue: { type: Number } },
  my = (e) => {
    const { getColor: t, getFocusColor: n, getTextColor: o } = Re(),
      r = p(() => t(e.color)),
      a = p(() => (e.unselectedColor ? t(e.unselectedColor) : n(t(e.color)))),
      l = p(() =>
        e.modelValue === At.HALF
          ? `linear-gradient(90deg, ${r.value} 50%, ${a.value} 50%`
          : e.modelValue === At.EMPTY
            ? a.value
            : r.value,
      ),
      s = p(() => (e.modelValue === At.FULL ? t(o(r.value)) : t(o(a.value))))
    return { computedColor: r, backgroundComputed: l, textColorComputed: s }
  },
  YE = ['tabindex', 'onKeydown'],
  fy = re({
    name: 'VaRatingItem',
    __name: 'VaRatingItem',
    props: {
      modelValue: { type: Number, default: 0 },
      icon: { type: String, default: 'star' },
      halfIcon: { type: String, default: 'star_half' },
      emptyIcon: { type: String, default: 'star_outline' },
      halves: { type: Boolean, default: !1 },
      hover: { type: Boolean, default: !1 },
      tabindex: { type: [String, Number], default: 0 },
      disabled: { type: Boolean, default: !1 },
      readonly: { type: Boolean, default: !1 },
      size: { type: [String, Number], default: 'medium' },
      unselectedColor: { type: String },
      color: { type: String, default: 'primary' },
    },
    emits: ['update:modelValue', 'click', 'hover'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        r = je(),
        [a] = rr('modelValue', n, o, At.EMPTY),
        l = H(null),
        s = p(() => (n.hover && !n.disabled && !n.readonly && l.value) || a.value),
        { getColor: i } = Re(),
        u = p(() => i(n.unselectedColor && s.value === At.EMPTY ? n.unselectedColor : n.color)),
        c = (h) => {
          if (!r.value) return
          const { offsetX: _ } = h,
            y = r.value.clientWidth
          n.halves ? (l.value = _ / y <= At.HALF ? At.HALF : At.FULL) : (l.value = At.FULL)
        },
        d = () => {
          l.value = null
        },
        m = () => {
          ;(a.value = l.value || At.FULL), o('click', l.value || At.FULL)
        }
      ge(l, () => o('hover', l.value || At.EMPTY))
      const v = p(() => (n.halves && s.value === At.HALF ? n.halfIcon : s.value === At.EMPTY ? n.emptyIcon : n.icon)),
        g = p(() => (n.disabled ? -1 : n.tabindex))
      return (h, _) => (
        C(),
        A(
          'div',
          {
            ref_key: 'rootEl',
            ref: r,
            role: 'button',
            class: 'va-rating-item',
            tabindex: g.value,
            onKeydown: [$e(m, ['enter']), $e(Se(m, ['prevent']), ['space'])],
            onMousemove: c,
            onMouseleave: d,
            onClick: m,
          },
          [
            L(h.$slots, 'default', pe(ke({ value: s.value, onClick: m })), () => [
              ne(
                f(Ke),
                {
                  class: 'va-rating-item__wrapper',
                  tabindex: '-1',
                  tag: 'button',
                  name: v.value,
                  size: h.$props.size,
                  color: u.value,
                },
                null,
                8,
                ['name', 'size', 'color'],
              ),
            ]),
          ],
          40,
          YE,
        )
      )
    },
  }),
  py = re({
    name: 'VaRatingItemNumberButton',
    __name: 'VaRatingItemNumberButton',
    props: { ...dy, ...dr, itemNumber: { type: Number, required: !0 }, modelValue: { type: Number, required: !0 } },
    setup(e) {
      const t = e,
        { textColorComputed: n, backgroundComputed: o } = my(t),
        { sizeComputed: r, fontSizeComputed: a, fontSizeInRem: l } = mr(t, 'VaRating')
      return (s, i) => (
        C(),
        A(
          'button',
          {
            class: 'va-rating__number-item',
            tabindex: '-1',
            'aria-hidden': 'true',
            style: me({
              background: f(o),
              color: f(n),
              width: f(r),
              height: f(r),
              fontSize: f(a),
              borderRadius: `${parseInt(f(a)) * 0.125}rem`,
            }),
          },
          Ae(e.itemNumber),
          5,
        )
      )
    },
  }),
  XE = ['aria-label'],
  Cf = Qe(fy, ['modelValue', 'itemNumber']),
  Sf = Qe(py, ['modelValue', 'itemNumber']),
  JE = re({
    name: 'VaRating',
    __name: 'VaRating',
    props: {
      ...Sf,
      ...KE,
      ...dy,
      ...Ro,
      ...Cf,
      ...Le,
      modelValue: { type: Number, default: 0 },
      numbers: { type: Boolean, default: !1 },
      halves: { type: Boolean, default: !1 },
      max: { type: [Number, String], default: 5 },
      texts: { type: Array, default: () => [] },
      ariaLabel: Be('$t:currentRating'),
      ariaItemLabel: Be('$t:voteRating'),
    },
    emits: ['update:modelValue'],
    setup(e, { emit: t }) {
      const n = e,
        { computedClasses: o } = Bh('va-rating', n),
        {
          visibleValue: r,
          modelValue: a,
          hoveredValue: l,
          isHovered: s,
          onMouseEnter: i,
          onMouseLeave: u,
          onItemValueUpdate: c,
          onItemHoveredValueUpdate: d,
          getItemValue: m,
        } = qE(n),
        v = p(() => !n.disabled && !n.readonly),
        g = (z) => {
          const V = Number(n.max),
            T = n.halves ? At.HALF : At.FULL,
            B = r.value + T * z,
            K = n.clearable ? 0 : T
          B >= K && B <= V ? c(r.value, T * z) : B < K ? c(K, 0) : c(V, z === -1 ? T * z : 0)
        },
        { tp: h, t: _ } = ut(),
        { computedColor: y, backgroundComputed: b, textColorComputed: w } = my(n),
        S = p(() => (v.value ? 0 : void 0)),
        $ = it(Cf),
        k = it(Sf)
      return (z, V) => (
        C(),
        A(
          'div',
          {
            class: Pe(['va-rating', f(o)]),
            'aria-label': f(h)(z.$props.ariaLabel, { max: z.$props.max, value: z.$props.modelValue }),
          },
          [
            Y(
              'div',
              {
                class: 'va-rating__item-wrapper',
                onKeyup: [V[0] || (V[0] = $e((T) => g(-1), ['left'])), V[1] || (V[1] = $e((T) => g(1), ['right']))],
                onMouseenter: V[2] || (V[2] = (...T) => f(i) && f(i)(...T)),
                onMouseleave: V[3] || (V[3] = (...T) => f(u) && f(u)(...T)),
              },
              [
                (C(!0),
                A(
                  Te,
                  null,
                  Ue(
                    Number(z.$props.max),
                    (T) => (
                      C(),
                      ee(
                        fy,
                        le({ key: T, class: 'va-rating__item' }, f($), {
                          'aria-label': f(h)(z.$props.ariaItemLabel, { max: z.$props.max, value: T }),
                          'model-value': f(m)(T - 1),
                          tabindex: S.value,
                          disabled: z.$props.disabled,
                          readonly: z.$props.readonly,
                          onHover: (B) => v.value && f(d)(T - 1, B),
                          'onUpdate:modelValue': (B) => v.value && f(c)(T - 1, B),
                        }),
                        {
                          default: G(({ value: B, onClick: K }) => [
                            L(z.$slots, 'item', pe(ke({ value: B, onClick: K, index: T })), () => [
                              z.$props.numbers
                                ? (C(),
                                  ee(py, le({ key: 0 }, f(k), { 'model-value': B, 'item-number': T }), null, 16, [
                                    'model-value',
                                    'item-number',
                                  ]))
                                : W('', !0),
                            ]),
                          ]),
                          _: 2,
                        },
                        1040,
                        [
                          'aria-label',
                          'model-value',
                          'tabindex',
                          'disabled',
                          'readonly',
                          'onHover',
                          'onUpdate:modelValue',
                        ],
                      )
                    ),
                  ),
                  128,
                )),
              ],
              32,
            ),
            z.$props.texts && z.$props.texts.length === z.$props.max
              ? (C(),
                A(
                  'span',
                  { key: 0, class: 'va-rating__text-wrapper', style: me({ color: f(y) }) },
                  Ae(z.$props.texts[Math.round(f(r)) - 1]),
                  5,
                ))
              : W('', !0),
          ],
          10,
          XE,
        )
      )
    },
  }),
  QE = ye(JE),
  ZE = (e) => e.offsetTop,
  eI = (e) => e.offsetTop + e.offsetHeight,
  tI = (e) => e.offsetTop + e.offsetHeight / 2,
  nI = (e, t, n) => {
    const o = t.offsetHeight,
      r = t.scrollTop,
      a = ZE(e) - t.offsetTop,
      l = tI(e) - t.offsetTop,
      s = eI(e) - t.offsetTop
    if (n === 'start') return a
    if (n === 'end') return s - o
    if (n === 'center') return l - o / 2
    if (n === 'any') {
      if (a - r < 0) return a
      if (s - r > o) return s - o
    }
  },
  oI = (e, t = { scrollTarget: e.parentElement, verticalAlignment: 'any', smooth: !1 }) => {
    const n = t.scrollTarget || e.parentElement,
      o = nI(e, n, t.verticalAlignment)
    o !== void 0 && n.scroll({ top: o, behavior: t.smooth ? 'smooth' : 'auto' })
  },
  rI = ['aria-selected'],
  aI = { key: 1, class: 'va-select-option__highlighted' },
  lI = re({
    name: 'VaSelectOption',
    __name: 'VaSelectOption',
    props: {
      ...lc,
      disabled: { type: Boolean, default: !1 },
      option: { type: [Number, String, Boolean, Object], default: () => ({}) },
      getText: { type: Function, required: !0 },
      getTrackBy: { type: Function, required: !0 },
      currentOption: { type: [String, Number, Boolean, Object], default: null },
      getSelectedState: { type: Function, required: !0 },
      search: { type: String, default: '' },
      highlightMatchedText: { type: Boolean, default: !0 },
      inputFocused: { type: Boolean, default: !1 },
      minSearchChars: { type: [Number, String], default: 0 },
    },
    setup(e, { expose: t }) {
      const n = e,
        { getColor: o, getHoverColor: r } = Re(),
        a = We('minSearchChars'),
        l = p(() => (Qo(n.option) ? n.option.icon : void 0)),
        s = p(() => o(n.color)),
        i = p(() => n.getText(n.option)),
        u = p(() => {
          const g = { start: i.value, searchedSubString: '', end: '' }
          if (!i.value || !n.search || !n.highlightMatchedText || n.search.length < a.value) return g
          const h = i.value.toLowerCase().indexOf(n.search.toLowerCase())
          if (h < 0) return g
          const _ = i.value.slice(0, h),
            y = i.value.slice(h, h + n.search.length),
            b = i.value.slice(h + n.search.length)
          return { start: _, searchedSubString: y, end: b }
        }),
        c = p(() => n.getSelectedState(n.option)),
        d = p(() =>
          typeof n.option == 'string'
            ? n.option === n.currentOption
            : n.getTrackBy(n.currentOption) === n.getTrackBy(n.option),
        ),
        m = rt('va-select-option', () => ({ selected: c.value })),
        v = p(() => ({
          color: c.value ? o(n.color) : 'inherit',
          backgroundColor: d.value ? r(o(n.color)) : 'transparent',
          cursor: n.disabled ? 'default' : void 0,
          opacity: n.disabled ? 'var(--va-select-option-list-option-disabled-opacity)' : void 0,
        }))
      return (
        t({ isFocused: d, isSelected: c }),
        (g, h) => (
          C(),
          A(
            'div',
            { role: 'option', class: Pe(['va-select-option', f(m)]), style: me(v.value), 'aria-selected': c.value },
            [
              L(g.$slots, 'option-content', {}, () => [
                l.value
                  ? (C(),
                    ee(f(Ke), { key: 0, size: 'small', class: 'va-select-option__icon', name: l.value }, null, 8, [
                      'name',
                    ]))
                  : W('', !0),
                Fe(' ' + Ae(u.value.start) + ' ', 1),
                u.value.searchedSubString ? (C(), A('span', aI, Ae(u.value.searchedSubString), 1)) : W('', !0),
                Fe(' ' + Ae(u.value.end), 1),
              ]),
              c.value
                ? (C(),
                  ee(
                    f(Ke),
                    {
                      key: 0,
                      class: 'va-select-option__selected-icon',
                      size: 'small',
                      name: 'va-check',
                      color: s.value,
                    },
                    null,
                    8,
                    ['color'],
                  ))
                : W('', !0),
            ],
            14,
            rI,
          )
        )
      )
    },
  }),
  wf = ye(lI),
  sI = () => {
    const e = je({}),
      t = (n) => (o) => {
        if (o) return (e.value[n] = o), String(n)
      }
    return (
      Ru(() => {
        e.value = {}
      }),
      { itemRefs: e, setItemRef: t }
    )
  },
  iI = ['tabindex', 'onKeydown', 'aria-multiselectable'],
  uI = { key: 0, class: 'va-select-option-list__group-name', role: 'presentation' },
  cI = { key: 0, class: 'va-select-option-list--empty' },
  dI = re({
    name: 'VaSelectOptionList',
    __name: 'VaSelectOptionList',
    props: {
      ...lc,
      ...Le,
      ...Xr,
      ...Zr,
      noOptionsText: { type: String, default: 'Items not found' },
      getSelectedState: { type: Function, required: !0 },
      multiple: { type: Boolean, default: !1 },
      search: { type: String, default: '' },
      tabindex: { type: [String, Number], default: 0 },
      hoveredOption: { type: [String, Number, Boolean, Object], default: null },
      virtualScroller: { type: Boolean, default: !0 },
      highlightMatchedText: { type: Boolean, default: !0 },
      minSearchChars: { type: [Number, String], default: 0 },
      autoSelectFirstOption: { type: Boolean, default: !1 },
      selectedTopShown: { type: Boolean, default: !1 },
      doShowAllOptions: { type: Boolean, default: !1 },
    },
    emits: ['select-option', 'update:hoveredOption', 'no-previous-option-to-hover', 'scroll-bottom'],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        a = je(),
        l = () => {
          var I
          ;(I = a.value) == null || I.focus({ preventScroll: !0 })
        },
        s = p(() => {
          var I
          return ((I = a.value) == null ? void 0 : I.clientHeight) ?? 200
        }),
        i = () => r('scroll-bottom'),
        u = (I) => {
          const M = I.target
          M && M.scrollTop + M.clientHeight === M.scrollHeight && i()
        },
        c = H(''),
        d = p(() => o.hoveredOption ?? null),
        m = (I, M) => {
          r('update:hoveredOption', I), (c.value = M)
        },
        { getText: v, getGroupBy: g, getTrackBy: h, getDisabled: _ } = Jr(o),
        y = We('minSearchChars'),
        b = p(() => {
          var I
          const M = o.getSelectedState,
            ae = (I = o.options) == null ? void 0 : I.find((se) => M(se))
          return ae ? v(ae) : ''
        }),
        w = p(() => {
          var I
          return b.value.toLowerCase() === ((I = o.search) == null ? void 0 : I.toLowerCase())
        }),
        S = p(() => {
          if ((o.doShowAllOptions && w.value) || !o.search || o.search.length < y.value) return o.options
          const I = o.search.toUpperCase().trim()
          return o.options.filter((M) => v(M).toUpperCase().includes(I))
        }),
        $ = p(() =>
          o.groupBy
            ? S.value.reduce(
                (I, M) => {
                  const ae = g(M)
                  return ae ? (I[ae] || (I[ae] = []), I[ae].push(M)) : I._noGroup.push(M), I
                },
                { _noGroup: [] },
              )
            : { _noGroup: S.value },
        ),
        k = kc($, o),
        z = (I) => !sn(I),
        V = (I) => {
          I === d.value || (z(I) && _(I)) || m(I ?? null, 'mouse')
        },
        T = (I) => {
          m(I ?? null, 'keyboard')
        },
        B = () => {
          const I = R.value && typeof R.value == 'object' ? { ...R.value } : R.value
          r('select-option'), o.selectedTopShown && V(I)
        },
        K = p(() => Object.values(k.value).flat()),
        j = p(() => (S.value.some((I) => g(I)) ? K.value : S.value)),
        U = p(() => j.value.findIndex((I) => z(d.value) && h(I) === h(d.value))),
        D = p(() => ({
          ...yt(o, ['getSelectedState', 'color', 'search', 'highlightMatchedText']),
          minSearchChars: y.value,
          getText: v,
          getTrackBy: h,
        })),
        O = (I, M = !1) => {
          const ae = [...(j.value || [])],
            se = M ? ae.reverse() : ae,
            Ee = M ? I * -1 - 1 : I
          return se.slice(Ee).find((He) => !_(He))
        },
        R = p(() => {
          const I = U.value - 1,
            M = j.value[I]
          if (z(M) && !(I === 0 && _(M))) return O(U.value - 1, !0)
        }),
        N = (I) => {
          V(I), r('select-option')
        },
        x = (I) => {
          o.selectedTopShown || V(I)
        },
        ce = (I) => {
          o.selectedTopShown && V(I)
        },
        ue = () => {
          if (!z(d.value)) {
            T(O(0, !0))
            return
          }
          z(R.value) ? T(R.value) : r('no-previous-option-to-hover')
        },
        be = () => {
          if (!z(d.value)) {
            xe()
            return
          }
          const I = U.value + 1,
            M = j.value[I]
          z(M) && !(I === j.value.length - 1 && _(M)) && T(O(U.value + 1))
        },
        xe = () => T(O(0)),
        { itemRefs: we, setItemRef: J } = sI(),
        _e = je(),
        Ce = (I) => {
          var M
          if (!z(I)) return
          const ae = St(we.value[h(I)])
          ae && oI(ae)
          const se = (M = _e.value) == null ? void 0 : M[0]
          o.virtualScroller && se.virtualScrollTo(U.value)
        }
      return (
        ge(
          () => o.hoveredOption,
          (I) => {
            ;(!c.value || c.value === 'keyboard') && z(I) && Ce(I)
          },
        ),
        ge(
          S,
          () => {
            o.autoSelectFirstOption && xe()
          },
          { immediate: !0 },
        ),
        t({ focusPreviousOption: ue, focusNextOption: be, focusFirstOption: xe, scrollToOption: Ce, focus: l }),
        (I, M) => (
          C(),
          A(
            'div',
            {
              ref_key: 'root',
              ref: a,
              class: 'va-select-option-list',
              tabindex: e.tabindex,
              onKeydown: [
                $e(Se(ue, ['stop', 'prevent']), ['up']),
                $e(Se(ue, ['stop', 'prevent']), ['left']),
                $e(Se(be, ['stop', 'prevent']), ['down']),
                $e(Se(be, ['stop', 'prevent']), ['right']),
                $e(Se(B, ['stop', 'prevent']), ['enter']),
                $e(Se(B, ['stop', 'prevent']), ['space']),
              ],
              onScrollPassive: u,
              role: 'listbox',
              'aria-multiselectable': I.$props.multiple,
            },
            [
              (C(!0),
              A(
                Te,
                null,
                Ue(
                  f(k),
                  (ae, se) => (
                    C(),
                    A(
                      Te,
                      { key: se },
                      [
                        se !== '_noGroup' ? (C(), A('span', uI, Ae(se), 1)) : W('', !0),
                        I.$props.virtualScroller
                          ? (C(),
                            ee(
                              f(Bs),
                              {
                                key: 1,
                                ref_for: !0,
                                ref_key: 'virtualScrollerRef',
                                ref: _e,
                                items: ae,
                                'track-by': f(h),
                                'wrapper-size': s.value,
                                'onScroll:bottom': i,
                              },
                              {
                                default: G(({ item: Ee, index: He }) => [
                                  L(
                                    I.$slots,
                                    'default',
                                    pe(ke({ option: Ee, index: He, selectOption: (P = Ee) => N(P) })),
                                    () => [
                                      ne(
                                        f(wf),
                                        le({ option: Ee, 'current-option': d.value, disabled: f(_)(Ee) }, D.value, {
                                          onClick: Se(B, ['stop']),
                                          onMouseenter: (P) => ce(Ee),
                                          onMousemove: (P) => x(Ee),
                                        }),
                                        null,
                                        16,
                                        ['option', 'current-option', 'disabled', 'onMouseenter', 'onMousemove'],
                                      ),
                                    ],
                                  ),
                                ]),
                                _: 2,
                              },
                              1032,
                              ['items', 'track-by', 'wrapper-size'],
                            ))
                          : (C(!0),
                            A(
                              Te,
                              { key: 2 },
                              Ue(ae, (Ee, He) =>
                                L(
                                  I.$slots,
                                  'default',
                                  pe(le({ key: f(h)(Ee) }, { option: Ee, index: He, selectOption: N })),
                                  () => [
                                    ne(
                                      f(wf),
                                      le(
                                        {
                                          ref_for: !0,
                                          ref: f(J)(f(h)(Ee)),
                                          'current-option': d.value,
                                          option: Ee,
                                          disabled: f(_)(Ee),
                                        },
                                        D.value,
                                        {
                                          onClick: Se(B, ['stop']),
                                          onMouseenter: (P) => ce(Ee),
                                          onMousemove: (P) => x(Ee),
                                        },
                                      ),
                                      {
                                        'option-content': G(() => [
                                          L(I.$slots, 'option-content', pe(ke({ option: Ee, index: He }))),
                                        ]),
                                        _: 2,
                                      },
                                      1040,
                                      ['current-option', 'option', 'disabled', 'onMouseenter', 'onMousemove'],
                                    ),
                                  ],
                                ),
                              ),
                              128,
                            )),
                      ],
                      64,
                    )
                  ),
                ),
                128,
              )),
              S.value.length ? W('', !0) : (C(), A('div', cI, Ae(e.noOptionsText), 1)),
            ],
            40,
            iI,
          )
        )
      )
    },
  }),
  mI = ye(dI),
  fI = { key: 0, class: 'va-select-content__placeholder' },
  pI = ['placeholder'],
  vI = { key: 0, class: 'va-select-content__option' },
  gI = { key: 1, class: 'va-select-content__separator' },
  hI = ['placeholder', 'disabled', 'readonly'],
  yI = re({
    name: 'VaSelectContent',
    __name: 'VaSelectContent',
    props: {
      ...Ro,
      ariaAttributes: { type: Object },
      value: { type: Array, required: !0 },
      valueString: { type: String },
      separator: { type: String, default: ', ' },
      placeholder: { type: String, default: '' },
      tabindex: { type: [String, Number], default: 0 },
      hiddenSelectedOptionsAmount: { type: [Number, String], default: 0 },
      isAllOptionsShown: { type: Boolean, default: !1 },
      autocomplete: { type: Boolean, default: !1 },
      focused: { type: Boolean, default: !1 },
      multiple: { type: Boolean, default: !1 },
      getText: { type: Function, required: !0 },
      autocompleteInputValue: { type: String, default: '' },
    },
    emits: ['toggle-hidden', 'autocomplete-input', 'focus-prev', 'focus-next', 'select-option', 'delete-last-selected'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        r = H(),
        a = p(() => n.placeholder && !n.valueString),
        l = () => o('toggle-hidden'),
        { value: s, focused: i } = Sn(n),
        u = p({ get: () => n.autocompleteInputValue, set: (h) => o('autocomplete-input', h) }),
        c = We('hiddenSelectedOptionsAmount')
      et(() => {
        n.multiple || (n.autocomplete && (u.value = n.valueString))
      }),
        ge(i, (h) => {
          var _, y
          !n.autocomplete ||
            !h ||
            (u.value
              ? (_ = r.value) == null || _.setSelectionRange(0, u.value.length)
              : (y = r.value) == null || y.focus())
        })
      const d = (h) => {
          n.multiple && s.value.length && h.key === 'Backspace' && !u.value && o('delete-last-selected')
        },
        m = (h) => {
          var _
          n.autocomplete && ((_ = r.value) == null || _.focus(), h.stopPropagation())
        },
        v = (h) => (Qo(h) ? h.icon : void 0),
        g = p(() => (n.multiple ? s.value : s.value[0]))
      return (h, _) => (
        C(),
        A('div', { class: 'va-select-content', onClick: m }, [
          a.value && !h.$props.autocomplete
            ? (C(),
              A('span', fI, [
                Y('input', le(e.ariaAttributes, { placeholder: h.$props.placeholder, readonly: '' }), null, 16, pI),
              ]))
            : n.autocomplete && !n.multiple
              ? W('', !0)
              : L(
                  h.$slots,
                  'content',
                  pe(
                    le(
                      { key: 1 },
                      {
                        value: g.value,
                        valueString: h.$props.valueString,
                        valueArray: h.$props.value,
                        tabindex: h.$props.tabindex,
                        ariaAttributes: e.ariaAttributes,
                      },
                    ),
                  ),
                  () => [
                    (C(!0),
                    A(
                      Te,
                      null,
                      Ue(
                        h.$props.value,
                        (y, b) => (
                          C(),
                          A(
                            Te,
                            { key: b },
                            [
                              y !== ''
                                ? (C(),
                                  A('span', vI, [
                                    L(
                                      h.$slots,
                                      'option-content',
                                      pe(ke({ option: y, index: b, selectOption: () => {} })),
                                      () => [
                                        v(y)
                                          ? (C(),
                                            ee(
                                              f(Ke),
                                              { key: 0, size: 'small', class: 'va-select-option__icon', name: v(y) },
                                              null,
                                              8,
                                              ['name'],
                                            ))
                                          : W('', !0),
                                        Fe(' ' + Ae(e.getText(y)), 1),
                                      ],
                                    ),
                                  ]))
                                : W('', !0),
                              b < h.$props.value.length - 1
                                ? (C(), A('span', gI, Ae(h.$props.separator), 1))
                                : W('', !0),
                            ],
                            64,
                          )
                        ),
                      ),
                      128,
                    )),
                  ],
                ),
          h.$props.autocomplete
            ? Pn(
                (C(),
                A(
                  'input',
                  le({ key: 2 }, e.ariaAttributes, {
                    'onUpdate:modelValue': _[0] || (_[0] = (y) => (u.value = y)),
                    class: 'va-select-content__autocomplete',
                    ref_key: 'autocompleteInput',
                    ref: r,
                    autocomplete: 'off',
                    'aria-autocomplete': 'list',
                    placeholder: h.$props.placeholder,
                    disabled: h.$props.disabled,
                    readonly: h.$props.readonly,
                    onKeydown: [
                      _[1] ||
                        (_[1] = $e(
                          Se((y) => h.$emit('focus-prev'), ['stop', 'prevent']),
                          ['up'],
                        )),
                      _[2] ||
                        (_[2] = $e(
                          Se((y) => h.$emit('focus-next'), ['stop', 'prevent']),
                          ['down'],
                        )),
                      _[3] ||
                        (_[3] = $e(
                          Se((y) => h.$emit('select-option'), ['stop', 'prevent']),
                          ['enter'],
                        )),
                      d,
                    ],
                  }),
                  null,
                  16,
                  hI,
                )),
                [[bs, u.value]],
              )
            : W('', !0),
          L(
            h.$slots,
            'hiddenOptionsBadge',
            pe(ke({ amount: e.hiddenSelectedOptionsAmount, isShown: h.$props.isAllOptionsShown, toggle: l })),
            () => [
              f(c) && !h.$props.isAllOptionsShown
                ? (C(),
                  ee(
                    f(yh),
                    {
                      key: 0,
                      class: 'va-select-content__state-icon',
                      color: 'info',
                      text: `+${f(c)}`,
                      tabindex: h.$props.tabindex,
                      onClick: Se(l, ['stop']),
                    },
                    null,
                    8,
                    ['text', 'tabindex'],
                  ))
                : W('', !0),
            ],
          ),
          L(h.$slots, 'hideOptionsButton', pe(ke({ isShown: h.$props.isAllOptionsShown, toggle: l })), () => [
            h.$props.isAllOptionsShown
              ? (C(),
                ee(
                  f(Ke),
                  {
                    key: 0,
                    role: 'button',
                    class: 'va-select-content__state-icon',
                    size: 'small',
                    name: 'reply',
                    tabindex: h.$props.tabindex,
                    onClick: Se(l, ['stop']),
                  },
                  null,
                  8,
                  ['tabindex'],
                ))
              : W('', !0),
          ]),
        ])
      )
    },
  }),
  _I = ye(yI),
  bI = { maxVisibleOptions: { type: Number || String, default: 0 } },
  zI = (e, t) => {
    const n = Ut(e, 'modelValue'),
      o = H(!1),
      r = H([]),
      a = H([]),
      l = p(() => a.value.length),
      s = p(() => [...r.value, ...a.value]),
      i = p(() => (!e.maxVisibleOptions || o.value ? s.value : r.value))
    return (
      ge(
        n,
        () => {
          if (!Array.isArray(n.value)) {
            ;(r.value = [t(n.value)]), (a.value = [])
            return
          }
          const c = n.value.filter((d) => !sn(d)).map(t)
          e.maxVisibleOptions
            ? ((r.value = c.slice(0, e.maxVisibleOptions)), (a.value = c.slice(e.maxVisibleOptions)))
            : ((r.value = [...c]), (a.value = []))
        },
        { immediate: !0 },
      ),
      {
        toggleHiddenOptionsState: () => (o.value = !o.value),
        isAllOptionsShown: o,
        visibleSelectedOptions: i,
        hiddenSelectedOptionsAmount: l,
        allSelectedOptions: s,
      }
    )
  },
  CI = {
    dropdownIcon: {
      type: [String, Object],
      default: () => ({ open: 'va-arrow-down', close: 'va-arrow-up' }),
      validator: (e) =>
        typeof e == 'string'
          ? !0
          : Object.entries(e).every(([t, n]) => ['open', 'close'].includes(t) && typeof n == 'string'),
    },
  },
  SI = (e, t) => {
    const n = p(() =>
        e.dropdownIcon
          ? typeof e.dropdownIcon == 'string'
            ? e.dropdownIcon
            : t.value
              ? e.dropdownIcon.close
              : e.dropdownIcon.open
          : '',
      ),
      { getHoverColor: o, getColor: r } = Re(),
      a = p(() => r('secondary')),
      l = p(() => (e.readonly ? o(a.value) : a.value))
    return { toggleIcon: n, toggleIconColor: l }
  },
  wI = { separator: { type: String, default: ', ' } },
  $I = (e, t, n) =>
    p(() => {
      var o
      return (o = t.value) != null && o.length ? t.value.map(n).join(e.separator) ?? '' : ''
    }),
  kI = { autocomplete: { type: Boolean, default: !1 } },
  TI = (e, t, n, o, r) => {
    const a = (s) => (s != null && s.length ? r(s.at(-1)) : '')
    t.autocomplete && !t.multiple && (e.value = a(n.value)),
      ge(n, (s, i) => {
        if (!t.autocomplete) return
        const u = a(s),
          c = a(i)
        u !== c && ((e.value = t.multiple ? '' : u), t.multiple || (o.value = !1))
      }),
      ge(e, (s) => {
        t.autocomplete && s && s !== a(n.value) && (o.value = !0)
      })
    const l = () => {
      e.value = t.multiple ? '' : a(n.value)
    }
    return (
      ge(o, (s, i) => {
        t.autocomplete && (!s || i) && l()
      }),
      e
    )
  },
  VI = () => ({ popupId: `combobox-controls-${Fn()}` }),
  PI = { maxSelections: { type: [Number, String], default: void 0 } }
function AI(e, t) {
  return {
    exceedsMaxSelections: () => (t.value === void 0 || isNaN(+t.value) ? !1 : e.value.length >= Number(t.value)),
    addOption: (r) => [...e.value, r],
  }
}
const $f = Qe(un),
  EI = re({
    name: 'VaSelect',
    __name: 'VaSelect',
    props: {
      ...$f,
      ...Le,
      ...Xr,
      ...ro,
      ...Ja,
      ...PI,
      ...rl,
      ...Ro,
      ...bI,
      ...CI,
      ...Zr,
      ...wI,
      ...kI,
      ...$n,
      modelValue: { type: [String, Number, Array, Object, Boolean], default: void 0 },
      placement: { ...$n.placement, default: 'bottom' },
      keepAnchorWidth: { ...$n.keepAnchorWidth, default: !0 },
      offset: { ...$n.offset, default: [1, 0] },
      closeOnContentClick: { ...$n.closeOnContentClick, default: !1 },
      trigger: { ...$n.trigger, default: () => ['click', 'right-click', 'space', 'enter'] },
      allowCreate: { type: [Boolean, String], default: !1, validator: (e) => [!0, !1, 'unique'].includes(e) },
      color: { type: String, default: 'primary' },
      multiple: { type: Boolean, default: !1 },
      searchable: { type: Boolean, default: !1 },
      width: { type: String, default: '100%' },
      maxHeight: { type: String, default: '256px' },
      noOptionsText: Be('$t:noOptions'),
      hideSelected: { type: Boolean, default: !1 },
      tabindex: { type: [String, Number], default: 0 },
      virtualScroller: { type: Boolean, default: !1 },
      selectedTopShown: { type: Boolean, default: !1 },
      highlightMatchedText: { type: Boolean, default: !0 },
      minSearchChars: { type: [Number, String], default: 0 },
      autoSelectFirstOption: { type: Boolean, default: !1 },
      placeholder: { type: String, default: '' },
      searchPlaceholderText: Be('$t:search'),
      ariaLabel: Be('$t:select'),
      ariaSearchLabel: Be('$t:optionsFilter'),
      ariaClearLabel: Be('$t:reset'),
      search: { type: String, default: void 0 },
      clearValue: { type: [String, Number, Array, Object, Boolean], default: '' },
    },
    emits: ['update:modelValue', 'update-search', 'create-new', 'scroll-bottom', 'update:search', ...Ac, ...Bo, ...Os],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        { tp: a, t: l } = ut(),
        s = je(),
        i = je(),
        u = je(),
        c = wc(i),
        { getValue: d, getText: m, getTrackBy: v, tryResolveByValue: g } = Jr(o),
        h = (ze) => m(g(ze)),
        _ = () => r('scroll-bottom'),
        [y] = rr('search', o, r, ''),
        b = p(() => o.searchable || (o.allowCreate && !o.autocomplete))
      ge(y, (ze) => {
        r('update-search', ze), o.autocomplete || (we.value = null)
      })
      const w = (ze) => {
          if (sn(ze) || typeof ze == 'object') return ze
          const mt = o.options.find((lt) => ze === d(lt))
          return mt === void 0
            ? (ot(
                `[VaSelect]: can not find option in options list (${JSON.stringify(
                  o.options,
                )}) by provided value (${JSON.stringify(ze)})!`,
              ),
              ze)
            : mt
        },
        {
          toggleHiddenOptionsState: S,
          isAllOptionsShown: $,
          visibleSelectedOptions: k,
          hiddenSelectedOptionsAmount: z,
          allSelectedOptions: V,
        } = zI(o, w),
        T = p({
          get() {
            if (o.multiple) return V.value
            const ze = w(o.modelValue)
            return Array.isArray(ze) &&
              (ot('Model value should be a string, number, boolean or an object for a single Select.'), ze.length)
              ? ze.at(-1)
              : ze
          },
          set(ze) {
            Array.isArray(ze) ? r('update:modelValue', ze.map(d)) : r('update:modelValue', d(ze))
          },
        }),
        B = $I(o, k, h),
        { canBeCleared: K, clearIconProps: j, onFocus: U, onBlur: D } = Ls(o, T),
        O = p(() => (K.value ? (o.multiple && Array.isArray(T.value) ? !!T.value.length : !0) : !1)),
        R = p(() =>
          o.options
            ? o.selectedTopShown
              ? o.options.slice().sort((ze, mt) => {
                  const lt = x(ze),
                    $t = x(mt)
                  return lt && $t ? 0 : lt && !$t ? -1 : 1
                })
              : o.hideSelected
                ? o.options.filter((ze) => !x(ze))
                : o.options
            : [],
        ),
        N = p(() => (Array.isArray(T.value) ? T.value.map((ze) => g(ze)) : g(T.value))),
        x = (ze) => (Array.isArray(N.value) ? !sn(N.value.find((mt) => ce(mt, ze))) : ce(N.value, ze)),
        ce = (ze, mt) => {
          const lt = d(ze),
            $t = d(mt)
          return lt === $t
            ? !0
            : typeof lt == 'string' && typeof $t == 'string'
              ? lt === $t
              : lt === null || $t === null
                ? !1
                : typeof lt == 'object' && typeof $t == 'object'
                  ? v(lt) === v($t)
                  : !1
        },
        ue = (ze) => Array.isArray(ze.value),
        be = (ze) => {
          if (we.value === null) {
            E()
            return
          }
          if ((b.value && (y.value = ''), o.multiple && ue(T))) {
            const { exceedsMaxSelections: mt, addOption: lt } = AI(T, H(o.maxSelections))
            if (x(ze)) T.value = T.value.filter((uo) => !ce(ze, uo))
            else {
              if (mt()) return
              T.value = lt(ze)
            }
          } else (T.value = ze), E()
          Ws()
        },
        xe = () => {
          var ze
          const mt = (ze = o.options) == null ? void 0 : ze.some(($t) => [y.value, _t.value].includes(m($t)))
          !((o.allowCreate === 'unique' || o.autocomplete) && mt) &&
            (r('create-new', y.value || _t.value), (y.value = ''), (_t.value = ''))
        },
        we = H(null),
        J = () => {
          if (!M.value) {
            He()
            return
          }
          be(we.value)
        },
        _e = () => {
          const ze = !!o.allowCreate && (y.value || _t.value)
          we.value !== null ? J() : ze && xe()
        },
        Ce = () => {
          var ze
          return (ze = s.value) == null ? void 0 : ze.focusPreviousOption()
        },
        I = () => {
          var ze
          return (ze = s.value) == null ? void 0 : ze.focusNextOption()
        },
        { isOpenSync: M, dropdownProps: ae } = Ec(o, r, { defaultCloseOnValueUpdate: p(() => !o.multiple) }),
        se = p(() => ({ ...ae.value, stateful: !1, innerAnchorSelector: '.va-input-wrapper__field' })),
        Ee = p({
          get: () => M.value,
          set: (ze) => {
            ze ? He() : P()
          },
        }),
        He = () => {
          o.disabled || o.readonly || ((M.value = !0), he(), q())
        },
        P = () => {
          ;(M.value = !1),
            o.autocomplete || (y.value = ''),
            dt(() => {
              Rc(), c.focusIfNothingIfFocused()
            })
        },
        E = () => {
          P(), (c.value = !0)
        },
        X = () => {
          var ze
          ;(ze = u.value) == null || ze.focus()
        },
        te = () => {
          var ze, mt
          ;(ze = s.value) == null || ze.focus(), !o.modelValue && ((mt = s.value) == null || mt.focusFirstOption())
        },
        q = async () => {
          await dt(), b.value ? X() : te()
        },
        Q = () => {
          Ee.value || (D(), Ky.onBlur(), c.value ? (c.value = !1) : Rc())
        },
        ie = p(() => (o.disabled ? -1 : o.tabindex)),
        ve = p(() => (o.disabled || o.autocomplete ? -1 : 0)),
        he = () => {
          const ze = T.value
          if (typeof ze != 'object' && Array.isArray(ze) && !ze.length) return
          const lt = Array.isArray(ze) ? ze[ze.length - 1] : ze
          ;(we.value = lt),
            dt(() => {
              var $t
              return ($t = s.value) == null ? void 0 : $t.scrollToOption(lt)
            })
        }
      let fe = '',
        Ie
      const F = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Enter', ' '],
        Z = (ze) => {
          if (F.some(($t) => $t === ze.key)) return
          const mt = ze.key.length === 1,
            lt = ze.key === 'Backspace' || ze.key === 'Delete'
          if ((clearTimeout(Ie), lt ? (fe = fe ? fe.slice(0, -1) : '') : mt && (fe += ze.key), b.value)) {
            y.value = fe
            return
          }
          if (fe) {
            const $t = o.options.find((uo) => m(uo).toLowerCase().startsWith(fe.toLowerCase()))
            $t && (we.value = $t)
          }
          Ie = setTimeout(() => {
            fe = ''
          }, 1e3)
        },
        Ve = We('minSearchChars'),
        De = p(() => ({
          ...yt(o, [
            'textBy',
            'trackBy',
            'groupBy',
            'valueBy',
            'disabledBy',
            'color',
            'virtualScroller',
            'highlightMatchedText',
            'delay',
            'selectedTopShown',
          ]),
          autoSelectFirstOption: o.autoSelectFirstOption || o.autocomplete,
          search: y.value || _t.value,
          tabindex: ie.value,
          selectedValue: T.value,
          options: R.value,
          getSelectedState: x,
          noOptionsText: a(o.noOptionsText),
          doShowAllOptions: en.value,
          minSearchChars: Ve.value,
        })),
        { toggleIcon: qe, toggleIconColor: Ye } = SI(o, M),
        oe = p(() => c.value || M.value),
        de = Zt(),
        Oe = rt('va-select-anchor', () => ({ nowrap: !!(o.maxVisibleOptions && !de.content) })),
        Ne = it($f),
        pt = p(() => ({
          ...Ne.value,
          error: Hy.value,
          errorMessages: Uy.value,
          focused: oe.value,
          'aria-label':
            o.ariaLabel || (o.modelValue ? `${l('selectedOption')}: ${o.modelValue}` : l('noSelectedOption')),
        })),
        Yt = p(() => ({
          ...yt(o, ['placeholder', 'autocomplete', 'multiple', 'disabled', 'readonly']),
          tabindex: ie.value,
          value: k.value,
          valueString: B.value,
          hiddenSelectedOptionsAmount: z.value,
          isAllOptionsShown: $.value,
          focused: c.value,
          autocompleteInputValue: _t.value,
          getText: h,
        })),
        _t = TI(y, o, k, M, m),
        Nt = (ze) => (_t.value = ze),
        en = H(!0)
      ge(Ee, () => {
        en.value = !0
      }),
        ge(y, () => {
          en.value = !1
        })
      const il = () => {
          o.disabled || Bn(St(i.value))
        },
        ul = () => {
          Ee.value && (Ee.value = !1),
            dt(() => {
              o.disabled || Ts(St(i.value))
            })
        },
        io = () =>
          Wy(() => {
            o.multiple ? (T.value = Array.isArray(o.clearValue) ? o.clearValue : []) : (T.value = o.clearValue),
              (y.value = ''),
              r('clear'),
              Gy(),
              dt(() => {
                c.value = !0
              })
          }),
        Ws = (ze) => {
          o.autocomplete && !o.disabled && !o.readonly && ((c.value = !0), (M.value = !0))
        },
        Ft = (ze) => {
          if (o.disabled || o.readonly) return
          const mt = ze.target && 'tagName' in ze.target && ze.target.tagName === 'INPUT'
          ;(ze.code === 'Space' && mt) || (ze.preventDefault(), (Ee.value = !Ee.value))
        },
        jy = () => {
          Array.isArray(T.value) && (T.value = T.value.slice(0, -1))
        },
        {
          validate: Rc,
          computedError: Hy,
          computedErrorMessages: Uy,
          withoutValidation: Wy,
          resetValidation: Gy,
          validationAriaAttributes: gN,
          listeners: Ky,
          isTouched: qy,
        } = ao(o, r, { reset: io, focus: il, value: T })
      ge(M, (ze) => {
        ze || (qy.value = !0)
      })
      const { popupId: Gs } = VI(),
        Ks = y,
        Yy = U
      return (
        t({ focus: il, blur: ul, reset: io }),
        (ze, mt) => (
          C(),
          ee(
            f(pn),
            le(
              {
                ref: 'dropdown',
                modelValue: Ee.value,
                'onUpdate:modelValue': mt[4] || (mt[4] = (lt) => (Ee.value = lt)),
                class: 'va-select va-select__dropdown va-select-dropdown',
              },
              se.value,
              { role: 'combobox', 'inner-anchor-selector': '.va-input-wrapper__field', 'keyboard-navigation': !1 },
            ),
            {
              anchor: G(() => [
                ne(
                  f(un),
                  le(pt.value, {
                    ref_key: 'input',
                    ref: i,
                    class: ['va-select__anchor va-select-anchor__input', f(Oe)],
                    'aria-haspopup': 'listbox',
                    'model-value': f(B),
                    readonly: !0,
                    'aria-label': ze.$props.ariaLabel,
                    'aria-controls': f(Gs),
                    'aria-owns': f(Gs),
                    onFocus: f(Yy),
                    onBlur: Q,
                  }),
                  Ht(
                    {
                      icon: G(() => [
                        O.value
                          ? (C(),
                            ee(
                              f(Ke),
                              le({ key: 0, role: 'button', 'aria-label': f(a)(ze.$props.ariaClearLabel) }, f(j), {
                                onClick: Se(io, ['stop']),
                                onKeydown: [$e(Se(io, ['stop']), ['enter']), $e(Se(io, ['stop']), ['space'])],
                              }),
                              null,
                              16,
                              ['aria-label', 'onKeydown'],
                            ))
                          : W('', !0),
                      ]),
                      appendInner: G(() => [
                        ne(
                          f(Ke),
                          {
                            color: f(Ye),
                            name: f(qe),
                            class: 'va-select__toggle-icon',
                            role: 'button',
                            tabindex: ve.value,
                            'aria-expanded': Ee.value,
                            onKeydown: $e(Ft, ['enter']),
                          },
                          null,
                          8,
                          ['color', 'name', 'tabindex', 'aria-expanded'],
                        ),
                      ]),
                      default: G(({ ariaAttributes: lt }) => [
                        ne(
                          f(_I),
                          le(Yt.value, {
                            ariaAttributes: lt,
                            separator: ze.$props.separator,
                            onToggleHidden: f(S),
                            onAutocompleteInput: Nt,
                            onFocusPrev: Ce,
                            onFocusNext: I,
                            onSelectOption: _e,
                            onDeleteLastSelected: jy,
                          }),
                          Ht({ _: 2 }, [
                            Ue(ze.$slots, ($t, uo) => ({ name: uo, fn: G((Xy) => [L(ze.$slots, uo, pe(ke(Xy)))]) })),
                          ]),
                          1040,
                          ['ariaAttributes', 'separator', 'onToggleHidden'],
                        ),
                      ]),
                      _: 2,
                    },
                    [Ue(ze.$slots, (lt, $t) => ({ name: $t, fn: G((uo) => [L(ze.$slots, $t, pe(ke(uo)))]) }))],
                  ),
                  1040,
                  ['class', 'model-value', 'aria-label', 'aria-controls', 'aria-owns', 'onFocus'],
                ),
              ]),
              default: G(() => [
                ne(
                  f(ir),
                  {
                    class: 'va-select-dropdown__content',
                    style: me({ width: ze.$props.width }),
                    onKeydown: $e(E, ['esc']),
                    role: 'dialog',
                  },
                  {
                    default: G(() => [
                      b.value
                        ? (C(),
                          ee(
                            f(un),
                            {
                              key: 0,
                              ref_key: 'searchBar',
                              ref: u,
                              class: 'va-select-dropdown__content-search-input',
                              modelValue: f(Ks),
                              'onUpdate:modelValue': mt[0] || (mt[0] = (lt) => (nt(Ks) ? (Ks.value = lt) : null)),
                              'aria-label': f(a)(ze.$props.ariaSearchLabel),
                              tabindex: ie.value,
                              placeholder: f(a)(ze.$props.searchPlaceholderText),
                              preset: 'bordered',
                              onKeydown: [
                                $e(Se(Ce, ['stop', 'prevent']), ['up']),
                                $e(Se(Ce, ['stop', 'prevent']), ['left']),
                                $e(Se(I, ['stop', 'prevent']), ['down']),
                                $e(Se(I, ['stop', 'prevent']), ['right']),
                                $e(Se(_e, ['prevent']), ['enter']),
                              ],
                              onFocus: mt[1] || (mt[1] = (lt) => (we.value = null)),
                            },
                            null,
                            8,
                            ['modelValue', 'aria-label', 'tabindex', 'placeholder', 'onKeydown'],
                          ))
                        : W('', !0),
                      ne(
                        f(mI),
                        le(
                          {
                            ref_key: 'optionList',
                            ref: s,
                            class: 'va-select-dropdown__options-wrapper',
                            hoveredOption: we.value,
                            'onUpdate:hoveredOption': mt[2] || (mt[2] = (lt) => (we.value = lt)),
                            style: { maxHeight: ze.$props.maxHeight },
                            id: f(Gs),
                          },
                          De.value,
                          {
                            onSelectOption: J,
                            onNoPreviousOptionToHover: X,
                            onKeydown: [
                              mt[3] ||
                                (mt[3] = $e(
                                  Se((lt) => u.value && u.value.focus(), ['stop', 'prevent']),
                                  ['tab'],
                                )),
                              Z,
                            ],
                            onScrollBottom: _,
                          },
                        ),
                        {
                          default: G((lt) => [L(ze.$slots, 'option', pe(ke(lt)))]),
                          'option-content': G((lt) => [L(ze.$slots, 'option-content', pe(ke(lt)))]),
                          _: 3,
                        },
                        16,
                        ['hoveredOption', 'style', 'id'],
                      ),
                    ]),
                    _: 3,
                  },
                  8,
                  ['style'],
                ),
              ]),
              _: 3,
            },
            16,
            ['modelValue'],
          )
        )
      )
    },
  }),
  II = ye(EI),
  xI = { key: 0, class: 'va-skeleton__wave' },
  OI = re({
    name: 'VaSkeleton',
    __name: 'VaSkeleton',
    props: {
      color: { type: String, default: 'backgroundElement' },
      delay: { type: [Number, String], default: 100 },
      tag: { type: String, default: 'div' },
      animation: { type: String, default: 'pulse' },
      lines: { type: [String, Number], default: 1 },
      height: { type: [String], default: '5em' },
      width: { type: [String], default: '100%' },
      lineGap: { type: String, default: '8px' },
      lastLineWidth: { type: [String], default: '75%' },
      variant: { type: String, default: 'squared' },
      ariaLabel: Be('$t:loading'),
    },
    setup(e) {
      const t = e,
        n = H(!1),
        o = We('delay')
      let r
      et(() => {
        clearTimeout(r),
          setTimeout(() => {
            n.value = !0
          }, o.value)
      }),
        wt(() => {
          clearTimeout(r)
        })
      const a = p(() => (t.variant === 'text' ? `${t.lines}em` : t.height)),
        l = p(() => (t.variant === 'circle' ? a.value : t.width)),
        { getColor: s } = Re(),
        i = p(() => s(t.color))
      p(() => `-${t.lineGap}`)
      const u = rt('va-skeleton', () => ({
          lines: Number(t.lines) > 1,
          text: t.variant === 'text',
          circle: t.variant === 'circle',
          hidden: !n.value,
          pulse: t.animation === 'pulse',
          wave: t.animation === 'wave',
        })),
        c = p(() =>
          t.variant === 'circle'
            ? '50%'
            : t.variant === 'rounded'
              ? `var(--va-skeleton-border-radius, calc(${a.value} / 5))`
              : '0px',
        ),
        { tp: d } = ut(),
        m = Io(),
        v = p(() => [...Object.keys(u), m.class])
      return (g, h) => (
        C(),
        ee(
          an(e.tag),
          {
            class: Pe(['va-skeleton', v.value]),
            role: 'status',
            'aria-live': 'polite',
            'aria-label': f(d)(g.$props.ariaLabel),
            'aria-atomic': 'true',
            style: me(
              `--va-color-computed: ${String(i.value)};--va-height-computed: ${String(
                a.value,
              )};--va-width-computed: ${String(l.value)};--va-border-radius: ${String(c.value)};--va-line-gap: ${String(
                e.lineGap,
              )};--va-last-line-width: ${String(e.lastLineWidth)}`,
            ),
          },
          {
            default: G(() => [L(g.$slots, 'default'), e.animation === 'wave' ? (C(), A('div', xI)) : W('', !0)]),
            _: 3,
          },
          8,
          ['aria-label', 'class', 'style'],
        )
      )
    },
  }),
  LI = re({
    name: 'VaSkeletonGroup',
    __name: 'VaSkeletonGroup',
    props: {
      color: { type: String, default: 'backgroundElement' },
      delay: { type: [Number, String], default: 100 },
      animation: { type: String, default: 'pulse' },
      lines: { type: [Number, String], default: 1 },
      lineGap: { type: String, default: '8px' },
      lastLineWidth: { type: [String], default: '75%' },
    },
    setup(e) {
      const t = e,
        n = H(!1),
        o = We('delay')
      let r
      et(() => {
        r = setTimeout(() => {
          n.value = !0
        }, o.value)
      }),
        Nu(() => {
          clearTimeout(r)
        })
      const a = rt('va-skeleton-group', () => ({ hidden: n.value === !1 })),
        l = p(() => ({ ...t, delay: 0 }))
      return (s, i) => (
        C(),
        ee(
          f(Ya),
          { components: { VaSkeleton: l.value } },
          {
            default: G(() => [
              Y(
                'div',
                le({ class: ['va-skeleton-group', f(a)] }, s.$attrs),
                [L(s.$slots, 'default', {}, void 0, !0)],
                16,
              ),
            ]),
            _: 3,
          },
          8,
          ['components'],
        )
      )
    },
  }),
  BI = yr(LI, [['__scopeId', 'data-v-597bab9a']]),
  NI = ye(OI),
  RI = ye(BI),
  vy = Symbol('VaSidebar'),
  DI = (e) => {
    ln(vy, e)
  },
  MI = () => kt(vy, { color: 'background-element' }),
  gy = (e) => {
    const t = H(null)
    return (
      ar([e], () => {
        var n
        t.value = ((n = e.value) == null ? void 0 : n.clientWidth) ?? null
      }),
      vn(() => {
        var n
        t.value = ((n = e.value) == null ? void 0 : n.clientWidth) ?? null
      }),
      t
    )
  },
  FI = re({
    name: 'VaSidebar',
    __name: 'VaSidebar',
    props: {
      ...Le,
      activeColor: { type: String, default: 'primary' },
      hoverColor: { type: String, default: void 0 },
      hoverOpacity: { type: [Number, String], default: 0.2, validator: (e) => Number(e) >= 0 && Number(e) <= 1 },
      borderColor: { type: String, default: void 0 },
      color: { type: String, default: 'background-element' },
      textColor: { type: String },
      gradient: { type: Boolean, default: !1 },
      minimized: { type: Boolean, default: !1 },
      hoverable: { type: Boolean, default: !1 },
      width: { type: String, default: '16rem' },
      minimizedWidth: { type: String, default: '4rem' },
      modelValue: { type: Boolean, default: !0 },
      animated: { type: [Boolean, String], default: !0 },
      closeOnClickOutside: { type: Boolean, default: !1 },
    },
    emits: ['update:modelValue'],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        { getColor: a } = Re()
      DI(o)
      const l = H(!1),
        s = p(() => o.minimized || (o.hoverable && !l.value)),
        i = H(),
        u = gy(i),
        c = p(() => (o.modelValue === !0 || u.value === null ? !0 : u.value > 0)),
        d = H(),
        m = () => (o.modelValue ? (s.value ? o.minimizedWidth : o.width) : 0),
        v = p(() => (s.value ? o.minimizedWidth : o.width))
      vn(() => {
        const $ = m()
        setTimeout(() => {
          d.value = $
        })
      })
      const g = p(() => a(o.color)),
        { textColorComputed: h } = Vt(g),
        _ = p(() => {
          const $ = a(g.value)
          return {
            color: h.value,
            backgroundColor: $,
            backgroundImage: o.gradient ? ac($) : void 0,
            overflowX: u.value === d.value ? void 0 : 'hidden',
            width: d.value,
            minWidth: d.value,
          }
        }),
        y = rt('va-sidebar', () => ({
          minimized: s.value,
          animated: !!o.animated,
          'animated-right': o.animated === 'right',
          'animated-left': o.animated === 'left' || o.animated === !0,
        })),
        b = ($) => {
          l.value = o.hoverable && $
        },
        w = je()
      Ps([w], () => {
        o.closeOnClickOutside &&
          o.modelValue &&
          setTimeout(() => {
            r('update:modelValue', !1)
          }, 0)
      })
      const S = p(() => ({
        textColor: o.textColor,
        activeColor: o.activeColor,
        hoverColor: o.hoverColor,
        borderColor: o.borderColor,
        hoverOpacity: o.hoverOpacity,
      }))
      return (
        t({
          isMinimized: s,
          isHovered: l,
          updateHoverState: b,
          rootElement: w,
          menu: i,
          doShowMenu: c,
          menuWidth: v,
          sidebarWidth: d,
        }),
        ($, k) => (
          C(),
          A(
            'aside',
            {
              ref_key: 'rootElement',
              ref: w,
              class: Pe(['va-sidebar', f(y)]),
              style: me(_.value),
              onMouseenter: k[0] || (k[0] = (z) => b(!0)),
              onMouseleave: k[1] || (k[1] = (z) => b(!1)),
            },
            [
              Pn(
                Y(
                  'div',
                  {
                    class: 'va-sidebar__menu',
                    ref_key: 'menu',
                    ref: i,
                    style: me({ width: v.value, minWidth: v.value }),
                  },
                  [
                    ne(
                      f(Ya),
                      { components: { VaSidebarItem: S.value } },
                      { default: G(() => [L($.$slots, 'default')]), _: 3 },
                      8,
                      ['components'],
                    ),
                  ],
                  4,
                ),
                [[Aa, c.value]],
              ),
            ],
            38,
          )
        )
      )
    },
  }),
  jI = ye(FI),
  HI = re({
    name: 'VaSidebarItem',
    __name: 'VaSidebarItem',
    props: {
      ...gr,
      ...Le,
      active: { type: Boolean, default: !1 },
      textColor: { type: String, default: void 0 },
      activeColor: { type: String, default: 'primary' },
      hoverColor: { type: String, default: void 0 },
      hoverOpacity: { type: [Number, String], default: 0.2 },
      borderColor: { type: String, default: void 0 },
      disabled: { type: Boolean, default: !1 },
    },
    setup(e) {
      const t = e,
        n = Ol(),
        o = MI(),
        { isHovered: r } = Qa(n, Ut(t, 'disabled')),
        { getColor: a, getHoverColor: l, getFocusColor: s } = Re(),
        { hasKeyboardFocus: i, keyboardFocusListeners: u } = Qr(),
        c = p(() =>
          t.active && !r.value && !i.value
            ? a(t.activeColor)
            : i.value
              ? s(a(t.hoverColor || t.activeColor))
              : '#ffffff00',
        ),
        d = p(() => ZS(a(o == null ? void 0 : o.color), c.value)),
        { textColorComputed: m } = Vt(d),
        v = p(() => {
          const _ = { color: m.value }
          if (t.disabled) return _
          if (((r.value || t.active || i.value) && (_.backgroundColor = c.value), t.active)) {
            const y = { ...o, ...t }
            _.borderColor = a(y.borderColor || y.activeColor)
          }
          return (
            i.value && (_.backgroundColor = s(a(t.hoverColor || t.activeColor))),
            r.value && (_.backgroundColor = l(a(t.hoverColor || t.activeColor), Number(t.hoverOpacity))),
            _
          )
        }),
        { tagComputed: g, linkAttributesComputed: h } = No(t)
      return (_, y) => (
        C(),
        ee(
          an(f(g)),
          le(
            {
              ref_key: 'rootElement',
              ref: n,
              class: [
                'va-sidebar__item va-sidebar-item',
                { 'va-sidebar-item--active': _.$props.active, 'va-sidebar-item--disabled': _.$props.disabled },
              ],
              tabindex: _.$props.disabled ? -1 : 0,
              style: v.value,
            },
            f(h),
            yn(f(u)),
          ),
          { default: G(() => [L(_.$slots, 'default')]), _: 3 },
          16,
          ['tabindex', 'class', 'style'],
        )
      )
    },
  }),
  UI = { class: 'va-sidebar__item__content va-sidebar-item-content' },
  WI = re({
    name: 'VaSidebarItemContent',
    __name: 'VaSidebarItemContent',
    setup(e) {
      return (t, n) => (C(), A('div', UI, [L(t.$slots, 'default')]))
    },
  }),
  GI = { class: 'va-sidebar__title va-sidebar-item-title' },
  KI = re({
    name: 'VaSidebarItemTitle',
    __name: 'VaSidebarItemTitle',
    setup(e) {
      return (t, n) => (C(), A('div', GI, [L(t.$slots, 'default')]))
    },
  }),
  qI = ye(WI),
  YI = ye(KI),
  XI = ye(HI),
  kf = (e, t, n, o, r) => {
    ;((Array.isArray(e) && !r) || (!Array.isArray(e) && r)) &&
      ot(
        `The type "${Array.isArray(e) ? 'array' : typeof e}" of prop "model-value" does not match prop "range = ${r}".`,
      ),
      o < n && ot(`The maximum value (${o}) can not be less than the minimum value (${n}).`),
      fV(o - n, t) || ot(`Step ${t} is illegal. Slider is non-divisible (Min:Max ${n}:${o}).`)
    const a = (l) => {
      l < n
        ? ot(
            `The value of the slider is ${l}, the minimum value is ${n}, the value of this slider can not be less than the minimum value`,
          )
        : l > o &&
          ot(
            `The value of the slider is ${l}, the maximum value is ${o}, the value of this slider can not be greater than the maximum value`,
          )
    }
    return Array.isArray(e) ? e.map(a) : a(e), !0
  },
  JI = { key: 0, class: 'va-slider__input-wrapper', 'aria-hidden': 'true' },
  QI = ['id'],
  ZI = { key: 2, class: 'va-input__label', 'aria-hidden': 'true' },
  ex = ['tabindex', 'onFocus'],
  tx = ['tabindex'],
  nx = { key: 3, class: 'va-input__label--inverse', 'aria-hidden': 'true' },
  ox = ['id'],
  rx = { key: 5, class: 'va-slider__input-wrapper' },
  ax = re({
    name: 'VaSlider',
    __name: 'VaSlider',
    props: {
      ...Tt,
      ...Le,
      range: { type: Boolean, default: !1 },
      modelValue: { type: [Number, Array], default: 0 },
      trackLabel: { type: [Function, String] },
      color: { type: String, default: 'primary' },
      trackColor: { type: String, default: '' },
      labelColor: { type: String, default: '' },
      trackLabelVisible: { type: Boolean, default: !1 },
      min: { type: [Number, String], default: 0 },
      max: { type: [Number, String], default: 100 },
      step: { type: [Number, String], default: 1 },
      label: { type: String, default: '' },
      invertLabel: { type: Boolean, default: !1 },
      disabled: { type: Boolean, default: !1 },
      readonly: { type: Boolean, default: !1 },
      pins: { type: Boolean, default: !1 },
      iconPrepend: { type: String, default: '' },
      iconAppend: { type: String, default: '' },
      vertical: { type: Boolean, default: !1 },
      showTrack: { type: Boolean, default: !0 },
      ariaLabel: Be('$t:sliderValue'),
    },
    emits: ['drag-start', 'drag-end', 'change', 'update:modelValue'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        { getColor: r, getHoverColor: a } = Re(),
        l = je(),
        s = je(),
        { setItemRefByIndex: i, itemRefs: u } = Ms(),
        c = H(!1),
        d = H(!1),
        m = H(0),
        v = H(0),
        g = n.range ? [0, 100] : 0,
        { valueComputed: h } = vt(n, o, 'modelValue', { defaultValue: g }),
        _ = H(0),
        y = H(!1),
        b = We('min'),
        w = We('max'),
        S = We('step'),
        $ = p(() => (n.vertical ? [1, 0] : [0, 1])),
        k = p(() => (n.vertical ? 'bottom' : 'left')),
        z = p(() => (n.vertical ? 'height' : 'width')),
        V = p(() => Array.isArray(x.value) && x.value[1] - S.value < x.value[0]),
        T = p(() => Array.isArray(x.value) && x.value[0] + S.value > x.value[1]),
        B = rt('va-slider', () => ({
          ...yt(n, ['disabled', 'readonly', 'vertical']),
          active: c.value,
          horizontal: !n.vertical,
          grabbing: y.value,
        })),
        K = rt('va-slider__handler', () => ({ onFocus: !n.range && (d.value || c.value), inactive: !c.value })),
        j = p(() => ({ color: n.labelColor ? r(n.labelColor) : r(n.color) })),
        U = p(() => ({ backgroundColor: n.trackColor ? r(n.trackColor) : a(r(n.color)) })),
        D = (oe) => {
          const de = b.value,
            Oe = w.value
          return ((se(de, oe, Oe) - de) / (Oe - de)) * 100
        },
        O = p(() => {
          if (Array.isArray(x.value)) {
            const oe = D(x.value[0]),
              de = D(x.value[1])
            return {
              [k.value]: `${oe}%`,
              [z.value]: `${de - oe}%`,
              backgroundColor: r(n.color),
              visibility: n.showTrack ? 'visible' : 'hidden',
            }
          } else {
            const oe = D(x.value)
            return {
              [z.value]: `${oe > 100 ? 100 : oe}%`,
              backgroundColor: r(n.color),
              visibility: n.showTrack ? 'visible' : 'hidden',
            }
          }
        }),
        R = p(() => {
          if (Array.isArray(x.value)) {
            const oe = D(x.value[0]),
              de = D(x.value[1])
            return [
              { [k.value]: `${oe}%`, backgroundColor: Ce(0) ? r(n.color) : '#ffffff', borderColor: r(n.color) },
              { [k.value]: `${de}%`, backgroundColor: Ce(1) ? r(n.color) : '#ffffff', borderColor: r(n.color) },
            ]
          } else {
            const oe = D(x.value)
            return {
              [k.value]: `${oe > 100 ? 100 : oe}%`,
              backgroundColor: Ce(0) ? r(n.color) : '#ffffff',
              borderColor: r(n.color),
            }
          }
        }),
        N = (oe) => (n.range ? R.value[oe] : R.value),
        x = p({
          get: () => h.value,
          set: (oe) => {
            d.value || o('change', oe), (h.value = oe)
          },
        }),
        ce = (oe) => (n.range && oe !== void 0 ? x.value[oe] : x.value),
        ue = p(() => {
          const oe = (w.value - b.value) / S.value
          return v.value / oe
        }),
        be = p(() => {
          const oe = `${S.value}`.split('.')[1]
          return oe ? Math.pow(10, oe.length) : 1
        }),
        xe = p(() => (w.value - b.value) / S.value - 1),
        we = p(() =>
          Array.isArray(x.value)
            ? [((x.value[0] - b.value) / S.value) * ue.value, ((x.value[1] - b.value) / S.value) * ue.value]
            : ((x.value - b.value) / S.value) * ue.value,
        ),
        J = p(() => [0, v.value]),
        _e = p(() => [b.value, w.value]),
        Ce = (oe) =>
          (!c.value && !d.value) || n.disabled || n.readonly ? !1 : n.range ? _.value === oe : _.value === 0,
        I = (oe, de = _.value) => {
          var Oe, Ne
          if ((oe.preventDefault(), !de)) {
            if (!n.range) de = 0
            else if (Array.isArray(we.value)) {
              const pt = 'touches' in oe ? oe.touches[0] : oe
              de = X(pt) > (we.value[1] - we.value[0]) / 2 + we.value[0] ? 1 : 0
            }
          }
          Array.isArray(x.value) && (_.value = de),
            Array.isArray(x.value) ? (Oe = u.value[de]) == null || Oe.focus() : (Ne = s.value) == null || Ne.focus(),
            (d.value = !0),
            o('drag-start')
        },
        M = (oe) => {
          !y.value ||
            !d.value ||
            n.disabled ||
            n.readonly ||
            (oe.preventDefault(), 'touches' in oe ? ve(X(oe.touches[0])) : ve(X(oe)))
        },
        ae = () => {
          !n.disabled &&
            !n.readonly &&
            (d.value && (o('drag-end'), o('change', x.value)), (d.value = !1), (y.value = !1))
        },
        se = (oe, de, Oe) => Math.max(Math.min(de, Oe), oe),
        Ee = (oe) => {
          var de, Oe
          if (![u.value[0], u.value[1], s.value].includes(document.activeElement) || n.disabled || n.readonly) return
          const Ne = (Yt, _t) => {
            if (Array.isArray(x.value)) {
              const Nt = x.value[_t] + (Yt ? S.value : -S.value),
                en = se(b.value, Nt, w.value)
              x.value = [_t === 0 ? en : x.value[0], _t === 1 ? en : x.value[1]]
            } else {
              const Nt = x.value + (Yt ? S.value : -S.value),
                en = se(b.value, Nt, w.value)
              x.value = en
            }
          }
          ;['ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown'].includes(oe.key) && oe.preventDefault()
          const pt = (Yt) => Yt === document.activeElement
          if (n.range && Array.isArray(x.value)) {
            const Yt = (Ft) => n.vertical && pt(u.value[0]) && Ft.key === 'ArrowUp',
              _t = (Ft) => n.vertical && pt(u.value[0]) && Ft.key === 'ArrowDown',
              Nt = (Ft) => n.vertical && pt(u.value[1]) && Ft.key === 'ArrowUp',
              en = (Ft) => n.vertical && pt(u.value[1]) && Ft.key === 'ArrowDown',
              il = (Ft) => !n.vertical && pt(u.value[0]) && Ft.key === 'ArrowLeft',
              ul = (Ft) => !n.vertical && pt(u.value[0]) && Ft.key === 'ArrowRight',
              io = (Ft) => !n.vertical && pt(u.value[1]) && Ft.key === 'ArrowLeft',
              Ws = (Ft) => !n.vertical && pt(u.value[1]) && Ft.key === 'ArrowRight'
            switch (!0) {
              case (en(oe) || io(oe)) && V.value && x.value[0] !== b.value:
                ;(de = u.value[0]) == null || de.focus(), Ne(0, 0)
                break
              case (Yt(oe) || ul(oe)) && T.value && x.value[1] !== w.value:
                ;(Oe = u.value[1]) == null || Oe.focus(), Ne(1, 1)
                break
              case (_t(oe) || il(oe)) && x.value[0] !== b.value:
                Ne(0, 0)
                break
              case (Nt(oe) || Ws(oe)) && x.value[1] !== w.value:
                Ne(1, 1)
                break
              case (en(oe) || io(oe)) && x.value[1] !== b.value:
                Ne(0, 1)
                break
              case (Yt(oe) || ul(oe)) && x.value[0] !== w.value:
                Ne(1, 0)
                break
            }
          } else
            n.vertical
              ? (oe.key === 'ArrowDown' && Ne(0, 0), oe.key === 'ArrowUp' && Ne(1, 0))
              : (oe.key === 'ArrowLeft' && Ne(0, 0), oe.key === 'ArrowRight' && Ne(1, 0))
        },
        He = (oe) =>
          Array.isArray(x.value) ? oe * S.value > x.value[0] && oe * S.value < x.value[1] : oe * S.value < x.value,
        P = p(() => (S.value / (w.value - b.value)) * 100),
        E = (oe) => ({
          backgroundColor: He(oe) ? r(n.color) : a(r(n.color)),
          [k.value]: `${oe * P.value}%`,
          transition: y.value ? 'none' : 'var(--va-slider-pin-transition)',
        }),
        X = (oe) => (te(), n.vertical ? m.value - oe.clientY : oe.clientX - m.value),
        te = () => {
          l.value &&
            ((v.value = l.value[n.vertical ? 'offsetHeight' : 'offsetWidth']),
            (m.value = l.value.getBoundingClientRect()[k.value]))
        },
        q = (oe) => (S.value * be.value * oe + b.value * be.value) / be.value,
        Q = (oe, de) => (n.trackLabel ? (typeof n.trackLabel == 'function' ? n.trackLabel(oe, de) : n.trackLabel) : oe),
        ie = (oe) => {
          const de = _.value
          Array.isArray(x.value)
            ? he(x.value[de], oe) && (de === 0 ? (x.value = [oe, x.value[1]]) : (x.value = [x.value[0], oe]))
            : oe < b.value
              ? (x.value = b.value)
              : oe > w.value
                ? (x.value = w.value)
                : he(x.value, oe) && (x.value = oe)
        },
        ve = (oe) => {
          const de = J.value,
            Oe = _e.value,
            Ne = Array.isArray(x.value) ? u.value[_.value] : s.value
          if ((Ne == null || Ne.focus(), oe >= de[0] && oe <= de[1])) {
            const pt = q(Math.round(oe / ue.value))
            _.value
              ? Array.isArray(we.value) && Array.isArray(x.value) && oe <= we.value[0]
                ? ((x.value = [pt, x.value[0]]), (_.value = 0))
                : ie(pt)
              : Array.isArray(we.value) && Array.isArray(x.value) && oe >= we.value[1]
                ? ((x.value = [x.value[1], pt]), (_.value = 1))
                : ie(pt)
          } else oe < de[0] ? ie(Oe[0]) : ie(Oe[1])
        },
        he = (oe, de) => JSON.stringify(oe) !== JSON.stringify(de),
        fe = (oe) => {
          if (n.disabled || n.readonly) return
          const de = 'touches' in oe ? X(oe.touches[0]) : X(oe)
          Array.isArray(we.value) && (_.value = de > (we.value[1] - we.value[0]) / 2 + we.value[0] ? 1 : 0),
            (y.value = !0),
            ve(de),
            I(oe, _.value)
        },
        Ie = () => {
          document.addEventListener('mousemove', M),
            document.addEventListener('touchmove', M, { passive: !1 }),
            document.addEventListener('mouseup', ae),
            document.addEventListener('mouseleave', ae),
            document.addEventListener('touchcancel', ae),
            document.addEventListener('touchend', ae),
            document.addEventListener('keydown', Ee)
        },
        F = () => {
          document.removeEventListener('mousemove', M),
            document.removeEventListener('touchmove', M),
            document.removeEventListener('mouseup', ae),
            document.removeEventListener('mouseleave', ae),
            document.removeEventListener('touchcancel', ae),
            document.removeEventListener('touchend', ae),
            document.removeEventListener('keydown', Ee)
        },
        Z = Fn(),
        Ve = p(() => `aria-label-id-${Z}`),
        { tp: De } = ut(),
        qe = Zt(),
        Ye = p(() => ({
          role: 'slider',
          'aria-valuemin': b.value,
          'aria-valuemax': w.value,
          'aria-label': !qe.label && !n.label ? De(n.ariaLabel, { value: String(x.value) }) : void 0,
          'aria-labelledby': qe.label || n.label ? Ve.value : void 0,
          'aria-orientation': n.vertical ? 'vertical' : 'horizontal',
          'aria-disabled': n.disabled,
          'aria-readonly': n.readonly,
          'aria-valuenow': Array.isArray(x.value) ? void 0 : x.value,
          'aria-valuetext': Array.isArray(x.value) ? String(x.value) : void 0,
        }))
      return (
        et(() => {
          kf(x.value, S.value, b.value, w.value, n.range) && (te(), Ie())
        }),
        wt(F),
        ge([x, () => S.value, () => b.value, () => w.value, () => n.range], ([oe, de, Oe, Ne, pt]) => {
          kf(oe, de, Oe, Ne, pt)
        }),
        ge(y, (oe) => {
          document.documentElement.style.cursor = oe ? 'grabbing' : ''
        }),
        (oe, de) => (
          C(),
          A(
            'div',
            le({ class: ['va-slider', f(B)] }, Ye.value),
            [
              (e.vertical ? oe.$slots.append : oe.$slots.prepend)
                ? (C(), A('div', JI, [L(oe.$slots, e.vertical ? 'append' : 'prepend')]))
                : W('', !0),
              (oe.$slots.label || e.label) && !e.invertLabel
                ? (C(),
                  A(
                    'span',
                    { key: 1, class: 'va-input__label', id: Ve.value, style: me(j.value) },
                    [L(oe.$slots, 'label', {}, () => [Fe(Ae(e.label), 1)])],
                    12,
                    QI,
                  ))
                : W('', !0),
              (e.vertical ? e.iconAppend : e.iconPrepend)
                ? (C(),
                  A('span', ZI, [
                    ne(
                      f(Ke),
                      { name: e.vertical ? e.iconAppend : e.iconPrepend, color: f(r)(oe.$props.color), size: 16 },
                      null,
                      8,
                      ['name', 'color'],
                    ),
                  ]))
                : W('', !0),
              Y(
                'div',
                {
                  ref_key: 'sliderContainer',
                  ref: l,
                  class: 'va-slider__container',
                  onMousedown: fe,
                  onTouchstart: fe,
                },
                [
                  Y('div', { class: 'va-slider__track', 'aria-hidden': 'true', style: me(U.value) }, null, 4),
                  e.pins
                    ? (C(!0),
                      A(
                        Te,
                        { key: 0 },
                        Ue(
                          xe.value,
                          (Oe, Ne) => (
                            C(),
                            A(
                              'div',
                              {
                                key: Ne,
                                class: Pe(['va-slider__mark', { 'va-slider__mark--active': He(Oe) }]),
                                style: me(E(Oe)),
                              },
                              null,
                              6,
                            )
                          ),
                        ),
                        128,
                      ))
                    : W('', !0),
                  oe.$props.range
                    ? (C(),
                      A(
                        Te,
                        { key: 1 },
                        [
                          Y(
                            'div',
                            {
                              ref: 'process',
                              class: Pe([
                                'va-slider__track va-slider__track--selected',
                                { 'va-slider__track--active': c.value },
                              ]),
                              'aria-hidden': 'true',
                              style: me(O.value),
                            },
                            null,
                            6,
                          ),
                          (C(!0),
                          A(
                            Te,
                            null,
                            Ue(
                              $.value,
                              (Oe) => (
                                C(),
                                A(
                                  'div',
                                  {
                                    key: 'dot' + Oe,
                                    ref_for: !0,
                                    ref: f(i)(Oe),
                                    class: Pe(['va-slider__handler', f(K)]),
                                    style: me(N(Oe)),
                                    tabindex: e.disabled || e.readonly ? void 0 : 0,
                                    onFocus: (Ne) => ((c.value = !0), (_.value = Oe)),
                                    onBlur: de[0] || (de[0] = (Ne) => (c.value = !1)),
                                  },
                                  [
                                    Ce(Oe)
                                      ? (C(),
                                        A(
                                          'div',
                                          {
                                            key: 0,
                                            style: me({ backgroundColor: f(r)(oe.$props.color) }),
                                            class: 'va-slider__handler__dot--focus',
                                          },
                                          null,
                                          4,
                                        ))
                                      : W('', !0),
                                    e.trackLabelVisible
                                      ? (C(),
                                        A(
                                          'div',
                                          { key: 1, style: me(j.value), class: 'va-slider__handler__dot--value' },
                                          [
                                            L(oe.$slots, 'trackLabel', pe(ke({ value: ce(Oe), order: Oe })), () => [
                                              Fe(Ae(Q(ce(Oe), Oe)), 1),
                                            ]),
                                          ],
                                          4,
                                        ))
                                      : W('', !0),
                                  ],
                                  46,
                                  ex,
                                )
                              ),
                            ),
                            128,
                          )),
                        ],
                        64,
                      ))
                    : (C(),
                      A(
                        Te,
                        { key: 2 },
                        [
                          Y(
                            'div',
                            {
                              ref: 'process',
                              'aria-hidden': 'true',
                              class: Pe([
                                'va-slider__track va-slider__track--selected',
                                { 'va-slider__track--active': c.value },
                              ]),
                              style: me(O.value),
                            },
                            null,
                            6,
                          ),
                          Y(
                            'div',
                            {
                              ref_key: 'dot',
                              ref: s,
                              class: Pe(['va-slider__handler', f(K)]),
                              style: me(R.value),
                              tabindex: oe.$props.disabled || oe.$props.readonly ? void 0 : 0,
                              onFocus: de[1] || (de[1] = (Oe) => (c.value = !0)),
                              onBlur: de[2] || (de[2] = (Oe) => (c.value = !1)),
                            },
                            [
                              Ce(0)
                                ? (C(),
                                  A(
                                    'div',
                                    {
                                      key: 0,
                                      class: 'va-slider__handler__dot--focus',
                                      style: me({ backgroundColor: f(r)(oe.$props.color) }),
                                    },
                                    null,
                                    4,
                                  ))
                                : W('', !0),
                              e.trackLabelVisible
                                ? (C(),
                                  A(
                                    'div',
                                    { key: 1, class: 'va-slider__handler__dot--value', style: me(j.value) },
                                    [L(oe.$slots, 'trackLabel', pe(ke({ value: ce() })), () => [Fe(Ae(Q(ce())), 1)])],
                                    4,
                                  ))
                                : W('', !0),
                            ],
                            46,
                            tx,
                          ),
                        ],
                        64,
                      )),
                ],
                544,
              ),
              (e.vertical ? e.iconPrepend : e.iconAppend)
                ? (C(),
                  A('span', nx, [
                    ne(
                      f(Ke),
                      { name: e.vertical ? e.iconPrepend : e.iconAppend, color: f(r)(oe.$props.color), size: 16 },
                      null,
                      8,
                      ['name', 'color'],
                    ),
                  ]))
                : W('', !0),
              (oe.$slots.label || e.label) && e.invertLabel
                ? (C(),
                  A(
                    'span',
                    { key: 4, class: 'va-input__label va-input__label--inverse', style: me(j.value), id: Ve.value },
                    [L(oe.$slots, 'label', {}, () => [Fe(Ae(e.label), 1)])],
                    12,
                    ox,
                  ))
                : W('', !0),
              (e.vertical ? oe.$slots.prepend : oe.$slots.append)
                ? (C(), A('div', rx, [L(oe.$slots, e.vertical ? 'prepend' : 'append')]))
                : W('', !0),
            ],
            16,
          )
        )
      )
    },
  }),
  lx = ye(ax),
  Tf = (e) => typeof e == 'number',
  sx = { vertical: { type: Boolean, default: !1 }, disabled: { type: Boolean, default: !1 } },
  ix = (e, t, n) => {
    const o = H(!1),
      r = H(0),
      a = H(0),
      l = H(0),
      s = (d, m) => {
        const v = d.type === m ? d : d.changedTouches[0]
        return n.vertical ? v.pageY : v.pageX
      },
      i = (d) => {
        n.disabled || !e.value || ((o.value = !0), (r.value = s(d, 'mousedown')), (a.value = t.value))
      },
      u = (d) => {
        if (!o.value) return
        const v = s(d, 'mousemove') - r.value
        l.value = a.value + Math.floor((v / e.value) * 100)
      },
      c = () => {
        o.value = !1
      }
    return (
      ft(['mousemove', 'touchmove'], u),
      ft(['mouseup', 'touchcancel'], c),
      { isDragging: o, startDragging: i, currentSplitterPosition: l }
    )
  },
  ux = ['aria-label'],
  cx = { class: 'va-split__dragger' },
  dx = re({
    name: 'VaSplit',
    __name: 'VaSplit',
    props: {
      ...Le,
      ...sx,
      ...Tt,
      modelValue: { type: Number, default: 50, validator: (e) => e <= 100 },
      maximization: { type: Boolean, default: !1 },
      maximizeStart: { type: Boolean, default: !1 },
      limits: { type: Array, default: () => [0, 0] },
      snapping: { type: Array, default: void 0 },
      snappingRange: { type: [Number, String], default: 4 },
      ariaLabel: Be('$t:splitPanels'),
    },
    emits: [...Mt],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        r = je(),
        { valueComputed: a } = vt(n, o),
        l = H(),
        s = H(16),
        i = () => {
          var D
          const { width: O, height: R } = ((D = r.value) == null ? void 0 : D.getBoundingClientRect()) || {
            width: 0,
            height: 0,
          }
          ;(l.value = n.vertical ? R : O), (s.value = parseFloat(getComputedStyle(document.documentElement).fontSize))
        }
      et(i), ar([r], i)
      const u = (D, O) => {
          let R = '',
            N = ''
          if (Tf(D)) return D
          switch (
            (D.split('')
              .filter((x) => x && x !== ' ')
              .forEach((x) => {
                isNaN(+x) ? (N += x) : (R += x)
              }),
            N)
          ) {
            case '%':
              return +R
            case 'px':
              return (+R / l.value) * 100
            case 'rem':
              return ((+R * s.value) / l.value) * 100
            case 'any':
              return ['min', 'snapping'].includes(O) ? 0 : 100
            case '':
              return 100
            default:
              return ot('Invalid limits measure!'), 0
          }
        },
        c = (D) => {
          if (D === 'undefined' || !l.value) return
          let O = 0,
            R = 100
          return (
            (Yl(D) || Tf(D)) && (O = u(D, 'min')),
            Array.isArray(D) && ((O = u(D[0], 'min')), (R = u(D[1], 'max'))),
            O > R && (ot(`Min panels size can not be larger than max one! Passed limit: ${D}.`), (R = O)),
            { min: O ?? 0, max: R ?? 100 }
          )
        },
        d = p(() => c(n.limits[0]) ?? { min: 0, max: 100 }),
        m = p(() => c(n.limits[1]) ?? { min: 0, max: 100 }),
        v = p(() => {
          const D = !(d.value.min + m.value.min > 100)
          return (
            D || ot('The sum of different panels min sizes should be lesser or equal to 100% of the container size!'),
            D ? m.value.min : 100 - d.value.min
          )
        }),
        g = p(
          () => (
            Math.ceil(m.value.max + d.value.max) < 100 &&
              ot('The sum of different panels max sizes should be equal to 100% of the container size!'),
            {
              start: { min: d.value.min, max: Math.min(d.value.max, 100 - v.value) },
              end: { min: v.value, max: Math.min(m.value.max, 100 - d.value.min) },
            }
          ),
        ),
        h = (D) => D >= g.value.start.min && D >= g.value.end.min && D <= g.value.start.max && D <= g.value.end.max,
        _ = p(() => {
          if (!Array.isArray(n.snapping) || !l.value) return
          let D = n.snapping.map((R) => u(R, 'snapping'))
          if (!D.every(h)) {
            const R = D.filter(h)
            ot(
              `Some of the snapping marks (${D}) are not in allowed range (${Object.values(g.value.start).join(
                '-',
              )} / ${Object.values(g.value.end).join('-')}) and will be removed (${R})!`,
            ),
              (D = R)
          }
          return (
            D.every((R, N, x) => (x[N + 1] ? Math.abs(R - x[N + 1]) > Number(n.snappingRange) : !0)) ||
              ot('Distance between some snapping marks is lesser than snapping range!'),
            D
          )
        }),
        y = p(() => u(n.snappingRange, 'snapping')),
        b = H(a.value),
        w = p(() => {
          if (_.value) {
            const D = _.value.find((O) => b.value + y.value > O && b.value - y.value < O)
            if (D) return D
          }
          return lr(
            b.value,
            Math.max(g.value.start.min, 100 - g.value.end.max),
            Math.min(g.value.start.max, 100 - g.value.end.min),
          )
        }),
        { isDragging: S, startDragging: $, currentSplitterPosition: k } = ix(l, w, n),
        z = () => {
          !n.maximization || n.disabled || (b.value = n.maximizeStart ? g.value.start.max : 100 - g.value.end.max)
        }
      ge(
        a,
        (D) => {
          ;(D < g.value.start.min || D > 100 - g.value.end.min) &&
            ot('Incorrect `modelValue`. Check current `limits` prop value.'),
            (b.value = D)
        },
        { immediate: !0 },
      ),
        ge(k, (D) => {
          b.value = D
        }),
        ge(S, (D) => {
          D || (a.value = w.value), (document.documentElement.style.cursor = D ? 'var(--va-split-dragging-cursor)' : '')
        })
      const V = p(() => (n.vertical ? 'height' : 'width')),
        T = (D) => {
          let O = D === 'start' ? w.value : 100 - w.value
          return O < 0 && (O = 0), O > 100 && (O = 100), { [V.value]: `${O}%` }
        },
        B = p(() =>
          n.disabled
            ? {}
            : S.value
              ? { cursor: 'var(--va-split-dragging-cursor)' }
              : {
                  cursor: n.vertical
                    ? 'var(--va-split-vertical-dragger-cursor)'
                    : 'var(--va-split-horizontal-dragger-cursor)',
                },
        ),
        K = rt('va-split', () => ({ horizontal: !n.vertical, vertical: n.vertical, dragging: S.value })),
        { t: j, tp: U } = ut()
      return (D, O) => (
        C(),
        A(
          'section',
          {
            ref_key: 'splitPanelsContainer',
            ref: r,
            class: Pe(['va-split', f(K)]),
            'aria-label': f(U)(D.$props.ariaLabel),
          },
          [
            Y(
              'div',
              { class: 'va-split__panel', style: me(T('start')) },
              [L(D.$slots, 'start', pe(ke({ containerSize: l.value })))],
              4,
            ),
            Y('div', cx, [
              Y(
                'div',
                {
                  class: 'va-split__dragger__overlay',
                  style: me(B.value),
                  onMousedown: O[0] || (O[0] = Se((...R) => f($) && f($)(...R), ['prevent'])),
                  onTouchstart: O[1] || (O[1] = Se((...R) => f($) && f($)(...R), ['prevent'])),
                  onDblclick: Se(z, ['prevent']),
                  onContextmenu: O[2] || (O[2] = Se(() => {}, ['prevent'])),
                  onDragstart: O[3] || (O[3] = Se(() => {}, ['prevent'])),
                },
                [
                  L(D.$slots, 'grabber', {}, () => [
                    ne(f(ey), { class: 'va-split__dragger__default', vertical: !D.$props.vertical }, null, 8, [
                      'vertical',
                    ]),
                  ]),
                ],
                36,
              ),
            ]),
            Y(
              'div',
              { class: 'va-split__panel', style: me(T('end')) },
              [L(D.$slots, 'end', pe(ke({ containerSize: l.value })))],
              4,
            ),
          ],
          10,
          ux,
        )
      )
    },
  }),
  mx = ye(dx),
  hy = Symbol('TabsView'),
  fx = ['aria-disabled'],
  px = Y('div', { class: 'va-tabs__slider' }, null, -1),
  vx = [px],
  gx = { class: 'va-tabs__tabs-items' },
  hx = { class: 'va-tabs__content' },
  po = (e) => (e == null ? void 0 : e.clientWidth) || 0,
  yx = re({
    name: 'VaTabs',
    __name: 'VaTabs',
    props: {
      ...Tt,
      ...Le,
      modelValue: { type: [String, Number], default: null },
      left: { type: Boolean, default: !0 },
      right: { type: Boolean, default: !1 },
      center: { type: Boolean, default: !1 },
      grow: { type: Boolean, default: !1 },
      hidePagination: { type: Boolean, default: !1 },
      disabled: { type: Boolean, default: !1 },
      hideSlider: { type: Boolean, default: !1 },
      vertical: { type: Boolean, default: !1 },
      color: { type: String, default: 'primary' },
      prevIcon: { type: String, default: 'va-arrow-left' },
      nextIcon: { type: String, default: 'va-arrow-right' },
      ariaMoveRightLabel: Be('$t:movePaginationLeft'),
      ariaMoveLeftLabel: Be('$t:movePaginationRight'),
    },
    emits: ['update:modelValue', 'click:next', 'click:prev'],
    setup(e, { expose: t, emit: n }) {
      const { tp: o } = ut(),
        r = e,
        a = n,
        l = je(),
        s = je(),
        i = je(),
        u = H([]),
        c = H(null),
        d = H(null),
        m = H(0),
        v = H(0),
        g = H(!1),
        h = H(0),
        _ = H(0),
        y = H(!1),
        { valueComputed: b } = vt(r, a),
        w = on({ VaTab: { color: r.color } }),
        S = p(() => {
          const { left: J, right: _e, center: Ce, grow: I, disabled: M } = r
          return {
            'va-tabs__container--left': J && !_e && !Ce && !I,
            'va-tabs__container--right': _e,
            'va-tabs__container--center': Ce,
            'va-tabs__container--grow': I,
            'va-tabs__container--disabled': M,
          }
        }),
        $ = p(() => ({ 'va-tabs--vertical': r.vertical })),
        { getColor: k } = Re(),
        z = p(() => k(r.color)),
        V = p(() =>
          r.hideSlider
            ? { display: 'none' }
            : {
                backgroundColor: z.value,
                height: r.vertical ? `${c.value}px` : '',
                width: r.vertical ? '' : `${d.value}px`,
                transform: `translateY(-${v.value}px) translateX(${m.value}px)`,
                transition: y.value ? 'var(--va-tabs-slider-wrapper-transition)' : '',
              },
        ),
        T = p(() =>
          r.vertical
            ? { transform: 'translateX(0px)' }
            : {
                transform: `translateX(${_.value - h.value}px)`,
                transition: y.value ? 'var(--va-tabs-slider-transition)' : '',
                position: r.hidePagination ? 'unset' : 'absolute',
              },
        ),
        B = p(() => h.value === 0),
        K = p(() => {
          const J = u.value[u.value.length - 1],
            _e = f(J.leftSidePosition),
            Ce = f(J.rightSidePosition),
            I = po(s.value)
          return Ce <= h.value + I || _e <= h.value
        }),
        j = () => {
          ;(d.value = 0), (c.value = 0)
        },
        U = (J) => {
          const _e = po(s.value),
            Ce = f(J.leftSidePosition),
            I = f(J.rightSidePosition)
          if (!g.value) {
            h.value = 0
            return
          }
          if (!(Ce - h.value >= 0 && I - h.value <= _e)) {
            if (Ce - h.value < 0) {
              h.value = Ce
              return
            }
            if (I - h.value > _e) {
              h.value = I - _e
              return
            }
            h.value = 0
          }
        },
        D = () => {
          if (((_.value = 0), !g.value)) return
          const J = po(s.value),
            _e = po(i.value)
          r.right ? (_.value = _e - J) : r.center && (_.value = Math.floor((_e - J) / 2))
        },
        O = () => {
          j(),
            u.value.forEach((J) => {
              var _e
              J.updateSidePositions()
              const Ce = (((_e = J.name) == null ? void 0 : _e.value) || J.id) === b.value
              ;(J.isActive = J.isActiveRouterLink || Ce), J.isActive && (U(J), ce(J))
            }),
            D()
        }
      vn(() => {
        O()
      })
      const R = () => {
          const J = po(i.value),
            _e = po(l.value)
          requestAnimationFrame(() => {
            g.value = !!(i.value && l.value && J > _e)
          })
        },
        N = () => {
          var J, _e
          const Ce = po(s.value)
          let I = h.value - Ce
          for (let M = 0; M < u.value.length - 1; M++) {
            const ae = f((J = u.value[M]) == null ? void 0 : J.leftSidePosition),
              se = f((_e = u.value[M + 1]) == null ? void 0 : _e.leftSidePosition)
            if ((ae > I && ae < h.value) || se >= h.value) {
              I = ae
              break
            }
          }
          ;(h.value = Math.max(0, I)), a('click:prev')
        },
        x = () => {
          var J
          const _e = po(s.value),
            Ce = h.value + _e
          let I = Ce
          for (
            let se = 0;
            se < u.value.length - 1 &&
            !(f(u.value[se].rightSidePosition) > Ce && ((I = f(u.value[se].leftSidePosition)), h.value < I));
            se++
          );
          const ae = f((J = u.value[u.value.length - 1]) == null ? void 0 : J.rightSidePosition) - _e
          ;(I = Math.min(ae, I)), (h.value = Math.max(0, I)), a('click:next')
        },
        ce = (J) => {
          var _e
          const Ce = f(J.tabElement),
            I = (Ce == null ? void 0 : Ce.offsetTop) || 0,
            M = (Ce == null ? void 0 : Ce.offsetLeft) || 0,
            ae = (Ce == null ? void 0 : Ce.clientHeight) || 0,
            se = (Ce == null ? void 0 : Ce.clientWidth) || 0
          if (r.vertical) {
            const He = (((_e = s.value) == null ? void 0 : _e.clientHeight) || 0) - I - ae
            ;(v.value = Math.max(He, 0)), (c.value = ae), (m.value = 0), (d.value = 0)
          } else (m.value = M), (d.value = se), (v.value = 0), (c.value = 0)
        },
        ue = () => {
          y.value ||
            requestAnimationFrame(() => {
              y.value = !0
            })
        },
        be = (J) => {
          var _e
          J && ((b.value = ((_e = J.name) == null ? void 0 : _e.value) || J.id), r.stateful && O())
        },
        xe = (J) => {
          var _e
          const Ce = u.value.push(J) - 1
          J.id = ((_e = J.name) == null ? void 0 : _e.value) || Ce
        },
        we = (J) => {
          ;(u.value = u.value.filter((_e) => _e.id !== J.id)),
            u.value.forEach((_e, Ce) => {
              var I
              _e.id = ((I = _e.name) == null ? void 0 : I.value) || Ce
            })
        }
      return (
        ln(hy, { parentDisabled: r.disabled, selectTab: be, moveToTab: U, registerTab: xe, unregisterTab: we }),
        ge(() => r.modelValue, O),
        ar([l], R),
        ar([s], O),
        et(() => {
          requestAnimationFrame(() => {
            ue()
          })
        }),
        t({ selectTab: be, moveToTab: U, movePaginationLeft: N, movePaginationRight: x }),
        (J, _e) => (
          C(),
          A(
            'div',
            { class: Pe(['va-tabs', $.value]) },
            [
              Y(
                'div',
                {
                  ref_key: 'wrapper',
                  ref: l,
                  class: 'va-tabs__wrapper',
                  role: 'tablist',
                  'aria-disabled': J.$props.disabled,
                },
                [
                  g.value && !J.$props.hidePagination
                    ? (C(),
                      ee(
                        f(Xe),
                        {
                          key: 0,
                          class: 'va-tabs__pagination',
                          'aria-label': f(o)(J.$props.ariaMoveLeftLabel),
                          size: 'medium',
                          disabled: B.value,
                          color: e.color,
                          preset: 'secondary',
                          icon: J.$props.prevIcon,
                          onClick: N,
                        },
                        null,
                        8,
                        ['aria-label', 'disabled', 'color', 'icon'],
                      ))
                    : W('', !0),
                  Y(
                    'div',
                    { ref_key: 'container', ref: s, class: Pe(['va-tabs__container', S.value]) },
                    [
                      Y(
                        'div',
                        { ref_key: 'tabs', ref: i, class: 'va-tabs__tabs', style: me(T.value) },
                        [
                          Y(
                            'div',
                            { class: 'va-tabs__slider-wrapper', 'aria-hidden': 'true', style: me(V.value) },
                            vx,
                            4,
                          ),
                          ne(
                            f(Ya),
                            { components: w },
                            { default: G(() => [Y('div', gx, [L(J.$slots, 'tabs')])]), _: 3 },
                            8,
                            ['components'],
                          ),
                        ],
                        4,
                      ),
                    ],
                    2,
                  ),
                  g.value && !J.$props.hidePagination
                    ? (C(),
                      ee(
                        f(Xe),
                        {
                          key: 1,
                          class: 'va-tabs__pagination',
                          'aria-label': f(o)(J.$props.ariaMoveRightLabel),
                          size: 'medium',
                          color: e.color,
                          disabled: K.value,
                          preset: 'secondary',
                          icon: J.$props.nextIcon,
                          onClick: x,
                        },
                        null,
                        8,
                        ['aria-label', 'color', 'disabled', 'icon'],
                      ))
                    : W('', !0),
                ],
                8,
                fx,
              ),
              Y('div', hx, [L(J.$slots, 'default')]),
            ],
            2,
          )
        )
      )
    },
  }),
  _x = ye(yx),
  bx = { class: 'va-tab__content' },
  zx = ['textContent'],
  Cx = re({
    name: 'VaTab',
    __name: 'VaTab',
    props: {
      ...gr,
      ...Le,
      selected: { type: Boolean, default: !1 },
      color: { type: String, default: '' },
      icon: { type: String, default: '' },
      label: { type: String, default: '' },
      disabled: { type: Boolean },
      name: { type: [String, Number] },
      tag: { type: String, default: 'div' },
    },
    emits: ['click', 'keydown-enter', 'focus'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        r = je(),
        a = p(() => St(r.value)),
        l = H(!1),
        s = H(!1),
        i = H(0),
        u = H(0),
        { keyboardFocusListeners: c, hasKeyboardFocus: d } = Qr(),
        { tagComputed: m, isActiveRouterLink: v, linkAttributesComputed: g } = No(n),
        h = p(() => ({ 'va-tab--disabled': n.disabled })),
        {
          parentDisabled: _,
          selectTab: y,
          moveToTab: b,
          registerTab: w,
          unregisterTab: S,
        } = kt(hy, {
          parentDisabled: !1,
          tabsList: [],
          selectTab: (R) => R,
          moveToTab: (R) => R,
          registerTab: (R) => R,
          unregisterTab: (R) => R,
        }),
        $ = p(() => (n.disabled || _ ? -1 : 0)),
        { getColor: k } = Re(),
        z = p(() => k(n.color)),
        V = p(() => ({ color: s.value || l.value ? z.value : 'inherit' })),
        T = (R) => {
          s.value = R
        },
        B = () => {
          var R, N
          const x = ((R = a.value) == null ? void 0 : R.offsetLeft) || 0,
            ce = ((N = a.value) == null ? void 0 : N.offsetWidth) || 0
          ;(i.value = x + ce), (u.value = x)
        },
        K = gy(r)
      ge(K, () => {
        B()
      })
      const j = async () => {
          await dt(), y(O), o('click')
        },
        U = async () => {
          await dt(), y(O), o('keydown-enter')
        },
        D = () => {
          d.value && b(O), o('focus')
        },
        O = {
          name: p(() => n.name),
          id: null,
          tabElement: a,
          isActive: l,
          tabIndexComputed: $,
          isActiveRouterLink: v,
          rightSidePosition: i,
          leftSidePosition: u,
          onTabClick: j,
          onTabKeydown: U,
          onFocus: D,
          updateSidePositions: B,
        }
      return (
        et(() => {
          w(O)
        }),
        wt(() => {
          S(O)
        }),
        (R, N) => (
          C(),
          ee(
            an(f(m)),
            le(
              {
                ref_key: 'rootElement',
                ref: r,
                class: ['va-tab', h.value],
                role: 'tab',
                'aria-selected': l.value,
                'aria-disabled': R.$props.disabled || f(_),
                style: V.value,
                onMouseenter: N[0] || (N[0] = (x) => T(!0)),
                onMouseleave: N[1] || (N[1] = (x) => T(!1)),
                onFocus: D,
                onClick: j,
                onKeydown: $e(U, ['enter']),
                tabindex: $.value,
              },
              yn(f(c)),
              f(g),
            ),
            {
              default: G(() => [
                Y('div', bx, [
                  L(R.$slots, 'default', {}, () => [
                    e.icon
                      ? (C(),
                        ee(f(Ke), { key: 0, class: 'va-tab__icon', size: 'small', name: e.icon }, null, 8, ['name']))
                      : W('', !0),
                    Y('span', { class: 'va-tab__label', textContent: Ae(e.label) }, null, 8, zx),
                  ]),
                ]),
              ]),
              _: 3,
            },
            16,
            ['aria-selected', 'aria-disabled', 'class', 'style', 'tabindex'],
          )
        )
      )
    },
  }),
  Sx = ye(Cx),
  Ic = (e, ...t) => (Na(e) ? e(...t) : e),
  wx = { class: 'va-stepper__default-controls' },
  $x = re({
    name: 'VaStepperControls',
    __name: 'VaStepperControls',
    props: {
      modelValue: { type: [Number, String], required: !0 },
      steps: { type: Array, required: !0 },
      nextDisabled: { type: Boolean, required: !0 },
      stepControls: { type: Object, required: !0 },
      finishButtonHidden: { type: Boolean, default: !1 },
    },
    setup(e) {
      const t = e,
        { t: n } = ut(),
        o = p(() => {
          const a = t.steps[Number(t.modelValue)]
          return Ic(a.isLoading) || !1
        }),
        r = p(() => {
          const a = t.steps.length - 1
          return Number(t.modelValue) >= a
        })
      return (a, l) => (
        C(),
        A('div', wx, [
          ne(
            f(Xe),
            {
              preset: 'primary',
              disabled: Number(a.$props.modelValue) <= 0,
              loading: o.value,
              onClick: l[0] || (l[0] = (s) => a.$props.stepControls.prevStep()),
            },
            { default: G(() => [Fe(Ae(f(n)('back')), 1)]), _: 1 },
            8,
            ['disabled', 'loading'],
          ),
          r.value
            ? a.$props.finishButtonHidden
              ? W('', !0)
              : (C(),
                ee(
                  f(Xe),
                  { key: 1, onClick: l[2] || (l[2] = (s) => a.$props.stepControls.finish()), loading: o.value },
                  { default: G(() => [Fe(Ae(f(n)('finish')), 1)]), _: 1 },
                  8,
                  ['loading'],
                ))
            : (C(),
              ee(
                f(Xe),
                {
                  key: 0,
                  onClick: l[1] || (l[1] = (s) => a.$props.stepControls.nextStep()),
                  disabled: a.$props.nextDisabled,
                  loading: o.value,
                },
                { default: G(() => [Fe(Ae(f(n)('next')), 1)]), _: 1 },
                8,
                ['disabled', 'loading'],
              )),
        ])
      )
    },
  }),
  wr = (e) => Ic(e.hasError, e) || !1,
  kx = { class: 'va-stepper__step-button__icon' },
  Tx = re({
    name: 'VaStepperStepButton',
    __name: 'VaStepperStepButton',
    props: {
      modelValue: { type: Number, required: !0 },
      step: { type: Object, required: !0 },
      color: { type: String, required: !0 },
      stepIndex: { type: [Number, String], required: !0 },
      navigationDisabled: { type: Boolean, required: !0 },
      nextDisabled: { type: Boolean, required: !0 },
      focus: { type: Object, required: !0 },
      stepControls: { type: Object, required: !0 },
    },
    emits: ['update:modelValue'],
    setup(e, { emit: t }) {
      const n = e,
        o = je(),
        r = p(() => wr(n.step)),
        a = We('stepIndex'),
        l = p(() => r.value && n.modelValue === a.value),
        s = p(() => Ic(n.step.isLoading) || !1),
        { getColor: i } = Re(),
        u = p(() => i(r.value ? 'danger' : n.color)),
        c = (g) => n.nextDisabled && g > n.modelValue,
        { t: d } = ut(),
        m = rt('va-stepper__step-button', () => ({
          active: n.modelValue >= a.value,
          disabled: n.step.disabled || c(a.value),
          'navigation-disabled': n.navigationDisabled,
          error: l.value,
        }))
      ge(
        () => n.focus,
        () => {
          n.focus.trigger &&
            dt(() => {
              var g
              return (g = o.value) == null ? void 0 : g.focus()
            })
        },
        { deep: !0 },
      )
      const v = p(() => ({
        tabindex: n.focus.stepIndex === a.value && !n.navigationDisabled ? 0 : void 0,
        'aria-disabled': n.step.disabled || c(a.value) ? !0 : void 0,
        'aria-current': n.modelValue === n.stepIndex ? d('step') : void 0,
      }))
      return (g, h) => (
        C(),
        A(
          'li',
          le(
            {
              ref_key: 'stepElement',
              ref: o,
              class: ['va-stepper__step-button', f(m)],
              onClick: h[0] || (h[0] = (_) => !g.$props.navigationDisabled && g.$props.stepControls.setStep(f(a))),
              onKeyup: [
                h[1] ||
                  (h[1] = $e((_) => !g.$props.navigationDisabled && g.$props.stepControls.setStep(f(a)), ['enter'])),
                h[2] ||
                  (h[2] = $e((_) => !g.$props.navigationDisabled && g.$props.stepControls.setStep(f(a)), ['space'])),
              ],
            },
            v.value,
            { style: `--va-stepper-color: ${String(u.value)}` },
          ),
          [
            Y('div', kx, [
              s.value
                ? (C(), ee(f(qr), { key: 0, color: 'currentColor', indeterminate: '', size: 'small' }))
                : e.step.icon
                  ? (C(), ee(f(Ke), { key: 1, name: e.step.icon, size: '1.3rem' }, null, 8, ['name']))
                  : (C(), A(Te, { key: 2 }, [Fe(Ae(f(a) + 1), 1)], 64)),
            ]),
            Fe(' ' + Ae(e.step.label), 1),
          ],
          16,
        )
      )
    },
  }),
  Vx = { class: 'va-stepper__step-content' },
  Px = { class: 'va-stepper__controls' },
  Ax = re({
    name: 'VaStepper',
    __name: 'VaStepper',
    props: {
      ...Tt,
      modelValue: { type: Number, default: 0 },
      steps: { type: Array, default: () => [], required: !0 },
      color: { type: String, default: 'primary' },
      vertical: { type: Boolean, default: !1 },
      navigationDisabled: { type: Boolean, default: !1 },
      controlsHidden: { type: Boolean, default: !1 },
      nextDisabled: { type: Boolean, default: !1 },
      nextDisabledOnError: { type: Boolean, default: !1 },
      finishButtonHidden: { type: Boolean, default: !1 },
      ariaLabel: Be('$t:progress'),
      linear: { type: Boolean, default: !1 },
      finishStep: { type: Object },
    },
    emits: ['update:modelValue', 'finish', 'update:steps'],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        a = je(),
        { valueComputed: l } = vt(o, r, 'modelValue'),
        s = p(() => (o.finishStep ? [...o.steps, o.finishStep] : o.steps)),
        i = (O) => (o.finishStep ? O === s.value.length - 1 : !1),
        u = H({ trigger: !1, stepIndex: o.navigationDisabled ? -1 : o.modelValue }),
        { getColor: c } = Re(),
        d = (O) => (o.nextDisabledOnError && wr(s.value[O]) ? !0 : o.nextDisabled),
        m = (O, R) => {
          for (; O >= 0 && O < s.value.length; ) {
            O += R
            const N = s.value[O]
            if (!N) return
            if (!N.disabled) return N
          }
        },
        v = (O, R) => {
          for (; O >= 0 && O < s.value.length; ) {
            O += R
            const N = s.value[O]
            if (!N) return
            if (wr(N) === !0) return O
          }
        },
        g = async (O) => {
          var R
          const N = s.value[O],
            x = s.value[l.value],
            ce = m(O, -1)
          if (N.disabled) return !1
          if (o.linear && O < l.value) return !0
          const ue = v(l.value, 1)
          if (o.linear && ue !== void 0 && ue < O) return !1
          let be
          try {
            be = await ((R = x.beforeLeave) == null ? void 0 : R.call(x, x, N))
          } catch (xe) {
            throw new Error(`Error in beforeLeave function: ${xe}`)
          }
          return !(
            be === !1 ||
            (x.completed === void 0 && (x.completed = !0), o.linear && ce && !ce.completed) ||
            (o.linear && wr(x))
          )
        },
        h = async (O) => {
          ;(await g(O)) && (l.value = O)
        },
        _ = (O) => {
          o.navigationDisabled || (O === 'next' ? y(1) : b(1))
        },
        y = (O = 1) => {
          const R = u.value.stepIndex + O
          if (!d(R)) {
            if (R < s.value.length) {
              if (s.value[R].disabled) {
                y(O + 1)
                return
              }
              ;(u.value.stepIndex = R), (u.value.trigger = !0)
            } else
              for (let N = 0; N < s.value.length; N++)
                if (!s.value[N].disabled) {
                  ;(u.value.stepIndex = N), (u.value.trigger = !0)
                  break
                }
          }
        },
        b = (O = 1) => {
          const R = u.value.stepIndex - O
          if (R >= 0) {
            if (s.value[R].disabled) {
              b(O + 1)
              return
            }
            ;(u.value.stepIndex = R), (u.value.trigger = !0)
          } else
            for (let N = s.value.length - 1; N >= 0; N--)
              if (!s.value[N].disabled && !d(N)) {
                ;(u.value.stepIndex = N), (u.value.trigger = !0)
                break
              }
        },
        w = () => {
          requestAnimationFrame(() => {
            var O
            ;((O = a.value) != null && O.contains(document.activeElement)) ||
              ((u.value.stepIndex = o.modelValue), (u.value.trigger = !1))
          })
        }
      ge(
        () => o.modelValue,
        () => {
          ;(u.value.stepIndex = o.modelValue), (u.value.trigger = !1)
        },
      )
      const S = (O = 0) => {
          const R = l.value + 1 + O
          s.value[R] && (s.value[R].disabled && S(O + 1), h(R))
        },
        $ = (O = 0) => {
          const R = l.value - 1 - O
          s.value[R] && (s.value[R].disabled && $(O + 1), h(R))
        },
        z = {
          setStep: h,
          nextStep: S,
          prevStep: $,
          finish: async () => {
            ;(await g(o.steps.length - 1)) && r('finish')
          },
        },
        V = (O, R) => ({
          ...z,
          focus: u,
          isActive: o.modelValue === R,
          isCompleted: o.modelValue > R,
          isLastStep: s.value.length - 1 === R,
          isNextStepDisabled: d(R),
          isPrevStepDisabled: R === 0,
          index: R,
          step: O,
          hasError: wr(O),
        }),
        { tp: T } = ut(),
        B = () => {
          ;(u.value.stepIndex = o.modelValue), (u.value.trigger = !0)
        },
        K = p(() => ({
          role: 'group',
          'aria-label': T(o.ariaLabel),
          'aria-orientation': o.vertical ? 'vertical' : 'horizontal',
        }))
      function j(O) {
        return wr(s.value[O]) ? 'danger' : c(o.color)
      }
      return (
        t({
          modelValue: l,
          focusedStep: u,
          getIterableSlotData: V,
          stepControls: z,
          nextStep: S,
          prevStep: $,
          setStep: h,
          setFocus: _,
          completeStep: (O) => {
            const R = { ...s.value }
            O === !0 && (R[o.modelValue].hasError = !1), (R[o.modelValue].completed = O ?? !0), r('update:steps', R)
          },
          setError: (O) => {
            const R = { ...s.value }
            ;(R[o.modelValue].hasError = O ?? !0), (R[o.modelValue].completed = !O), r('update:steps', R)
          },
        }),
        (O, R) => (
          C(),
          A(
            'div',
            le({ class: ['va-stepper', { 'va-stepper--vertical': O.$props.vertical }] }, K.value),
            [
              Y(
                'ol',
                {
                  class: Pe(['va-stepper__navigation', { 'va-stepper__navigation--vertical': O.$props.vertical }]),
                  ref_key: 'stepperNavigation',
                  ref: a,
                  onClick: B,
                  onKeyup: [
                    $e(B, ['enter']),
                    $e(B, ['space']),
                    R[0] || (R[0] = $e((N) => _('prev'), ['left'])),
                    R[1] || (R[1] = $e((N) => _('next'), ['right'])),
                  ],
                  onFocusout: w,
                },
                [
                  (C(!0),
                  A(
                    Te,
                    null,
                    Ue(
                      s.value,
                      (N, x) => (
                        C(),
                        A(
                          Te,
                          { key: x + N.label },
                          [
                            i(x)
                              ? W('', !0)
                              : (C(),
                                A(
                                  Te,
                                  { key: 0 },
                                  [
                                    x > 0
                                      ? L(O.$slots, 'divider', pe(le({ key: 0 }, V(N, x))), () => [
                                          Y(
                                            'span',
                                            {
                                              class: Pe([
                                                'va-stepper__divider',
                                                { 'va-stepper__divider--vertical': O.$props.vertical },
                                              ]),
                                              'aria-hidden': 'true',
                                            },
                                            null,
                                            2,
                                          ),
                                        ])
                                      : W('', !0),
                                    L(O.$slots, `step-button-${x}`, pe(ke(V(N, x))), () => [
                                      ne(
                                        Tx,
                                        {
                                          stepIndex: x,
                                          color: j(x),
                                          modelValue: f(l),
                                          nextDisabled: e.nextDisabled,
                                          step: N,
                                          stepControls: z,
                                          navigationDisabled: e.navigationDisabled,
                                          focus: u.value,
                                        },
                                        null,
                                        8,
                                        [
                                          'stepIndex',
                                          'color',
                                          'modelValue',
                                          'nextDisabled',
                                          'step',
                                          'navigationDisabled',
                                          'focus',
                                        ],
                                      ),
                                    ]),
                                  ],
                                  64,
                                )),
                          ],
                          64,
                        )
                      ),
                    ),
                    128,
                  )),
                ],
                34,
              ),
              Y(
                'div',
                {
                  class: Pe([
                    'va-stepper__step-content-wrapper',
                    { 'va-stepper__step-content-wrapper--vertical': O.$props.vertical },
                  ]),
                },
                [
                  Y('div', Vx, [
                    L(O.$slots, `step-content-${i(f(l)) ? 'finish' : f(l)}`, pe(ke(V(s.value[f(l)], f(l))))),
                  ]),
                  Y('div', Px, [
                    L(O.$slots, 'controls', pe(ke(V(s.value[f(l)], f(l)))), () => [
                      e.controlsHidden
                        ? W('', !0)
                        : (C(),
                          ee(
                            $x,
                            {
                              key: 0,
                              modelValue: f(l),
                              nextDisabled: d(f(l)),
                              steps: s.value,
                              stepControls: z,
                              finishButtonHidden: e.finishButtonHidden,
                            },
                            null,
                            8,
                            ['modelValue', 'nextDisabled', 'steps', 'finishButtonHidden'],
                          )),
                    ]),
                  ]),
                ],
                2,
              ),
            ],
            16,
          )
        )
      )
    },
  }),
  Ex = ye(Ax),
  Ix = (e) => {
    const t = e.match(/[0-9]{1,2}/g)
    return t ? t.map((n) => Number(n)) : []
  },
  xx = (e) => {
    const t = e.match(/pm|am/i)
    return t ? +(t[0].toLowerCase() === 'pm') : null
  },
  Ox = (e) => {
    const t = new Date(),
      [n, o, r] = Ix(e),
      a = xx(e)
    if (!n) return null
    const l = a !== null && n <= 12,
      s = l && !!a,
      i = l && n === 12 ? 0 : n
    return (
      t.setHours(Math.min(i || 0, l ? 12 : 24) + (s ? 12 : 0)),
      t.setMinutes(Math.min(o || 0, 60)),
      t.setSeconds(Math.min(r || 0, 60)),
      t
    )
  },
  Lx = (e) => {
    const t = () => e.parse || Ox,
      n = H(!0),
      o = (a) => {
        const s = t()(a)
        return s || (n.value = !1), s
      }
    return { parse: (a) => ((n.value = !0), o(a)), isValid: n }
  },
  Bx = (e) => {
    const t = (r) => (r ? (e.ampm ? r.toLocaleTimeString('en-US') : r.toLocaleTimeString('en-GB')) : ''),
      n = (r, a, l) => r.split(':').slice(a, l).join(':'),
      o = (r) => {
        if (e.view === 'seconds') return t(r)
        const [a, l] = t(r).split(' ')
        return e.view === 'minutes'
          ? l
            ? [n(a, 0, 2), l].join(' ')
            : n(a, 0, 2)
          : e.view === 'hours'
            ? l
              ? [n(a, 0, 1), l].join(' ')
              : n(a, 0, 1)
            : ''
      }
    return { format: (r) => (e.format ? e.format(r) : o(r)) }
  },
  jr = (e) => (e.value ? e.value : new Date(new Date().setHours(0, 0, 0, 0))),
  xc = (e) => Array.from(Array(e).keys()),
  Vf = (e) => (e === 0 ? 12 : e) - +(e > 12) * 12,
  Nx = (e, t = !1) => (e === 12 ? 0 : e) + Number(t) * 12,
  Rx = (e, t, n) => {
    const o = p(() => (e.ampm ? 12 : 24)),
      r = p(() => {
        let l = xc(o.value)
        return (
          e.hoursFilter && (l = l.filter((s) => e.hoursFilter(e.ampm ? s + 12 * Number(n.value) : s))),
          l.map((s) => (e.ampm ? Vf(s) : s))
        )
      }),
      a = p({
        get: () => {
          if (!t.value) return -1
          if (e.ampm) {
            const s = Vf(t.value.getHours() - 12 * Number(n.value))
            return r.value.findIndex((i) => i === s)
          }
          const l = t.value.getHours()
          return r.value.findIndex((s) => s === l)
        },
        set: (l) => {
          if (e.readonly) return
          const s = e.ampm ? Nx(r.value[l], n.value) : r.value[l]
          t.value = new Date(jr(t).setHours(s))
        },
      })
    return p(() => ({ items: r.value, activeItem: a }))
  },
  Dx = (e, t) => {
    const n = p(() => {
        const r = xc(60)
        return e.minutesFilter ? r.filter(e.minutesFilter) : r
      }),
      o = p({
        get: () => {
          if (!t.value) return -1
          const r = t.value.getMinutes()
          return n.value.findIndex((a) => a === r)
        },
        set: (r) => {
          if (e.readonly) return
          const a = n.value[r]
          t.value = new Date(jr(t).setMinutes(a))
        },
      })
    return p(() => ({ items: n.value, activeItem: o }))
  },
  Mx = (e, t) => {
    const n = p(() => {
        const r = xc(60)
        return e.secondsFilter ? r.filter(e.secondsFilter) : r
      }),
      o = p({
        get: () => {
          if (!t.value) return -1
          const r = t.value.getSeconds()
          return n.value.findIndex((a) => a === r)
        },
        set: (r) => {
          if (e.readonly) return
          const a = n.value[r]
          t.value = new Date(jr(t).setSeconds(a))
        },
      })
    return p(() => ({ items: n.value, activeItem: o }))
  },
  Fx = (e, t, n) =>
    p(() => ({
      items: ['AM', 'PM'],
      activeItem: p({
        get: () => (t.value ? Number(n.value) : -1),
        set: (o) => {
          n.value = !!o
          const r = jr(t).getHours()
          let a = n.value ? r + 12 : r
          n.value && r <= 12 && (a = r + 12), !n.value && r >= 12 && (a = r - 12)
          const l = !e.hoursFilter || e.hoursFilter(a)
          e.periodUpdatesModelValue && l && (t.value = new Date(jr(t).setHours(a)))
        },
      }),
    })),
  jx = (e, t) => {
    const { view: n } = Sn(e),
      o = H(!1)
    ge(
      t,
      () => {
        o.value = jr(t).getHours() >= 12
      },
      { immediate: !0 },
    )
    const r = Rx(e, t, o),
      a = Dx(e, t),
      l = Mx(e, t),
      s = Fx(e, t, o)
    return {
      columns: p(() => {
        const u = []
        return (
          n.value === 'hours'
            ? u.push(r.value)
            : n.value === 'minutes'
              ? u.push(r.value, a.value)
              : n.value === 'seconds' && u.push(r.value, a.value, l.value),
          e.ampm && !e.hidePeriodSwitch && u.push(s.value),
          u
        )
      }),
      isPM: o,
    }
  },
  Hx = re({
    name: 'VaTimePickerColumnCell',
    __name: 'VaTimePickerColumnCell',
    setup(e) {
      const { isHovered: t, onMouseEnter: n, onMouseLeave: o } = Qa(),
        { getTextColor: r, getColor: a } = Re(),
        l = p(() =>
          t.value ? { color: a(r(a('background-secondary'))), background: a('background-secondary') } : void 0,
        )
      return (s, i) => (
        C(),
        A(
          'div',
          {
            onMouseenter: i[0] || (i[0] = (...u) => f(n) && f(n)(...u)),
            onMouseleave: i[1] || (i[1] = (...u) => f(o) && f(o)(...u)),
            style: me(l.value),
          },
          [L(s.$slots, 'default')],
          36,
        )
      )
    },
  }),
  Ux = ['onClick'],
  Wx = re({
    name: 'VaTimePickerColumn',
    __name: 'VaTimePickerColumn',
    props: {
      items: { type: Array, default: () => [] },
      activeItemIndex: { type: Number, default: 0 },
      cellHeight: { type: [Number, String], default: 30 },
    },
    emits: ['item-selected', 'update:activeItemIndex', ...Vs],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        a = je(),
        { focus: l, blur: s } = lo(a, r),
        [i] = rr('activeItemIndex', o, r),
        u = We('cellHeight')
      ge(i, (y) => {
        c(y)
      }),
        et(() => c(i.value, !1))
      const c = (y, b = !0) => {
          dt(() => {
            var w, S
            ;(S = (w = a.value) == null ? void 0 : w.scrollTo) == null ||
              S.call(w, { behavior: b ? 'smooth' : 'auto', top: y * u.value })
          })
        },
        d = (y) => {
          ;(i.value = (i.value + (y || 1)) % o.items.length), dt(() => c(i.value))
        },
        m = (y) => {
          ;(i.value = (i.value - 1 + o.items.length) % o.items.length), dt(() => c(i.value))
        },
        v = (y) => {
          i.value = y
        },
        g = (y) => (Number.isInteger(y) ? (Number(y) < 10 ? `0${y}` : `${y}`) : y),
        h = () => {
          const y = a.value.scrollTop,
            b = Math.max((y - (y % u.value)) / u.value, y / u.value)
          return b >= o.items.length
            ? o.items.length - 1
            : b < 0
              ? 0
              : i.value * u.value < y
                ? Math.ceil(b)
                : i.value * u.value > y
                  ? Math.floor(b)
                  : Math.round(b)
        },
        _ = fc(() => {
          a.value && i.value !== -1 && (i.value = h())
        }, 200)
      return (
        t({ focus: l, blur: s }),
        (y, b) => (
          C(),
          A(
            'div',
            {
              ref_key: 'rootElement',
              ref: a,
              tabindex: '0',
              class: 'va-time-picker-column',
              onKeydown: [
                b[0] ||
                  (b[0] = $e(
                    Se((w) => d(), ['stop', 'prevent']),
                    ['down'],
                  )),
                b[1] ||
                  (b[1] = $e(
                    Se((w) => d(5), ['stop', 'prevent']),
                    ['space'],
                  )),
                b[2] ||
                  (b[2] = $e(
                    Se((w) => m(), ['stop', 'prevent']),
                    ['up'],
                  )),
              ],
            },
            [
              (C(!0),
              A(
                Te,
                null,
                Ue(
                  e.items,
                  (w, S) => (
                    C(),
                    ee(
                      Hx,
                      { key: w, onScrollPassive: f(_), onTouchmovePassive: f(_), onMousewheelPassive: f(_) },
                      {
                        default: G(() => [
                          Y(
                            'div',
                            {
                              class: Pe([
                                'va-time-picker-cell',
                                { 'va-time-picker-cell--active': S === y.$props.activeItemIndex },
                              ]),
                              onClick: ($) => v(S),
                            },
                            [
                              L(
                                y.$slots,
                                'cell',
                                pe(
                                  ke({
                                    item: w,
                                    index: S,
                                    activeItemIndex: e.activeItemIndex,
                                    items: e.items,
                                    formattedItem: g(w),
                                  }),
                                ),
                                () => [Fe(Ae(g(w)), 1)],
                              ),
                            ],
                            10,
                            Ux,
                          ),
                        ]),
                        _: 2,
                      },
                      1032,
                      ['onScrollPassive', 'onTouchmovePassive', 'onMousewheelPassive'],
                    )
                  ),
                ),
                128,
              )),
            ],
            544,
          )
        )
      )
    },
  }),
  Gx = ye(Wx),
  Kx = (e, t) => p(() => Object.entries(t()).reduce((n, [o, r]) => ((n[`--${e}-${La(o)}`] = r), n), {})),
  Bl = re({
    name: 'VaTimePicker',
    __name: 'VaTimePicker',
    props: {
      ...Tt,
      ...Ro,
      ...Le,
      modelValue: { type: Date, required: !1 },
      ampm: { type: Boolean, default: !1 },
      hidePeriodSwitch: { type: Boolean, default: !1 },
      periodUpdatesModelValue: { type: Boolean, default: !0 },
      view: { type: String, default: 'minutes' },
      hoursFilter: { type: Function },
      minutesFilter: { type: Function },
      secondsFilter: { type: Function },
      framed: { type: Boolean, default: !1 },
      cellHeight: { type: [Number, String], default: 30 },
      visibleCellsCount: { type: [Number, String], default: 7 },
    },
    emits: [...Mt],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        { valueComputed: a } = vt(o, r),
        { columns: l, isPM: s } = jx(o, a),
        i = We('cellHeight'),
        u = We('visibleCellsCount'),
        { setItemRef: c, itemRefs: d } = Ms(),
        m = H(),
        v = (S = 0) => {
          var $
          ;($ = d.value[S]) == null || $.focus()
        },
        g = (S) => {
          var $
          S ? ($ = d.value[S]) == null || $.blur() : d.value.forEach((k) => (k == null ? void 0 : k.blur()))
        },
        { computedClasses: h } = Bh('va-time-picker', o),
        _ = () => {
          const S = ((m == null ? void 0 : m.value) || 0) + 1
          ;(m.value = S % l.value.length), v(m.value)
        },
        y = () => {
          const S = ((m == null ? void 0 : m.value) || 0) - 1 + l.value.length
          ;(m.value = S % l.value.length), v(m.value)
        },
        b = p(() => ({ ...h, 'va-time-picker--framed': o.framed })),
        w = Kx('va-time-picker', () => {
          const S = ((u.value - 1) / 2) * i.value
          return { height: `${i.value * u.value}px`, 'cell-height': `${i.value}px`, 'column-gap-height': `${S}px` }
        })
      return (
        t({ focus: v, blur: g, focusNext: _, focusPrev: y }),
        (S, $) => (
          C(),
          A(
            'div',
            { class: Pe(['va-time-picker', b.value]), style: me(f(w)) },
            [
              (C(!0),
              A(
                Te,
                null,
                Ue(
                  f(l),
                  (k, z) => (
                    C(),
                    ee(
                      f(Gx),
                      {
                        key: z,
                        ref_for: !0,
                        ref: f(c),
                        items: k.items,
                        tabindex: S.disabled ? -1 : 0,
                        'cell-height': f(i),
                        activeItemIndex: k.activeItem.value,
                        'onUpdate:activeItemIndex': (V) => (k.activeItem.value = V),
                        onKeydown: [
                          $[0] ||
                            ($[0] = $e(
                              Se((V) => _(), ['stop', 'prevent']),
                              ['right'],
                            )),
                          $[1] ||
                            ($[1] = $e(
                              Se((V) => _(), ['exact', 'stop', 'prevent']),
                              ['tab'],
                            )),
                          $[2] ||
                            ($[2] = $e(
                              Se((V) => y(), ['stop', 'prevent']),
                              ['left'],
                            )),
                          $[3] ||
                            ($[3] = $e(
                              Se((V) => y(), ['shift', 'stop', 'prevent']),
                              ['tab'],
                            )),
                        ],
                        onFocus: (V) => (m.value = z),
                      },
                      null,
                      8,
                      ['items', 'tabindex', 'cell-height', 'activeItemIndex', 'onUpdate:activeItemIndex', 'onFocus'],
                    )
                  ),
                ),
                128,
              )),
            ],
            6,
          )
        )
      )
    },
  })
function qx(e, t) {
  let n = -1,
    o = -1
  const r = (s) => {
      var i
      ;(i = t.onStart) == null || i.call(t, s),
        clearTimeout(n),
        (n = setTimeout(
          () => {
            o = setInterval(() => {
              var u
              return (u = t.onUpdate) == null ? void 0 : u.call(t, s)
            }, t.interval || 100)
          },
          f(t.delay) || 500,
        ))
    },
    a = (s) => {
      var i
      clearTimeout(n), clearInterval(o), (i = t.onEnd) == null || i.call(t, s)
    },
    l = Yr(e)
  ft(['keydown'], r, l), ft(['keyup', 'blur'], a, !0)
}
const Pf = Qe(un, ['focused', 'maxLength', 'counterValue']),
  Yx = re({
    name: 'VaTimeInput',
    inheritAttrs: !1,
    __name: 'VaTimeInput',
    props: {
      ...Pf,
      ...$n,
      ...Le,
      ...rl,
      ...Qe(Bl),
      ...ro,
      ...Tt,
      closeOnContentClick: { type: Boolean, default: !1 },
      offset: { ...$n.offset, default: () => [2, 0] },
      placement: { ...$n.placement, default: 'bottom-end' },
      modelValue: { type: Date, default: void 0 },
      clearValue: { type: Date, default: null },
      format: { type: Function },
      parse: { type: Function },
      manualInput: { type: Boolean, default: !1 },
      leftIcon: { type: Boolean, default: !1 },
      icon: { type: String, default: 'schedule' },
      ariaLabel: Be('$t:selectedTime'),
      ariaResetLabel: Be('$t:resetTime'),
      ariaToggleDropdownLabel: Be('$t:toggleDropdown'),
    },
    emits: [...Vs, ...Bo, ...Os, ...Mt, ...Ac, 'update:modelValue'],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        a = je(),
        l = je(),
        { isOpenSync: s, dropdownProps: i } = Ec(o, r, {
          defaultCloseOnValueUpdate: p(() => Array.isArray(o.view) && o.view.length === 1),
        }),
        { valueComputed: u } = vt(o, r),
        { parse: c, isValid: d } = Lx(o),
        { format: m } = Bx(o),
        v = p(() => m(u.value || o.clearValue)),
        g = p({
          get() {
            return o.disabled || o.readonly ? !1 : s.value
          },
          set(te) {
            ;(s.value = te),
              dt(
                te
                  ? () => {
                      var q
                      return (q = l.value) == null ? void 0 : q.focus()
                    }
                  : () => {
                      var q
                      return (q = a.value) == null ? void 0 : q.focus()
                    },
              )
          },
        }),
        { isFocused: h, focus: _, blur: y, onFocus: b, onBlur: w } = lo(a),
        S = (te) => {
          var q
          if (o.disabled) return
          const Q = (q = te.target) == null ? void 0 : q.value
          if (!Q) return $()
          const ie = c(Q)
          d.value && ie ? (u.value = ie) : ((u.value = void 0), (d.value = !0))
        },
        $ = () =>
          B(() => {
            r('update:modelValue', o.clearValue), r('clear'), K(), Ce()
          }),
        {
          computedError: k,
          computedErrorMessages: z,
          listeners: V,
          validationAriaAttributes: T,
          withoutValidation: B,
          resetValidation: K,
          isDirty: j,
          isTouched: U,
        } = ao(o, r, { reset: $, focus: _, value: u })
      ge(g, (te) => {
        te || (U.value = !0)
      })
      const { canBeCleared: D, clearIconProps: O, onFocus: R, onBlur: N } = Ls(o, v),
        x = p(() => D.value && v.value !== m(o.clearValue)),
        ce = it(Pf),
        ue = p(() => ({
          ...ce.value,
          focused: h.value,
          error: k.value,
          errorMessages: z.value,
          readonly: o.readonly || !o.manualInput,
          modelValue: v.value,
        })),
        be = { seconds: 1e3, minutes: 1e3 * 60, hours: 1e3 * 60 * 60 },
        xe = (te) => {
          'key' in te &&
            (te.key === 'ArrowDown' && ((u.value = new Date(Number(u.value) - be[o.view])), te.preventDefault()),
            te.key === 'ArrowUp' && ((u.value = new Date(Number(u.value) + be[o.view])), te.preventDefault()))
        }
      qx(a, { onStart: xe, onUpdate: xe })
      const we = {
          onFocus: () => {
            o.disabled || (b(), !o.readonly && R())
          },
          onBlur: () => {
            o.disabled || (w(), !o.readonly && (N(), V.onBlur()))
          },
        },
        J = Zt(),
        _e = p(() => {
          const te = [o.leftIcon && 'prependInner', (!o.leftIcon || o.clearable) && 'icon']
          return Object.keys(J).filter((q) => !te.includes(q))
        }),
        Ce = () => {
          g.value = !1
        },
        I = (te, q, Q) => {
          g.value = !0
        },
        M = (te) =>
          s.value
            ? !1
            : o.disabled || o.readonly
              ? !0
              : te === void 0
                ? !1
                : o.manualInput && (te == null ? void 0 : te.code) !== 'Space',
        ae = (te) => {
          M(te instanceof KeyboardEvent ? te : void 0) || (g.value = !g.value)
        },
        se = p(() => (o.disabled ? {} : o.manualInput ? { cursor: 'text' } : { cursor: 'pointer' })),
        Ee = p(() => (o.manualInput ? (o.disabled || o.readonly ? -1 : 0) : -1)),
        He = p(() => ({ role: 'button', 'aria-hidden': !1, name: o.icon, color: 'secondary', tabindex: Ee.value })),
        { tp: P } = ut()
      Io()
      const E = p(() => ({
          ...i.value,
          innerAnchorSelector: '.va-input-wrapper__field',
          trigger: ['click', 'right-click', 'space', 'enter'],
        })),
        X = it(Qe(Bl))
      return (
        t({
          isFocused: h,
          isValid: d,
          value: u,
          isDirty: j,
          isTouched: U,
          focus: _,
          blur: y,
          reset: $,
          withoutValidation: B,
          resetValidation: K,
          toggleDropdown: ae,
          showDropdown: I,
          hideDropdown: Ce,
        }),
        (te, q) => (
          C(),
          ee(
            f(pn),
            le(
              {
                modelValue: g.value,
                'onUpdate:modelValue': q[1] || (q[1] = (Q) => (g.value = Q)),
                class: ['va-time-input', te.$attrs.class],
                style: te.$attrs.style,
              },
              E.value,
            ),
            {
              anchor: G(() => [
                ne(
                  f(un),
                  le(
                    { class: 'va-time-input__anchor', ref_key: 'input', ref: a, style: se.value },
                    { ...ue.value, ...f(T), ...we },
                    { onChange: S },
                  ),
                  Ht(
                    {
                      icon: G(() => [
                        x.value
                          ? (C(),
                            ee(
                              f(Ke),
                              le(
                                { key: 0, class: 'va-time-input__clear-button' },
                                { ...He.value, ...f(O) },
                                {
                                  'aria-label': f(P)(te.$props.ariaResetLabel),
                                  onClick: Se($, ['stop']),
                                  onKeydown: [$e(Se($, ['stop']), ['enter']), $e(Se($, ['stop']), ['space'])],
                                },
                              ),
                              null,
                              16,
                              ['aria-label', 'onKeydown'],
                            ))
                          : W('', !0),
                        !te.$props.leftIcon && te.$props.icon
                          ? (C(),
                            ee(
                              f(Ke),
                              le(
                                {
                                  key: 1,
                                  class: 'va-time-input__right-button va-time-input__side-button',
                                  'aria-label': f(P)(te.$props.ariaToggleDropdownLabel),
                                },
                                He.value,
                              ),
                              null,
                              16,
                              ['aria-label'],
                            ))
                          : W('', !0),
                      ]),
                      _: 2,
                    },
                    [
                      Ue(_e.value, (Q) => ({
                        name: Q,
                        fn: G((ie) => [
                          L(
                            te.$slots,
                            Q,
                            pe(
                              ke({
                                ...ie,
                                toggleDropdown: ae,
                                showDropdown: I,
                                hideDropdown: Ce,
                                isOpen: f(s),
                                focus: f(_),
                              }),
                            ),
                          ),
                        ]),
                      })),
                      te.$slots.prependInner || te.$props.leftIcon
                        ? {
                            name: 'prependInner',
                            fn: G((Q) => [
                              L(
                                te.$slots,
                                'prependInner',
                                pe(
                                  ke({
                                    ...Q,
                                    toggleDropdown: ae,
                                    showDropdown: I,
                                    hideDropdown: Ce,
                                    isOpen: f(s),
                                    focus: f(_),
                                  }),
                                ),
                              ),
                              te.$props.leftIcon
                                ? (C(),
                                  ee(
                                    f(Ke),
                                    le(
                                      {
                                        key: 0,
                                        class: 'va-time-input__left-button va-time-input__side-button',
                                        'aria-label': f(P)(te.$props.ariaToggleDropdownLabel),
                                      },
                                      He.value,
                                    ),
                                    null,
                                    16,
                                    ['aria-label'],
                                  ))
                                : W('', !0),
                            ]),
                            key: '0',
                          }
                        : void 0,
                    ],
                  ),
                  1040,
                  ['style'],
                ),
              ]),
              default: G(() => [
                ne(
                  f(ir),
                  {
                    'no-padding': '',
                    onKeydown: [$e(Se(Ce, ['prevent']), ['esc']), $e(Se(Ce, ['prevent']), ['enter'])],
                  },
                  {
                    default: G(() => [
                      ne(
                        Bl,
                        le({ ref_key: 'timePicker', ref: l }, f(X), {
                          modelValue: f(u),
                          'onUpdate:modelValue': q[0] || (q[0] = (Q) => (nt(u) ? (u.value = Q) : null)),
                        }),
                        null,
                        16,
                        ['modelValue'],
                      ),
                    ]),
                    _: 1,
                  },
                  8,
                  ['onKeydown'],
                ),
              ]),
              _: 3,
            },
            16,
            ['modelValue', 'class', 'style'],
          )
        )
      )
    },
  }),
  Xx = ye(Yx),
  Af = (e) => (e == null ? void 0 : e.props),
  Ef = (e) => {
    var t
    return !!((t = e == null ? void 0 : e.props) != null && t.active) || !1
  },
  Jx = (e) => e.type === Te,
  Qx = (e) => e && e.length === 0
function Zx(e) {
  var t
  const n = (t = e.default) == null ? void 0 : t.call(e)
  return !n || Qx(n) ? [] : Jx(n[0]) ? n[0].children : n
}
const eO = (e) => {
    const t = Zx(e.slots)
    return (
      t.forEach((n, o) => {
        Af(n) || (n.props = {})
        const r = Af(n)
        ;(r.vertical = e.props.vertical),
          e.props.centered && (r.inverted = !!(o % 2)),
          o === 0 && (r.isFirst = !0),
          o === t.length - 1 && (r.isLast = !0)
        const a = r.active
        if (!a) return
        o === 0 && (r.activePrevious = a),
          o === t.length - 1 && (r.activeNext = a),
          Ef(t[o - 1]) && (r.activePrevious = !0),
          Ef(t[o + 1]) && (r.activeNext = !0)
      }),
      t
    )
  },
  Vl = 'va-timeline',
  tO = {
    name: Vl,
    props: { ...Le, vertical: { type: Boolean }, centered: { type: Boolean }, alignTop: { type: Boolean } },
    setup(e, { slots: t }) {
      return () =>
        Ze(
          'div',
          { class: { [Vl]: !0, [`${Vl}--vertical`]: e.vertical, [`${Vl}--align-top`]: e.alignTop } },
          eO({ props: e, slots: t }),
        )
    },
  },
  nO = ye(tO),
  Un = 'va-timeline-separator',
  oO = re({
    name: Un,
    props: {
      ...Le,
      color: { type: String, default: 'primary' },
      vertical: { type: Boolean },
      active: { type: Boolean },
      activePrevious: { type: Boolean },
      activeNext: { type: Boolean },
    },
    setup(e) {
      const { getColor: t } = Re()
      return () =>
        Ze('div', { class: { [Un]: !0, [`${Un}--vertical`]: e.vertical } }, [
          Ze('div', {
            class: { [`${Un}__line`]: !0, [`${Un}__line--active`]: e.activePrevious },
            style: { backgroundColor: t(e.activePrevious ? e.color : 'divider') },
          }),
          Ze('div', {
            class: { [`${Un}__center`]: !0, [`${Un}__center--active`]: e.active },
            style: { backgroundColor: t(e.active ? e.color : 'divider') },
          }),
          Ze('div', {
            class: { [`${Un}__line`]: !0, [`${Un}__line--active`]: e.activeNext },
            style: { backgroundColor: t(e.activeNext ? e.color : 'divider') },
          }),
        ])
    },
  }),
  yy = ye(oO),
  Ho = 'va-timeline-item',
  If = Qe(yy),
  rO = re({
    name: Ho,
    props: {
      ...Le,
      ...If,
      color: { type: String, default: 'primary' },
      isFirst: { type: Boolean },
      isLast: { type: Boolean },
      inverted: { type: Boolean },
    },
    setup(e, { slots: t }) {
      const n = [Ze(yy, { ...it(If).value })],
        o = e.inverted ? t.after : t.before
      o && n.unshift(Ze('div', { class: `${Ho}__before` }, o()))
      const r = e.inverted ? t.before : t.after
      return (
        r && n.push(Ze('div', { class: `${Ho}__after` }, r())),
        () =>
          Ze(
            'div',
            {
              class: [
                { [Ho]: !0 },
                { [`${Ho}--vertical`]: e.vertical },
                { [`${Ho}--is-first`]: e.isFirst },
                { [`${Ho}--is-last`]: e.isLast },
              ],
            },
            n,
          )
      )
    },
  }),
  aO = ye(rO),
  lO = ye(Bl),
  sO = {
    nodes: { type: Array, default: [] },
    stateful: { type: Boolean, default: !0 },
    selectable: { type: Boolean, default: !1 },
    selectionType: { type: String, default: 'leaf', validator: (e) => ['leaf', 'independent'].includes(e) },
    valueBy: { type: [String, Function], default: 'id' },
    textBy: { type: [String, Function], default: 'label' },
    trackBy: { type: [String, Function], default: 'id' },
    iconBy: { type: [String, Function], default: 'icon' },
    disabledBy: { type: [String, Function], default: 'disabled' },
    expandedBy: { type: [String, Function], default: 'expanded' },
    checkedBy: { type: [String, Function], default: 'checked' },
    childrenBy: { type: [String, Function], default: 'children' },
    expandAll: { type: Boolean, default: !1 },
    expanded: { type: Array, default: [] },
    expandNodeBy: { type: String, default: 'leaf' },
    filter: { type: String, default: '' },
    filterMethod: { type: Function, default: void 0 },
    checked: { type: Array, default: [] },
    color: { type: String, default: 'primary' },
  },
  iO = ['update:modelValue', 'update:checked', 'update:expanded', 'update:selected'],
  uO = (e) => {
    const t = (m) => {
        const v = typeof m
        return v === 'string' || v === 'number'
      },
      n = (m, v) => (!v || t(m) ? m : xh(m, v)),
      o = (m) => n(m, e.valueBy),
      r = (m) => (e.valueBy && e.nodes.find((v) => m === o(v))) || m,
      a = (m) => n(m, e.textBy),
      l = (m) => n(m, e.checkedBy),
      s = (m) => n(m, e.disabledBy),
      i = (m) => n(m, e.expandedBy),
      u = (m) => n(m, e.trackBy),
      c = (m) => n(m, e.childrenBy) ?? [],
      d = (m, v) => {
        m.forEach((g) => {
          const h = g.children || []
          h.length && d(h, v), v(g)
        })
      }
    return {
      getText: a,
      getValue: o,
      getChecked: l,
      getTrackBy: u,
      getChildren: c,
      getDisabled: s,
      getExpanded: i,
      iterateNodes: d,
      getNodeByValue: r,
      getNodeProperty: n,
    }
  },
  _y = Symbol('TreeView'),
  cO = (e, t) => {
    const { emit: n, toggleNode: o, toggleCheckbox: r } = t,
      a = (_) => (_ == null ? void 0 : _.getAttribute('aria-expanded')) === 'true',
      l = (_) => {
        var y
        return ((y = _ == null ? void 0 : _.parentElement) == null ? void 0 : y.closest('.va-tree-node')) || null
      },
      s = (_) => (_ == null ? void 0 : _.previousElementSibling),
      i = (_) => {
        if (!_) return null
        let y = s(_),
          b = a(y) && m(y)
        if (b)
          do
            if (a(b)) {
              if (((b = m(b)), b)) continue
              break
            } else {
              y = b
              break
            }
          while (!0)
        return y || l(_)
      },
      u = (_) => (_ == null ? void 0 : _.nextElementSibling),
      c = (_) => {
        if (!_) return null
        let y = u(_)
        const b = a(_)
        if (!y) {
          let w = l(_)
          do
            if (u(w)) {
              y = u(w)
              break
            } else {
              if (((w = l(w)), w)) continue
              break
            }
          while (!0)
        }
        return b ? d(_) : y
      },
      d = (_) => {
        var y
        return (
          ((y = _ == null ? void 0 : _.querySelector('.va-tree-node-children')) == null
            ? void 0
            : y.firstElementChild) || null
        )
      },
      m = (_) => {
        var y
        return (
          ((y = _ == null ? void 0 : _.querySelector('.va-tree-node-children')) == null
            ? void 0
            : y.lastElementChild) || null
        )
      },
      v = (_, y, b) => {
        var w, S
        const $ = a(_)
        y === 'left' ? ($ ? o(b) : (w = l(_)) == null || w.focus()) : $ ? (S = d(_)) == null || S.focus() : o(b)
      },
      g = (_, y) => {
        var b, w
        y === 'up' ? (b = i(_)) == null || b.focus() : (w = c(_)) == null || w.focus()
      }
    return {
      handleKeyboardNavigation: (_, y) => {
        const b = _.target
        switch (_.code) {
          case 'ArrowUp':
            g(b, 'up')
            break
          case 'ArrowRight':
            v(b, 'right', y)
            break
          case 'ArrowDown':
            g(b, 'down')
            break
          case 'ArrowLeft':
            v(b, 'left', y)
            break
          case 'Space':
            if (e.selectable) {
              const w = typeof y.checked < 'u' ? !y.checked : null
              r(y, w)
            } else n('update:selected', y)
            break
          case 'Escape':
            e.selectable || n('update:selected', null), b.blur()
            break
          default:
            b.blur()
        }
      },
    }
  },
  dO = cO,
  mO = (e, t) => {
    const { getColor: n } = Re(),
      o = p(() => n(e.color)),
      r = p(() => e.selectionType === 'leaf'),
      {
        getText: a,
        getValue: l,
        getChecked: s,
        getTrackBy: i,
        getChildren: u,
        getDisabled: c,
        getExpanded: d,
        iterateNodes: m,
        getNodeProperty: v,
      } = uO(e),
      { nodes: g, expandAll: h, filter: _, filterMethod: y, textBy: b } = Sn(e),
      { valueComputed: w } = vt(e, t, 'expanded'),
      { valueComputed: S } = vt(e, t, 'checked'),
      $ = H(),
      k = p({
        get: () => $.value,
        set: (N) => {
          const x = l(N)
          $.value !== x && (($.value = x), t('update:selected', N))
        },
      }),
      z = (N, x, ce) => {
        ce
          ? (N.value = N.value.concat(x).filter((ue, be, xe) => xe.indexOf(ue) === be))
          : (N.value = N.value.filter((ue) => !x.includes(ue)))
      },
      V = (N, x) => {
        let ce = x === null ? !0 : x
        x && N.indeterminate && (ce = !1)
        const ue = [l(N)]
        if (r.value && N.hasChildren) {
          const be = (xe) => {
            xe.forEach((we) => {
              if (we.disabled) return
              const J = u(we)
              J.length && be(J), ue.push(l(we))
            })
          }
          be(u(N))
        }
        z(S, ue, ce)
      },
      T = (N) => {
        N.expanded = !N.expanded
      },
      B = ({ node: N, level: x, children: ce = [], computedFilterMethod: ue }) => {
        var be
        const xe = l(N)
        let we = !0
        const J = !!ce.length
        let _e = !1,
          Ce = S.value.includes(xe) || !1
        if (r.value && J) {
          const I = ce.every((M) => M.checked)
          ;(Ce = I), (_e = !I && ce.some((M) => M.indeterminate || M.checked)), _e && (Ce = null)
        }
        return (
          _.value &&
            (we =
              (ce == null ? void 0 : ce.some((I) => I.matchesFilter)) ||
              ((be = ue.value) == null ? void 0 : be.call(ue, N, _.value, b.value))),
          {
            ...N,
            level: x,
            checked: Ce,
            children: ce,
            get disabled() {
              return c(N) || !1
            },
            get expanded() {
              const I = e.expandedBy
              return I in N ? N[I] : w.value.includes(xe) || !1
            },
            set expanded(I) {
              const M = e.expandedBy
              ;(N[M] = I), J && z(w, [l(N)], I)
            },
            hasChildren: J,
            matchesFilter: we,
            indeterminate: _e,
          }
        )
      },
      K = p(() => (y != null && y.value ? y.value : (N, x) => a(N).toLowerCase().includes(x.toLowerCase()))),
      j = (N, x = 0) =>
        N.map((ce) => {
          const ue = u(ce)
          if (ue.length) {
            const be = j(ue, x + 1)
            return B({ node: ce, level: x, children: be, computedFilterMethod: K })
          }
          return B({ node: ce, level: x, computedFilterMethod: K })
        }),
      U = (N) =>
        N.filter(
          (x) => (
            x.children && (x.children = U(x.children)), x.children.length === 0 && (x.hasChildren = !1), x.matchesFilter
          ),
        ),
      { handleKeyboardNavigation: D } = dO(e, { emit: t, toggleCheckbox: V, toggleNode: T })
    ln(_y, {
      selectedNodeComputed: k,
      colorComputed: o,
      iconBy: e.iconBy,
      selectable: e.selectable,
      expandNodeBy: e.expandNodeBy,
      getText: a,
      getValue: l,
      getTrackBy: i,
      toggleNode: T,
      toggleCheckbox: V,
      getNodeProperty: v,
      handleKeyboardNavigation: D,
    })
    const O = p(() => j(g.value))
    return (
      (() => {
        const N = [],
          x = []
        m(g.value, (ce) => {
          ;(h.value || d(ce)) && N.push(l(ce)), s(ce) && x.push(l(ce))
        }),
          N.length && z(w, N, !0),
          x.length && z(S, x, !0)
      })(),
      { treeItems: p(() => U(O.value)), getText: a, getTrackBy: i, toggleCheckbox: V }
    )
  },
  fO = mO,
  pO = ['role', 'aria-expanded', 'aria-disabled', 'aria-checked', 'tabindex'],
  vO = { class: 'va-tree-node-root' },
  gO = { key: 2, class: 'va-tree-node-content__item' },
  hO = ['aria-hidden'],
  yO = 'The VaTreeNode component should be used in the context of VaTreeView component',
  _O = re({
    name: 'VaTreeNode',
    __name: 'VaTreeNode',
    props: { node: { type: Object, required: !0 } },
    setup(e) {
      const t = e,
        {
          iconBy: n,
          selectable: o,
          expandNodeBy: r,
          colorComputed: a,
          selectedNodeComputed: l,
          getText: s,
          getTrackBy: i,
          toggleNode: u,
          toggleCheckbox: c,
          getNodeProperty: d,
          handleKeyboardNavigation: m,
        } = ll(_y, yO),
        v = p(() => s(t.node) || ''),
        g = p(() => (t.node.hasChildren ? !!t.node.expanded : void 0)),
        h = p(() => d(t.node, n)),
        _ = p(() => (t.node.hasChildren ? 'group' : 'treeitem')),
        y = rt('va-tree-node', () => ({
          disabled: !!t.node.disabled,
          checked: !!t.node.checked,
          hasChildren: !!t.node.hasChildren,
          [`level-${t.node.level}`]: !0,
          [`expand-by-${r}`]: !0,
        })),
        b = rt('va-tree-node-children', () => ({ expanded: !!g.value })),
        w = rt('va-tree-node-content', () => ({ indent: t.node.hasChildren === !1 })),
        S = rt('va-tree-node-content', () => ({ clickable: t.node.hasChildren === !0 && r === 'node' })),
        $ = p(() => (t.node.disabled ? -1 : 0)),
        k = (z) => {
          r === (r === 'node' && z === 'leaf' ? 'node' : z) && u(t.node), (l.value = t.node)
        }
      return (z, V) => {
        const T = Je('va-tree-node', !0)
        return (
          C(),
          A(
            'div',
            {
              class: Pe(['va-tree-node', f(y)]),
              role: _.value,
              'aria-expanded': g.value,
              'aria-disabled': z.$props.node.disabled,
              'aria-checked': !!z.$props.node.checked,
              tabindex: $.value,
              onKeydown: [
                V[4] ||
                  (V[4] = $e(
                    Se((B) => f(m)(B, z.$props.node), ['stop', 'prevent']),
                    ['up'],
                  )),
                V[5] ||
                  (V[5] = $e(
                    Se((B) => f(m)(B, z.$props.node), ['stop', 'prevent']),
                    ['right'],
                  )),
                V[6] ||
                  (V[6] = $e(
                    Se((B) => f(m)(B, z.$props.node), ['stop', 'prevent']),
                    ['down'],
                  )),
                V[7] ||
                  (V[7] = $e(
                    Se((B) => f(m)(B, z.$props.node), ['stop', 'prevent']),
                    ['left'],
                  )),
                V[8] ||
                  (V[8] = $e(
                    Se((B) => f(m)(B, z.$props.node), ['stop', 'prevent']),
                    ['space'],
                  )),
                V[9] ||
                  (V[9] = $e(
                    Se((B) => f(m)(B, z.$props.node), ['stop', 'prevent']),
                    ['esc'],
                  )),
              ],
            },
            [
              Y('div', vO, [
                Y(
                  'div',
                  { class: Pe(['va-tree-node-content', f(w)]), onClick: V[3] || (V[3] = (B) => k('node')) },
                  [
                    z.$props.node.hasChildren
                      ? (C(),
                        A(
                          'div',
                          {
                            key: 0,
                            class: 'va-tree-node-content__item va-tree-node-content__item--leaf',
                            onClick: V[0] || (V[0] = Se((B) => k('leaf'), ['stop'])),
                          },
                          [
                            L(z.$slots, 'icon-toggle', pe(ke(z.$props.node)), () => [
                              ne(
                                f(Ke),
                                { name: g.value ? 'keyboard_arrow_down' : 'keyboard_arrow_right', size: '20px' },
                                null,
                                8,
                                ['name'],
                              ),
                            ]),
                          ],
                        ))
                      : W('', !0),
                    f(o)
                      ? (C(),
                        A(
                          'div',
                          {
                            key: 1,
                            class: 'va-tree-node-content__item',
                            onClick: V[2] || (V[2] = Se(() => {}, ['stop'])),
                          },
                          [
                            L(z.$slots, 'checkbox', pe(ke(z.$props.node)), () => [
                              ne(
                                f(ol),
                                {
                                  'model-value': z.$props.node.checked,
                                  color: f(a),
                                  indeterminate: '',
                                  'onUpdate:modelValue': V[1] || (V[1] = (B) => f(c)(z.$props.node, B)),
                                  class: 'va-tree-node__checkbox',
                                },
                                null,
                                8,
                                ['model-value', 'color'],
                              ),
                            ]),
                          ],
                        ))
                      : W('', !0),
                    h.value
                      ? (C(),
                        A('div', gO, [
                          L(z.$slots, 'icon', pe(ke(z.$props.node)), () => [
                            ne(f(Ke), { name: h.value, size: 'small' }, null, 8, ['name']),
                          ]),
                        ]))
                      : W('', !0),
                    Y(
                      'div',
                      { class: Pe(['va-tree-node-content__body', f(S)]) },
                      [L(z.$slots, 'content', pe(ke(z.$props.node)), () => [Fe(Ae(v.value), 1)])],
                      2,
                    ),
                  ],
                  2,
                ),
              ]),
              Pn(
                Y(
                  'div',
                  { 'aria-hidden': !z.$props.node.expanded, class: Pe(['va-tree-node-children', f(b)]) },
                  [
                    (C(!0),
                    A(
                      Te,
                      null,
                      Ue(
                        z.$props.node.children,
                        (B) => (
                          C(),
                          ee(
                            T,
                            { key: f(i)(B), node: B },
                            Ht({ _: 2 }, [
                              Ue(z.$slots, (K, j) => ({ name: j, fn: G((U) => [L(z.$slots, j, pe(ke(U)))]) })),
                            ]),
                            1032,
                            ['node'],
                          )
                        ),
                      ),
                      128,
                    )),
                  ],
                  10,
                  hO,
                ),
                [[Aa, z.$props.node.hasChildren]],
              ),
            ],
            42,
            pO,
          )
        )
      }
    },
  }),
  bO = ye(_O),
  zO = { class: 'va-tree-view', role: 'tree' },
  CO = re({
    name: 'VaTreeView',
    __name: 'VaTreeView',
    props: { ...sO },
    emits: [...iO],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        { treeItems: r, getTrackBy: a } = fO(n, o)
      return (l, s) => (
        C(),
        A('div', zO, [
          l.$props.filter && !f(r).length
            ? L(l.$slots, 'not-found', { key: 0 }, () => [Fe('No matching nodes found')])
            : (C(!0),
              A(
                Te,
                { key: 1 },
                Ue(
                  f(r),
                  (i) => (
                    C(),
                    ee(
                      f(bO),
                      { key: f(a)(i), node: i },
                      Ht({ _: 2 }, [Ue(l.$slots, (u, c) => ({ name: c, fn: G((d) => [L(l.$slots, c, pe(ke(d)))]) }))]),
                      1032,
                      ['node'],
                    )
                  ),
                ),
                128,
              )),
        ])
      )
    },
  }),
  SO = ye(CO),
  wO = { class: 'va-scroll-container__content' },
  $O = re({
    name: 'VaScrollContainer',
    __name: 'VaScrollContainer',
    props: {
      ...dr,
      vertical: { type: Boolean, default: !1 },
      horizontal: { type: Boolean, default: !1 },
      color: { type: String, default: 'secondary' },
      rtl: { type: Boolean, default: !1 },
      gradient: { type: Boolean, default: !1 },
      sizesConfig: { type: Object, default: () => ({ defaultSize: 4, sizes: { small: 4, medium: 6, large: 8 } }) },
      size: { type: String, default: 'small', validator: (e) => ['small', 'medium', 'large'].includes(e) },
    },
    setup(e) {
      const t = e,
        { getColor: n } = Re(),
        { sizeComputed: o } = mr(t),
        r = p(() => (t.horizontal ? 'auto' : 'hidden')),
        a = p(() => (t.vertical ? 'auto' : 'hidden')),
        l = p(() => {
          const u = n(t.color)
          return t.gradient
            ? `linear-gradient(0deg, var(--va-scroll-container-scrollbar-gradient-to) 0%, ${u} 100%)`
            : u
        }),
        s = p(() => o.value),
        i = p(() => (t.rtl ? 'rtl' : 'ltr'))
      return (u, c) => (
        C(),
        A(
          'div',
          {
            class: 'va-scroll-container',
            style: me(
              `--va-scroll-color: ${String(l.value)};--va-scrollbar-size: ${String(s.value)};--va-overflow-x: ${String(
                r.value,
              )};--va-overflow-y: ${String(a.value)};--va-scrollbar-position: ${String(i.value)}`,
            ),
          },
          [Y('div', wO, [L(u.$slots, 'default')])],
          4,
        )
      )
    },
  }),
  kO = ye($O),
  TO = { class: 'va-viewer-content' },
  VO = re({
    name: 'VaViewer',
    inheritAttrs: !1,
    __name: 'VaViewer',
    setup(e, { expose: t }) {
      const n = H(),
        o = H(),
        r = Xa(),
        a = H(!0),
        l = p(() => r.value && !a.value),
        s = () => (a.value = !1),
        i = () => (a.value = !0),
        u = Zt(),
        c = () => {
          u.anchor || s()
        }
      Ps([n, o], i)
      const d = vr(),
        m = p(() => {
          var v
          return (v = d.value) == null ? void 0 : v.body
        })
      return (
        t({ openViewer: s, closeViewer: i }),
        (v, g) => (
          C(),
          A(
            Te,
            null,
            [
              Y(
                'div',
                le({ class: 'va-viewer' }, v.$attrs, { onClick: c }),
                [
                  L(v.$slots, 'anchor', pe(ke({ openViewer: s }))),
                  v.$slots.anchor ? W('', !0) : L(v.$slots, 'default', { key: 0 }),
                ],
                16,
              ),
              l.value
                ? (C(),
                  ee(
                    Ta,
                    { key: 0, to: m.value },
                    [
                      Y('div', TO, [
                        Y(
                          'div',
                          { ref_key: 'content', ref: n, class: 'va-viewer-content__main-area' },
                          [v.$slots.image ? W('', !0) : L(v.$slots, 'default', { key: 0 }), L(v.$slots, 'image')],
                          512,
                        ),
                        Y(
                          'div',
                          { ref_key: 'controls', ref: o, class: 'va-viewer-content__controls-panel' },
                          [
                            L(v.$slots, 'controls'),
                            L(v.$slots, 'close', pe(ke({ close: i })), () => [
                              Y('button', { class: 'va-viewer-content__close-button', onClick: i }, [
                                ne(f(Ke), { name: 'close', color: 'backgroundPrimary' }),
                              ]),
                            ]),
                          ],
                          512,
                        ),
                      ]),
                    ],
                    8,
                    ['to'],
                  ))
                : W('', !0),
            ],
            64,
          )
        )
      )
    },
  }),
  PO = ye(VO),
  AO = re({
    name: 'VaValue',
    props: { defaultValue: { type: null, required: !1, default: !1 } },
    setup(e, { slots: t }) {
      const n = H(e.defaultValue),
        o = new Proxy(n, {
          get(r, a) {
            return a === 'value' ? r.value : r[a]
          },
          set(r, a, l) {
            return a === 'value' && (r.value = l), !0
          },
        })
      return () => Ze(Te, [Bg(t.default, o)])
    },
  }),
  EO = ye(AO),
  IO = (e) => {
    const t = document.createElement('div')
    ;(t.style.position = 'absolute'), (t.style.top = '0'), (t.style.left = '0'), (t.style.width = 'auto')
    const { font: n } = window.getComputedStyle(e)
    return (
      (t.style.font = n),
      (t.textContent = 'Vuestic'),
      (t.style.zIndex = '-1'),
      (t.style.pointerEvents = 'none'),
      (t.style.opacity = '0'),
      (t.ariaHidden = 'true'),
      (t.innerText = e.value),
      t
    )
  },
  xO = (e, t) => {
    const n = H(),
      o = H()
    return (
      ge(e, (r) => {
        var a, l
        r &&
          ((n.value = IO(r)), (l = (a = e.value) == null ? void 0 : a.parentElement) == null || l.appendChild(n.value))
      }),
      ar(n, (r) => {
        !r || !e.value || (o.value = r[0].contentRect.height)
      }),
      ge(t, (r) => {
        n.value && ((n.value.innerText = String(r)), (n.value.innerHTML += '&nbsp;;'))
      }),
      o
    )
  },
  OO = ['rows', 'loading', 'ariaLabel'],
  xf = (e) => {
    if (e > 0) return !0
    throw new Error(`\`minRows|maxRows\` must be a positive integer greater than 0, but ${e} is provided`)
  },
  { createEmits: LO, createListeners: BO } = hr(['input', 'change', 'click', 'update:modelValue']),
  Of = Qe(un),
  NO = re({
    name: 'VaTextarea',
    __name: 'VaTextarea',
    props: {
      ...Ro,
      ...Of,
      ...Tt,
      ...ro,
      modelValue: { type: [String, Number], default: '' },
      placeholder: { type: String },
      autosize: { type: Boolean, default: !1 },
      minRows: { type: [Number, String], default: 1, validator: xf },
      maxRows: { type: [Number, String], validator: xf },
      resize: { type: Boolean, default: !0 },
      clearValue: { type: [String], default: '' },
    },
    emits: [...LO(), ...Bo],
    setup(e, { expose: t, emit: n }) {
      const o = e,
        r = n,
        a = Io(),
        l = je(),
        { valueComputed: s } = vt(o, r, 'modelValue', { defaultValue: '' }),
        i = () => {
          Bn(l.value)
        },
        u = () => {
          Ts(l.value)
        },
        c = () =>
          w(() => {
            r('update:modelValue', o.clearValue), r('clear'), b()
          }),
        {
          isDirty: d,
          isTouched: m,
          computedError: v,
          computedErrorMessages: g,
          listeners: h,
          validationAriaAttributes: _,
          isLoading: y,
          resetValidation: b,
          withoutValidation: w,
        } = ao(o, r, { value: s, focus: i, reset: c }),
        S = p(() => o.resize && !o.autosize),
        $ = H(o.minRows),
        k = xO(l, s)
      function z() {
        let U = parseFloat(String(o.minRows)),
          D = parseFloat(String(o.maxRows))
        if (((U = isNaN(U) ? 1 : U), (D = isNaN(D) ? 1 / 0 : D), !o.autosize)) {
          $.value = Math.max(D, Math.min(U, D ?? 0))
          return
        }
        if (!k.value || !l.value) return
        const O = getComputedStyle(l.value),
          R = k.value,
          N = parseFloat(O.lineHeight),
          x = Math.max(U * N, U + Math.round(N)),
          ce = D * N || 1 / 0,
          ue = Math.max(x, Math.min(ce, R ?? 0))
        ;($.value = Math.round(ue / N)), (l.value.style.height = `${ue + 1}px`)
      }
      vn(() => {
        z()
      })
      const V = p(() => ({ resize: S.value ? void 0 : 'none' })),
        T = p(() => ({ ...yt(o, ['disabled', 'readonly', 'placeholder', 'name']) })),
        B = p(() => ({ ..._.value, ...Rn(a, ['class', 'style']) })),
        K = it(Of),
        j = BO(r)
      return (
        t({
          isDirty: d,
          isTouched: m,
          isLoading: y,
          computedError: v,
          computedErrorMessages: g,
          reset: c,
          focus: i,
          blur: u,
          value: s,
          withoutValidation: w,
          resetValidation: b,
        }),
        (U, D) => (
          C(),
          ee(
            f(un),
            le({ class: 'va-textarea' }, f(K), { error: f(v), 'error-messages': f(g) }),
            {
              default: G(() => [
                Y(
                  'div',
                  { class: Pe(['va-textarea__resize-wrapper', { 'va-textarea__resize-wrapper--resizable': S.value }]) },
                  [
                    Pn(
                      Y(
                        'textarea',
                        le(
                          { 'onUpdate:modelValue': D[0] || (D[0] = (O) => (nt(s) ? (s.value = O) : null)) },
                          { ...T.value, ...f(j), ...B.value, ...f(h) },
                          {
                            class: ['va-textarea__textarea', { 'va-textarea__textarea--autosize': e.autosize }],
                            ref_key: 'textarea',
                            ref: l,
                            rows: $.value,
                            style: V.value,
                            loading: f(y),
                            ariaLabel: U.$props.label,
                          },
                        ),
                        null,
                        16,
                        OO,
                      ),
                      [[Wl, f(s)]],
                    ),
                  ],
                  2,
                ),
              ]),
              _: 1,
            },
            16,
            ['error', 'error-messages'],
          )
        )
      )
    },
  }),
  RO = no(NO),
  Lf = '[role="menuitem"]:not([aria-disabled="true"])',
  DO = '[role="menuitem"]:focus',
  MO = (e) => ({ role: 'menuitem', tabindex: -1, 'aria-disabled': !!e.disabled }),
  FO = () => ({ role: 'menu', tabindex: 0 }),
  jO = (e) => {
    ft(
      'keydown',
      ({ key: t }) => {
        if (!e.value) return
        const n = e.value.querySelectorAll(Lf),
          o = e.value.querySelector(DO)
        if (n.length) {
          if (!o) {
            const r = e.value.querySelector(Lf)
            r && Bn(r)
            return
          }
          if (t === 'ArrowDown' || t === 'ArrowRight') {
            const r = Array.from(n).indexOf(o)
            Bn(n[r + 1])
          }
          if (t === 'ArrowUp' || t === 'ArrowLeft') {
            const r = Array.from(n).indexOf(o)
            Bn(n[r - 1])
          }
        }
      },
      e,
    )
  },
  HO = { class: 'va-menu-item__cell va-menu-item__cell--left' },
  UO = { class: 'va-menu-item__cell va-menu-item__cell--center' },
  WO = { class: 'va-menu-item__content' },
  GO = { class: 'va-menu-item__cell va-menu-item__cell--right' },
  by = re({
    name: 'VaMenuItem',
    __name: 'VaMenuItem',
    props: {
      name: { type: String, default: '' },
      icon: { type: String, defatult: '' },
      rightIcon: { type: String, defatult: '' },
      disabled: { type: Boolean, default: !1 },
    },
    emits: ['selected'],
    setup(e, { emit: t }) {
      const { hasKeyboardFocus: n, keyboardFocusListeners: o } = bT()
      return (r, a) => (
        C(),
        A(
          'tr',
          le({ class: 'va-menu-item' }, f(MO)({ disabled: e.disabled }), yn(f(o), !0), {
            class: { 'va-menu-item--disabled': e.disabled, 'va-menu-item--keyboard-focus': f(n) },
            onClick: a[0] || (a[0] = (l) => r.$emit('selected')),
            onKeydown: a[1] || (a[1] = $e((l) => r.$emit('selected'), ['enter', 'space'])),
          }),
          [
            Y('td', HO, [
              L(r.$slots, 'left-icon', {}, () => [
                e.icon
                  ? (C(), ee(f(Ke), { key: 0, class: 'va-menu-item__icon--left', name: e.icon }, null, 8, ['name']))
                  : W('', !0),
              ]),
            ]),
            Y('td', UO, [L(r.$slots, 'default', {}, () => [Y('a', WO, Ae(e.name), 1)])]),
            Y('td', GO, [
              L(r.$slots, 'right-icon', {}, () => [
                e.rightIcon
                  ? (C(),
                    ee(f(Ke), { key: 0, class: 'va-menu-item__icon--right', name: e.rightIcon }, null, 8, ['name']))
                  : W('', !0),
              ]),
            ]),
          ],
          16,
        )
      )
    },
  }),
  KO = { class: 'va-menu-list__group-name' },
  qO = re({
    name: 'VaMenuGroup',
    __name: 'VaMenuGroup',
    props: { groupName: { type: String, required: !0 }, color: { type: String, default: 'secondary' } },
    setup(e) {
      const t = e,
        { getColor: n } = Re(),
        o = p(() => n(t.color))
      return (r, a) => (
        C(),
        A(
          Te,
          null,
          [
            Y(
              'div',
              {
                class: 'va-menu-list__group-name-wrapper',
                colspan: '99999',
                style: me(`--va-color-computed: ${String(o.value)}`),
              },
              [Y('span', KO, Ae(e.groupName), 1)],
              4,
            ),
            L(r.$slots, 'default', { style: me(`--va-color-computed: ${String(o.value)}`) }, void 0, !0),
          ],
          64,
        )
      )
    },
  }),
  zy = yr(qO, [['__scopeId', 'data-v-4dd1ae9a']]),
  YO = { colspan: '9999' },
  XO = re({
    name: 'VaMenuList',
    __name: 'VaMenuList',
    props: { ...Xr, options: { type: Array, default: () => [] } },
    emits: ['selected'],
    setup(e, { emit: t }) {
      const n = e,
        o = H()
      jO(o)
      const { getText: r, getValue: a, getDisabled: l, getGroupBy: s, getTrackBy: i } = Jr(n),
        u = p(() =>
          n.options.reduce(
            (v, g) => {
              const h = s(g)
              return h ? (v[h] || (v[h] = []), v[h].push(g)) : v._noGroup.push(g), v
            },
            { _noGroup: [] },
          ),
        ),
        c = (v) => (Array.isArray(v) && v[0].type === Te ? v[0].children : v),
        d = (v) => (typeof v.type == 'object' && 'name' in v.type && typeof v.type.name == 'string' ? v.type.name : ''),
        m = (v) =>
          typeof v.type == 'string'
            ? v.type
            : typeof v.type == 'object' && 'name' in v.type && typeof v.type.name == 'string'
              ? v.type.name
              : String(v.key)
      return (v, g) => (
        C(),
        A(
          'table',
          le({ class: 'va-menu-list', ref_key: 'container', ref: o }, f(FO)()),
          [
            Y('tbody', null, [
              v.$slots.default
                ? (C(!0),
                  A(
                    Te,
                    { key: 0 },
                    Ue(
                      c(v.$slots.default()),
                      (h) => (
                        C(),
                        A(
                          Te,
                          null,
                          [
                            d(h) === 'VaMenuItem'
                              ? (C(), ee(an(h), { key: m(h) + 'menuitem' }))
                              : d(h) === 'VaDropdown'
                                ? (C(), ee(an(h), { key: m(h) + 'menu-dropdown' }))
                                : (C(),
                                  A('td', { colspan: '999', key: m(h), class: 'va-menu-list__virtual-td' }, [
                                    (C(), ee(an(h))),
                                  ])),
                          ],
                          64,
                        )
                      ),
                    ),
                    256,
                  ))
                : L(v.$slots, 'default', { key: 1 }, () => [
                    (C(!0),
                    A(
                      Te,
                      null,
                      Ue(
                        u.value,
                        (h, _) => (
                          C(),
                          A(
                            Te,
                            { key: _ },
                            [
                              _ !== '_noGroup'
                                ? L(v.$slots, 'group', { key: 0 }, () => [
                                    Y('tr', null, [
                                      Y('td', YO, [ne(zy, { 'group-name': _ }, null, 8, ['group-name'])]),
                                    ]),
                                  ])
                                : W('', !0),
                              (C(!0),
                              A(
                                Te,
                                null,
                                Ue(
                                  h,
                                  (y) => (
                                    C(),
                                    ee(
                                      by,
                                      {
                                        key: f(i)(y),
                                        name: f(r)(y),
                                        icon: y.icon,
                                        'right-icon': y.rightIcon,
                                        disabled: f(l)(y),
                                        onSelected: (b) => v.$emit('selected', f(a)(y), y),
                                      },
                                      {
                                        'left-icon': G((b) => [L(v.$slots, 'left-icon', pe(ke(b)))]),
                                        'right-icon': G((b) => [L(v.$slots, 'right-icon', pe(ke(b)))]),
                                        _: 2,
                                      },
                                      1032,
                                      ['name', 'icon', 'right-icon', 'disabled', 'onSelected'],
                                    )
                                  ),
                                ),
                                128,
                              )),
                            ],
                            64,
                          )
                        ),
                      ),
                      128,
                    )),
                  ]),
            ]),
          ],
          16,
        )
      )
    },
  }),
  Fs = no(XO),
  JO = no(by),
  QO = no(zy),
  ZO = (e) => {
    vn(() => {
      e.value &&
        dt(() => {
          Bn(St(e.value))
        })
    })
  },
  Bf = Qe(Fs),
  eL = Yo(Fs),
  Nf = Qe(pn),
  tL = Yo(pn),
  nL = re({
    name: 'VaMenu',
    __name: 'VaMenu',
    props: { ...Le, ...Bf, ...Nf, stickToEdges: { type: Boolean, default: !0 } },
    emits: [...tL, ...eL],
    setup(e, { expose: t, emit: n }) {
      const o = H(),
        r = H()
      ZO(o)
      const a = () => {
          var u
          ;(u = r.value) == null || u.hide(),
            dt(() => {
              var c
              const d = St((c = r.value) == null ? void 0 : c.anchorRef)
              d && iu(d)
            })
        },
        l = (u) => {
          u.key === 'Escape' && a(), (u.key === 'ArrowDown' || u.key === 'ArrowUp') && u.preventDefault()
        },
        s = it(Bf),
        i = it(Nf)
      return (
        t({ close: a }),
        (u, c) => (
          C(),
          ee(
            f(pn),
            le(f(i), { ref_key: 'dropdown', ref: r }),
            {
              anchor: G(() => [L(u.$slots, 'anchor')]),
              default: G(() => [
                ne(
                  f(ir),
                  { onKeydown: l },
                  {
                    default: G(() => [
                      ne(
                        f(Fs),
                        le(
                          {
                            onKeydown:
                              c[0] ||
                              (c[0] = $e(
                                Se(() => {}, ['prevent', 'stop']),
                                ['enter', 'space'],
                              )),
                          },
                          f(s),
                          {
                            ref_key: 'menuList',
                            ref: o,
                            onSelected:
                              c[1] ||
                              (c[1] = (d) => {
                                u.$emit('selected', d), a()
                              }),
                          },
                        ),
                        Ht({ _: 2 }, [
                          u.$slots.default
                            ? { name: 'default', fn: G(() => [L(u.$slots, 'default')]), key: '0' }
                            : void 0,
                        ]),
                        1040,
                      ),
                    ]),
                    _: 3,
                  },
                ),
              ]),
              _: 3,
            },
            16,
          )
        )
      )
    },
  }),
  oL = no(nL),
  rL = { rules: () => [], dirty: !1, errorCount: 1, success: !1, messages: () => [], immediateValidation: !1 },
  aL = { stateful: !1 },
  lL = re({
    __name: 'VaFormField',
    props: vb(
      {
        stateful: { type: Boolean },
        modelValue: {},
        name: {},
        rules: {},
        dirty: { type: Boolean },
        error: { type: Boolean },
        errorMessages: {},
        errorCount: {},
        success: { type: Boolean },
        messages: {},
        immediateValidation: { type: Boolean },
        clearValue: {},
      },
      { ...aL, ...rL },
    ),
    emits: ['update:error', 'update:errorMessages', 'update:dirty', 'update:modelValue'],
    setup(e, { emit: t }) {
      const n = e,
        o = t,
        { valueComputed: r } = vt(n, o, 'modelValue'),
        a = () => {
          r.value = n.clearValue
        },
        l = () => {},
        {
          computedError: s,
          computedErrorMessages: i,
          validate: u,
          isDirty: c,
          isLoading: d,
          isValid: m,
          resetValidation: v,
          validationAriaAttributes: g,
          listeners: h,
        } = ao(n, o, { reset: a, focus: l, value: r }),
        _ = p(() => (s.value ? i.value : n.messages)),
        y = p(() => (m.value ? (n.success ? 'success' : '') : 'danger')),
        b = H(r.value)
      vn(() => {
        b.value = r.value
      })
      const w = () =>
        new Proxy(b, {
          get(S, $) {
            return $ === 'ref' ? b.value : Reflect.get(S, $)
          },
          set(S, $, k) {
            return $ === 'ref' ? ((b.value = k), (r.value = k), !0) : Reflect.set(r, $, k)
          },
        })
      return (S, $) => (
        C(),
        ee(
          f(ws),
          { 'model-value': _.value, 'has-error': !f(m), color: y.value },
          Ht(
            {
              default: G(({ ariaAttributes: k, attrs: z }) => [
                L(
                  S.$slots,
                  'default',
                  pe(
                    ke({
                      error: f(s),
                      errorMessages: _.value,
                      messages: _.value,
                      validate: f(u),
                      isDirty: f(c),
                      isLoading: f(d),
                      isValid: f(m),
                      resetValidation: f(v),
                      validationAriaAttributes: f(g),
                      ...f(h),
                      value: w(),
                      modelValue: w(),
                      ariaAttributes: k,
                      bind: { ...z, ...k, ...f(h) },
                    }),
                  ),
                ),
              ]),
              _: 2,
            },
            [Ue(['message', 'messages'], (k) => ({ name: k, fn: G((z) => [L(S.$slots, k, pe(ke(z)))]) }))],
          ),
          1032,
          ['model-value', 'has-error', 'color'],
        )
      )
    },
  }),
  sL = no(lL),
  iL = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        VaAccordion: U1,
        VaAffix: X1,
        VaAlert: t$,
        VaAppBar: r$,
        VaAspectRatio: ch,
        VaAvatar: Ql,
        VaAvatarGroup: f$,
        VaBacktop: g$,
        VaBadge: yh,
        VaBreadcrumbs: B$,
        VaBreadcrumbsItem: L$,
        VaButton: Xe,
        VaButtonDropdown: xk,
        VaButtonGroup: As,
        VaButtonToggle: Lk,
        VaCard: Kk,
        VaCardActions: Wk,
        VaCardBlock: Gk,
        VaCardContent: Hk,
        VaCardTitle: Uk,
        VaCarousel: yT,
        VaCheckbox: ol,
        VaChip: kT,
        VaCollapse: ET,
        VaColorIndicator: Sc,
        VaColorInput: oV,
        VaColorPalette: lV,
        VaConfig: Ya,
        VaContent: dV,
        VaCounter: bV,
        VaDataTable: bP,
        VaDateInput: JP,
        VaDatePicker: QP,
        VaDivider: ey,
        VaDropdown: pn,
        VaDropdownContent: ir,
        VaFallback: Nr,
        VaFileUpload: OA,
        VaForm: DA,
        VaFormField: sL,
        VaHover: xl,
        VaIcon: Ke,
        VaImage: _c,
        VaInfiniteScroll: UA,
        VaInnerLoading: qh,
        VaInput: $c,
        VaInputWrapper: un,
        VaLayout: aE,
        VaList: ty,
        VaListItem: Ds,
        VaListItemLabel: uA,
        VaListItemSection: Fr,
        VaListLabel: iA,
        VaListSeparator: cA,
        VaMenu: oL,
        VaMenuGroup: QO,
        VaMenuItem: JO,
        VaMenuList: Fs,
        VaMessageList: ws,
        VaModal: dc,
        VaNavbar: pE,
        VaNavbarItem: vE,
        VaOptionList: VE,
        VaPagination: xE,
        VaParallax: DE,
        VaPopover: WE,
        VaProgressBar: ny,
        VaProgressCircle: qr,
        VaRadio: uy,
        VaRating: QE,
        VaScrollContainer: kO,
        VaSelect: II,
        VaSeparator: pw,
        VaSidebar: jI,
        VaSidebarItem: XI,
        VaSidebarItemContent: qI,
        VaSidebarItemTitle: YI,
        VaSkeleton: NI,
        VaSkeletonGroup: RI,
        VaSlider: lx,
        VaSpacer: gw,
        VaSplit: mx,
        VaStepper: Ex,
        VaStickyScrollbar: bw,
        VaSwitch: cy,
        VaTab: Sx,
        VaTabs: _x,
        VaTextarea: RO,
        VaTimeInput: Xx,
        VaTimePicker: lO,
        VaTimeline: nO,
        VaTimelineItem: aO,
        VaToast: Ug,
        VaTreeView: SO,
        VaValue: EO,
        VaViewer: PO,
        VaVirtualScroller: Bs,
      },
      Symbol.toStringTag,
      { value: 'Module' },
    ),
  ),
  uL = (e) => typeof e == 'function',
  vo = (e, t, ...n) => {
    uL(t) ? e.use(t(...n)) : e.use(t)
  },
  cL = oo((e = {}) => ({
    install(t) {
      const { config: n } = e
      rm(t),
        Object.entries(iL).forEach(([o, r]) => {
          t.component(o, r)
        }),
        vo(t, Vw(n)),
        vo(t, MS),
        vo(t, Ew(n)),
        vo(t, D1),
        vo(t, Lw),
        vo(t, a1),
        vo(t, r1),
        vo(t, N1),
        rm(null)
    },
  }))
var dL = !1
/*!
 * pinia v2.1.7
 * (c) 2023 Eduardo San Martin Morote
 * @license MIT
 */ let Cy
const js = (e) => (Cy = e),
  Sy = Symbol()
function pu(e) {
  return (
    e &&
    typeof e == 'object' &&
    Object.prototype.toString.call(e) === '[object Object]' &&
    typeof e.toJSON != 'function'
  )
}
var _a
;(function (e) {
  ;(e.direct = 'direct'), (e.patchObject = 'patch object'), (e.patchFunction = 'patch function')
})(_a || (_a = {}))
function mL() {
  const e = Cu(!0),
    t = e.run(() => H({}))
  let n = [],
    o = []
  const r = Pu({
    install(a) {
      js(r), (r._a = a), a.provide(Sy, r), (a.config.globalProperties.$pinia = r), o.forEach((l) => n.push(l)), (o = [])
    },
    use(a) {
      return !this._a && !dL ? o.push(a) : n.push(a), this
    },
    _p: n,
    _a: null,
    _e: e,
    _s: new Map(),
    state: t,
  })
  return r
}
const wy = () => {}
function Rf(e, t, n, o = wy) {
  e.push(t)
  const r = () => {
    const a = e.indexOf(t)
    a > -1 && (e.splice(a, 1), o())
  }
  return !n && Su() && rp(r), r
}
function zr(e, ...t) {
  e.slice().forEach((n) => {
    n(...t)
  })
}
const fL = (e) => e()
function vu(e, t) {
  e instanceof Map && t instanceof Map && t.forEach((n, o) => e.set(o, n)),
    e instanceof Set && t instanceof Set && t.forEach(e.add, e)
  for (const n in t) {
    if (!t.hasOwnProperty(n)) continue
    const o = t[n],
      r = e[n]
    pu(r) && pu(o) && e.hasOwnProperty(n) && !nt(o) && !Qn(o) ? (e[n] = vu(r, o)) : (e[n] = o)
  }
  return e
}
const pL = Symbol()
function vL(e) {
  return !pu(e) || !e.hasOwnProperty(pL)
}
const { assign: yo } = Object
function gL(e) {
  return !!(nt(e) && e.effect)
}
function hL(e, t, n, o) {
  const { state: r, actions: a, getters: l } = t,
    s = n.state.value[e]
  let i
  function u() {
    s || (n.state.value[e] = r ? r() : {})
    const c = Sn(n.state.value[e])
    return yo(
      c,
      a,
      Object.keys(l || {}).reduce(
        (d, m) => (
          (d[m] = Pu(
            p(() => {
              js(n)
              const v = n._s.get(e)
              return l[m].call(v, v)
            }),
          )),
          d
        ),
        {},
      ),
    )
  }
  return (i = $y(e, u, t, n, o, !0)), i
}
function $y(e, t, n = {}, o, r, a) {
  let l
  const s = yo({ actions: {} }, n),
    i = { deep: !0 }
  let u,
    c,
    d = [],
    m = [],
    v
  const g = o.state.value[e]
  !a && !g && (o.state.value[e] = {}), H({})
  let h
  function _(V) {
    let T
    ;(u = c = !1),
      typeof V == 'function'
        ? (V(o.state.value[e]), (T = { type: _a.patchFunction, storeId: e, events: v }))
        : (vu(o.state.value[e], V), (T = { type: _a.patchObject, payload: V, storeId: e, events: v }))
    const B = (h = Symbol())
    dt().then(() => {
      h === B && (u = !0)
    }),
      (c = !0),
      zr(d, T, o.state.value[e])
  }
  const y = a
    ? function () {
        const { state: T } = n,
          B = T ? T() : {}
        this.$patch((K) => {
          yo(K, B)
        })
      }
    : wy
  function b() {
    l.stop(), (d = []), (m = []), o._s.delete(e)
  }
  function w(V, T) {
    return function () {
      js(o)
      const B = Array.from(arguments),
        K = [],
        j = []
      function U(R) {
        K.push(R)
      }
      function D(R) {
        j.push(R)
      }
      zr(m, { args: B, name: V, store: $, after: U, onError: D })
      let O
      try {
        O = T.apply(this && this.$id === e ? this : $, B)
      } catch (R) {
        throw (zr(j, R), R)
      }
      return O instanceof Promise
        ? O.then((R) => (zr(K, R), R)).catch((R) => (zr(j, R), Promise.reject(R)))
        : (zr(K, O), O)
    }
  }
  const S = {
      _p: o,
      $id: e,
      $onAction: Rf.bind(null, m),
      $patch: _,
      $reset: y,
      $subscribe(V, T = {}) {
        const B = Rf(d, V, T.detached, () => K()),
          K = l.run(() =>
            ge(
              () => o.state.value[e],
              (j) => {
                ;(T.flush === 'sync' ? c : u) && V({ storeId: e, type: _a.direct, events: v }, j)
              },
              yo({}, i, T),
            ),
          )
        return B
      },
      $dispose: b,
    },
    $ = on(S)
  o._s.set(e, $)
  const z = ((o._a && o._a.runWithContext) || fL)(() => o._e.run(() => (l = Cu()).run(t)))
  for (const V in z) {
    const T = z[V]
    if ((nt(T) && !gL(T)) || Qn(T))
      a || (g && vL(T) && (nt(T) ? (T.value = g[V]) : vu(T, g[V])), (o.state.value[e][V] = T))
    else if (typeof T == 'function') {
      const B = w(V, T)
      ;(z[V] = B), (s.actions[V] = T)
    }
  }
  return (
    yo($, z),
    yo(at($), z),
    Object.defineProperty($, '$state', {
      get: () => o.state.value[e],
      set: (V) => {
        _((T) => {
          yo(T, V)
        })
      },
    }),
    o._p.forEach((V) => {
      yo(
        $,
        l.run(() => V({ store: $, app: o._a, pinia: o, options: s })),
      )
    }),
    g && a && n.hydrate && n.hydrate($.$state, g),
    (u = !0),
    (c = !0),
    $
  )
}
function ky(e, t, n) {
  let o, r
  const a = typeof t == 'function'
  typeof e == 'string' ? ((o = e), (r = a ? n : t)) : ((r = e), (o = e.id))
  function l(s, i) {
    const u = Sb()
    return (
      (s = s || (u ? kt(Sy, null) : null)),
      s && js(s),
      (s = Cy),
      s._s.has(o) || (a ? $y(o, t, r, s) : hL(o, r, s)),
      s._s.get(o)
    )
  }
  return (l.$id = o), l
}
function Oc(e) {
  {
    e = at(e)
    const t = {}
    for (const n in e) {
      const o = e[n]
      ;(nt(o) || Qn(o)) && (t[n] = Ut(e, n))
    }
    return t
  }
}
const yL = mL(),
  _L = 'modulepreload',
  bL = function (e) {
    return '/' + e
  },
  Df = {},
  In = function (t, n, o) {
    let r = Promise.resolve()
    if (n && n.length > 0) {
      document.getElementsByTagName('link')
      const l = document.querySelector('meta[property=csp-nonce]'),
        s = (l == null ? void 0 : l.nonce) || (l == null ? void 0 : l.getAttribute('nonce'))
      r = Promise.allSettled(
        n.map((i) => {
          if (((i = bL(i)), i in Df)) return
          Df[i] = !0
          const u = i.endsWith('.css'),
            c = u ? '[rel="stylesheet"]' : ''
          if (document.querySelector(`link[href="${i}"]${c}`)) return
          const d = document.createElement('link')
          if (
            ((d.rel = u ? 'stylesheet' : _L),
            u || (d.as = 'script'),
            (d.crossOrigin = ''),
            (d.href = i),
            s && d.setAttribute('nonce', s),
            document.head.appendChild(d),
            u)
          )
            return new Promise((m, v) => {
              d.addEventListener('load', m),
                d.addEventListener('error', () => v(new Error(`Unable to preload CSS for ${i}`)))
            })
        }),
      )
    }
    function a(l) {
      const s = new Event('vite:preloadError', { cancelable: !0 })
      if (((s.payload = l), window.dispatchEvent(s), !s.defaultPrevented)) throw l
    }
    return r.then((l) => {
      for (const s of l || []) s.status === 'rejected' && a(s.reason)
      return t().catch(a)
    })
  }
/*!
 * vue-router v4.2.5
 * (c) 2023 Eduardo San Martin Morote
 * @license MIT
 */ const $r = typeof window < 'u'
function zL(e) {
  return e.__esModule || e[Symbol.toStringTag] === 'Module'
}
const gt = Object.assign
function $i(e, t) {
  const n = {}
  for (const o in t) {
    const r = t[o]
    n[o] = An(r) ? r.map(e) : e(r)
  }
  return n
}
const ba = () => {},
  An = Array.isArray,
  CL = /\/$/,
  SL = (e) => e.replace(CL, '')
function ki(e, t, n = '/') {
  let o,
    r = {},
    a = '',
    l = ''
  const s = t.indexOf('#')
  let i = t.indexOf('?')
  return (
    s < i && s >= 0 && (i = -1),
    i > -1 && ((o = t.slice(0, i)), (a = t.slice(i + 1, s > -1 ? s : t.length)), (r = e(a))),
    s > -1 && ((o = o || t.slice(0, s)), (l = t.slice(s, t.length))),
    (o = TL(o ?? t, n)),
    { fullPath: o + (a && '?') + a + l, path: o, query: r, hash: l }
  )
}
function wL(e, t) {
  const n = t.query ? e(t.query) : ''
  return t.path + (n && '?') + n + (t.hash || '')
}
function Mf(e, t) {
  return !t || !e.toLowerCase().startsWith(t.toLowerCase()) ? e : e.slice(t.length) || '/'
}
function $L(e, t, n) {
  const o = t.matched.length - 1,
    r = n.matched.length - 1
  return (
    o > -1 &&
    o === r &&
    Hr(t.matched[o], n.matched[r]) &&
    Ty(t.params, n.params) &&
    e(t.query) === e(n.query) &&
    t.hash === n.hash
  )
}
function Hr(e, t) {
  return (e.aliasOf || e) === (t.aliasOf || t)
}
function Ty(e, t) {
  if (Object.keys(e).length !== Object.keys(t).length) return !1
  for (const n in e) if (!kL(e[n], t[n])) return !1
  return !0
}
function kL(e, t) {
  return An(e) ? Ff(e, t) : An(t) ? Ff(t, e) : e === t
}
function Ff(e, t) {
  return An(t) ? e.length === t.length && e.every((n, o) => n === t[o]) : e.length === 1 && e[0] === t
}
function TL(e, t) {
  if (e.startsWith('/')) return e
  if (!e) return t
  const n = t.split('/'),
    o = e.split('/'),
    r = o[o.length - 1]
  ;(r === '..' || r === '.') && o.push('')
  let a = n.length - 1,
    l,
    s
  for (l = 0; l < o.length; l++)
    if (((s = o[l]), s !== '.'))
      if (s === '..') a > 1 && a--
      else break
  return n.slice(0, a).join('/') + '/' + o.slice(l - (l === o.length ? 1 : 0)).join('/')
}
var Ma
;(function (e) {
  ;(e.pop = 'pop'), (e.push = 'push')
})(Ma || (Ma = {}))
var za
;(function (e) {
  ;(e.back = 'back'), (e.forward = 'forward'), (e.unknown = '')
})(za || (za = {}))
function VL(e) {
  if (!e)
    if ($r) {
      const t = document.querySelector('base')
      ;(e = (t && t.getAttribute('href')) || '/'), (e = e.replace(/^\w+:\/\/[^\/]+/, ''))
    } else e = '/'
  return e[0] !== '/' && e[0] !== '#' && (e = '/' + e), SL(e)
}
const PL = /^[^#]+#/
function AL(e, t) {
  return e.replace(PL, '#') + t
}
function EL(e, t) {
  const n = document.documentElement.getBoundingClientRect(),
    o = e.getBoundingClientRect()
  return { behavior: t.behavior, left: o.left - n.left - (t.left || 0), top: o.top - n.top - (t.top || 0) }
}
const Hs = () => ({ left: window.pageXOffset, top: window.pageYOffset })
function IL(e) {
  let t
  if ('el' in e) {
    const n = e.el,
      o = typeof n == 'string' && n.startsWith('#'),
      r = typeof n == 'string' ? (o ? document.getElementById(n.slice(1)) : document.querySelector(n)) : n
    if (!r) return
    t = EL(r, e)
  } else t = e
  'scrollBehavior' in document.documentElement.style
    ? window.scrollTo(t)
    : window.scrollTo(t.left != null ? t.left : window.pageXOffset, t.top != null ? t.top : window.pageYOffset)
}
function jf(e, t) {
  return (history.state ? history.state.position - t : -1) + e
}
const gu = new Map()
function xL(e, t) {
  gu.set(e, t)
}
function OL(e) {
  const t = gu.get(e)
  return gu.delete(e), t
}
let LL = () => location.protocol + '//' + location.host
function Vy(e, t) {
  const { pathname: n, search: o, hash: r } = t,
    a = e.indexOf('#')
  if (a > -1) {
    let s = r.includes(e.slice(a)) ? e.slice(a).length : 1,
      i = r.slice(s)
    return i[0] !== '/' && (i = '/' + i), Mf(i, '')
  }
  return Mf(n, e) + o + r
}
function BL(e, t, n, o) {
  let r = [],
    a = [],
    l = null
  const s = ({ state: m }) => {
    const v = Vy(e, location),
      g = n.value,
      h = t.value
    let _ = 0
    if (m) {
      if (((n.value = v), (t.value = m), l && l === g)) {
        l = null
        return
      }
      _ = h ? m.position - h.position : 0
    } else o(v)
    r.forEach((y) => {
      y(n.value, g, { delta: _, type: Ma.pop, direction: _ ? (_ > 0 ? za.forward : za.back) : za.unknown })
    })
  }
  function i() {
    l = n.value
  }
  function u(m) {
    r.push(m)
    const v = () => {
      const g = r.indexOf(m)
      g > -1 && r.splice(g, 1)
    }
    return a.push(v), v
  }
  function c() {
    const { history: m } = window
    m.state && m.replaceState(gt({}, m.state, { scroll: Hs() }), '')
  }
  function d() {
    for (const m of a) m()
    ;(a = []), window.removeEventListener('popstate', s), window.removeEventListener('beforeunload', c)
  }
  return (
    window.addEventListener('popstate', s),
    window.addEventListener('beforeunload', c, { passive: !0 }),
    { pauseListeners: i, listen: u, destroy: d }
  )
}
function Hf(e, t, n, o = !1, r = !1) {
  return { back: e, current: t, forward: n, replaced: o, position: window.history.length, scroll: r ? Hs() : null }
}
function NL(e) {
  const { history: t, location: n } = window,
    o = { value: Vy(e, n) },
    r = { value: t.state }
  r.value ||
    a(o.value, { back: null, current: o.value, forward: null, position: t.length - 1, replaced: !0, scroll: null }, !0)
  function a(i, u, c) {
    const d = e.indexOf('#'),
      m = d > -1 ? (n.host && document.querySelector('base') ? e : e.slice(d)) + i : LL() + e + i
    try {
      t[c ? 'replaceState' : 'pushState'](u, '', m), (r.value = u)
    } catch (v) {
      console.error(v), n[c ? 'replace' : 'assign'](m)
    }
  }
  function l(i, u) {
    const c = gt({}, t.state, Hf(r.value.back, i, r.value.forward, !0), u, { position: r.value.position })
    a(i, c, !0), (o.value = i)
  }
  function s(i, u) {
    const c = gt({}, r.value, t.state, { forward: i, scroll: Hs() })
    a(c.current, c, !0)
    const d = gt({}, Hf(o.value, i, null), { position: c.position + 1 }, u)
    a(i, d, !1), (o.value = i)
  }
  return { location: o, state: r, push: s, replace: l }
}
function RL(e) {
  e = VL(e)
  const t = NL(e),
    n = BL(e, t.state, t.location, t.replace)
  function o(a, l = !0) {
    l || n.pauseListeners(), history.go(a)
  }
  const r = gt({ location: '', base: e, go: o, createHref: AL.bind(null, e) }, t, n)
  return (
    Object.defineProperty(r, 'location', { enumerable: !0, get: () => t.location.value }),
    Object.defineProperty(r, 'state', { enumerable: !0, get: () => t.state.value }),
    r
  )
}
function DL(e) {
  return typeof e == 'string' || (e && typeof e == 'object')
}
function Py(e) {
  return typeof e == 'string' || typeof e == 'symbol'
}
const go = {
    path: '/',
    name: void 0,
    params: {},
    query: {},
    hash: '',
    fullPath: '/',
    matched: [],
    meta: {},
    redirectedFrom: void 0,
  },
  Ay = Symbol('')
var Uf
;(function (e) {
  ;(e[(e.aborted = 4)] = 'aborted'), (e[(e.cancelled = 8)] = 'cancelled'), (e[(e.duplicated = 16)] = 'duplicated')
})(Uf || (Uf = {}))
function Ur(e, t) {
  return gt(new Error(), { type: e, [Ay]: !0 }, t)
}
function Wn(e, t) {
  return e instanceof Error && Ay in e && (t == null || !!(e.type & t))
}
const Wf = '[^/]+?',
  ML = { sensitive: !1, strict: !1, start: !0, end: !0 },
  FL = /[.+*?^${}()[\]/\\]/g
function jL(e, t) {
  const n = gt({}, ML, t),
    o = []
  let r = n.start ? '^' : ''
  const a = []
  for (const u of e) {
    const c = u.length ? [] : [90]
    n.strict && !u.length && (r += '/')
    for (let d = 0; d < u.length; d++) {
      const m = u[d]
      let v = 40 + (n.sensitive ? 0.25 : 0)
      if (m.type === 0) d || (r += '/'), (r += m.value.replace(FL, '\\$&')), (v += 40)
      else if (m.type === 1) {
        const { value: g, repeatable: h, optional: _, regexp: y } = m
        a.push({ name: g, repeatable: h, optional: _ })
        const b = y || Wf
        if (b !== Wf) {
          v += 10
          try {
            new RegExp(`(${b})`)
          } catch (S) {
            throw new Error(`Invalid custom RegExp for param "${g}" (${b}): ` + S.message)
          }
        }
        let w = h ? `((?:${b})(?:/(?:${b}))*)` : `(${b})`
        d || (w = _ && u.length < 2 ? `(?:/${w})` : '/' + w),
          _ && (w += '?'),
          (r += w),
          (v += 20),
          _ && (v += -8),
          h && (v += -20),
          b === '.*' && (v += -50)
      }
      c.push(v)
    }
    o.push(c)
  }
  if (n.strict && n.end) {
    const u = o.length - 1
    o[u][o[u].length - 1] += 0.7000000000000001
  }
  n.strict || (r += '/?'), n.end ? (r += '$') : n.strict && (r += '(?:/|$)')
  const l = new RegExp(r, n.sensitive ? '' : 'i')
  function s(u) {
    const c = u.match(l),
      d = {}
    if (!c) return null
    for (let m = 1; m < c.length; m++) {
      const v = c[m] || '',
        g = a[m - 1]
      d[g.name] = v && g.repeatable ? v.split('/') : v
    }
    return d
  }
  function i(u) {
    let c = '',
      d = !1
    for (const m of e) {
      ;(!d || !c.endsWith('/')) && (c += '/'), (d = !1)
      for (const v of m)
        if (v.type === 0) c += v.value
        else if (v.type === 1) {
          const { value: g, repeatable: h, optional: _ } = v,
            y = g in u ? u[g] : ''
          if (An(y) && !h)
            throw new Error(`Provided param "${g}" is an array but it is not repeatable (* or + modifiers)`)
          const b = An(y) ? y.join('/') : y
          if (!b)
            if (_) m.length < 2 && (c.endsWith('/') ? (c = c.slice(0, -1)) : (d = !0))
            else throw new Error(`Missing required param "${g}"`)
          c += b
        }
    }
    return c || '/'
  }
  return { re: l, score: o, keys: a, parse: s, stringify: i }
}
function HL(e, t) {
  let n = 0
  for (; n < e.length && n < t.length; ) {
    const o = t[n] - e[n]
    if (o) return o
    n++
  }
  return e.length < t.length
    ? e.length === 1 && e[0] === 80
      ? -1
      : 1
    : e.length > t.length
      ? t.length === 1 && t[0] === 80
        ? 1
        : -1
      : 0
}
function UL(e, t) {
  let n = 0
  const o = e.score,
    r = t.score
  for (; n < o.length && n < r.length; ) {
    const a = HL(o[n], r[n])
    if (a) return a
    n++
  }
  if (Math.abs(r.length - o.length) === 1) {
    if (Gf(o)) return 1
    if (Gf(r)) return -1
  }
  return r.length - o.length
}
function Gf(e) {
  const t = e[e.length - 1]
  return e.length > 0 && t[t.length - 1] < 0
}
const WL = { type: 0, value: '' },
  GL = /[a-zA-Z0-9_]/
function KL(e) {
  if (!e) return [[]]
  if (e === '/') return [[WL]]
  if (!e.startsWith('/')) throw new Error(`Invalid path "${e}"`)
  function t(v) {
    throw new Error(`ERR (${n})/"${u}": ${v}`)
  }
  let n = 0,
    o = n
  const r = []
  let a
  function l() {
    a && r.push(a), (a = [])
  }
  let s = 0,
    i,
    u = '',
    c = ''
  function d() {
    u &&
      (n === 0
        ? a.push({ type: 0, value: u })
        : n === 1 || n === 2 || n === 3
          ? (a.length > 1 &&
              (i === '*' || i === '+') &&
              t(`A repeatable param (${u}) must be alone in its segment. eg: '/:ids+.`),
            a.push({
              type: 1,
              value: u,
              regexp: c,
              repeatable: i === '*' || i === '+',
              optional: i === '*' || i === '?',
            }))
          : t('Invalid state to consume buffer'),
      (u = ''))
  }
  function m() {
    u += i
  }
  for (; s < e.length; ) {
    if (((i = e[s++]), i === '\\' && n !== 2)) {
      ;(o = n), (n = 4)
      continue
    }
    switch (n) {
      case 0:
        i === '/' ? (u && d(), l()) : i === ':' ? (d(), (n = 1)) : m()
        break
      case 4:
        m(), (n = o)
        break
      case 1:
        i === '(' ? (n = 2) : GL.test(i) ? m() : (d(), (n = 0), i !== '*' && i !== '?' && i !== '+' && s--)
        break
      case 2:
        i === ')' ? (c[c.length - 1] == '\\' ? (c = c.slice(0, -1) + i) : (n = 3)) : (c += i)
        break
      case 3:
        d(), (n = 0), i !== '*' && i !== '?' && i !== '+' && s--, (c = '')
        break
      default:
        t('Unknown state')
        break
    }
  }
  return n === 2 && t(`Unfinished custom RegExp for param "${u}"`), d(), l(), r
}
function qL(e, t, n) {
  const o = jL(KL(e.path), n),
    r = gt(o, { record: e, parent: t, children: [], alias: [] })
  return t && !r.record.aliasOf == !t.record.aliasOf && t.children.push(r), r
}
function YL(e, t) {
  const n = [],
    o = new Map()
  t = Yf({ strict: !1, end: !0, sensitive: !1 }, t)
  function r(c) {
    return o.get(c)
  }
  function a(c, d, m) {
    const v = !m,
      g = XL(c)
    g.aliasOf = m && m.record
    const h = Yf(t, c),
      _ = [g]
    if ('alias' in c) {
      const w = typeof c.alias == 'string' ? [c.alias] : c.alias
      for (const S of w)
        _.push(gt({}, g, { components: m ? m.record.components : g.components, path: S, aliasOf: m ? m.record : g }))
    }
    let y, b
    for (const w of _) {
      const { path: S } = w
      if (d && S[0] !== '/') {
        const $ = d.record.path,
          k = $[$.length - 1] === '/' ? '' : '/'
        w.path = d.record.path + (S && k + S)
      }
      if (
        ((y = qL(w, d, h)),
        m ? m.alias.push(y) : ((b = b || y), b !== y && b.alias.push(y), v && c.name && !qf(y) && l(c.name)),
        g.children)
      ) {
        const $ = g.children
        for (let k = 0; k < $.length; k++) a($[k], y, m && m.children[k])
      }
      ;(m = m || y),
        ((y.record.components && Object.keys(y.record.components).length) || y.record.name || y.record.redirect) && i(y)
    }
    return b
      ? () => {
          l(b)
        }
      : ba
  }
  function l(c) {
    if (Py(c)) {
      const d = o.get(c)
      d && (o.delete(c), n.splice(n.indexOf(d), 1), d.children.forEach(l), d.alias.forEach(l))
    } else {
      const d = n.indexOf(c)
      d > -1 && (n.splice(d, 1), c.record.name && o.delete(c.record.name), c.children.forEach(l), c.alias.forEach(l))
    }
  }
  function s() {
    return n
  }
  function i(c) {
    let d = 0
    for (; d < n.length && UL(c, n[d]) >= 0 && (c.record.path !== n[d].record.path || !Ey(c, n[d])); ) d++
    n.splice(d, 0, c), c.record.name && !qf(c) && o.set(c.record.name, c)
  }
  function u(c, d) {
    let m,
      v = {},
      g,
      h
    if ('name' in c && c.name) {
      if (((m = o.get(c.name)), !m)) throw Ur(1, { location: c })
      ;(h = m.record.name),
        (v = gt(
          Kf(
            d.params,
            m.keys.filter((b) => !b.optional).map((b) => b.name),
          ),
          c.params &&
            Kf(
              c.params,
              m.keys.map((b) => b.name),
            ),
        )),
        (g = m.stringify(v))
    } else if ('path' in c)
      (g = c.path), (m = n.find((b) => b.re.test(g))), m && ((v = m.parse(g)), (h = m.record.name))
    else {
      if (((m = d.name ? o.get(d.name) : n.find((b) => b.re.test(d.path))), !m))
        throw Ur(1, { location: c, currentLocation: d })
      ;(h = m.record.name), (v = gt({}, d.params, c.params)), (g = m.stringify(v))
    }
    const _ = []
    let y = m
    for (; y; ) _.unshift(y.record), (y = y.parent)
    return { name: h, path: g, params: v, matched: _, meta: QL(_) }
  }
  return e.forEach((c) => a(c)), { addRoute: a, resolve: u, removeRoute: l, getRoutes: s, getRecordMatcher: r }
}
function Kf(e, t) {
  const n = {}
  for (const o of t) o in e && (n[o] = e[o])
  return n
}
function XL(e) {
  return {
    path: e.path,
    redirect: e.redirect,
    name: e.name,
    meta: e.meta || {},
    aliasOf: void 0,
    beforeEnter: e.beforeEnter,
    props: JL(e),
    children: e.children || [],
    instances: {},
    leaveGuards: new Set(),
    updateGuards: new Set(),
    enterCallbacks: {},
    components: 'components' in e ? e.components || null : e.component && { default: e.component },
  }
}
function JL(e) {
  const t = {},
    n = e.props || !1
  if ('component' in e) t.default = n
  else for (const o in e.components) t[o] = typeof n == 'object' ? n[o] : n
  return t
}
function qf(e) {
  for (; e; ) {
    if (e.record.aliasOf) return !0
    e = e.parent
  }
  return !1
}
function QL(e) {
  return e.reduce((t, n) => gt(t, n.meta), {})
}
function Yf(e, t) {
  const n = {}
  for (const o in e) n[o] = o in t ? t[o] : e[o]
  return n
}
function Ey(e, t) {
  return t.children.some((n) => n === e || Ey(e, n))
}
const Iy = /#/g,
  ZL = /&/g,
  eB = /\//g,
  tB = /=/g,
  nB = /\?/g,
  xy = /\+/g,
  oB = /%5B/g,
  rB = /%5D/g,
  Oy = /%5E/g,
  aB = /%60/g,
  Ly = /%7B/g,
  lB = /%7C/g,
  By = /%7D/g,
  sB = /%20/g
function Lc(e) {
  return encodeURI('' + e)
    .replace(lB, '|')
    .replace(oB, '[')
    .replace(rB, ']')
}
function iB(e) {
  return Lc(e).replace(Ly, '{').replace(By, '}').replace(Oy, '^')
}
function hu(e) {
  return Lc(e)
    .replace(xy, '%2B')
    .replace(sB, '+')
    .replace(Iy, '%23')
    .replace(ZL, '%26')
    .replace(aB, '`')
    .replace(Ly, '{')
    .replace(By, '}')
    .replace(Oy, '^')
}
function uB(e) {
  return hu(e).replace(tB, '%3D')
}
function cB(e) {
  return Lc(e).replace(Iy, '%23').replace(nB, '%3F')
}
function dB(e) {
  return e == null ? '' : cB(e).replace(eB, '%2F')
}
function os(e) {
  try {
    return decodeURIComponent('' + e)
  } catch {}
  return '' + e
}
function mB(e) {
  const t = {}
  if (e === '' || e === '?') return t
  const o = (e[0] === '?' ? e.slice(1) : e).split('&')
  for (let r = 0; r < o.length; ++r) {
    const a = o[r].replace(xy, ' '),
      l = a.indexOf('='),
      s = os(l < 0 ? a : a.slice(0, l)),
      i = l < 0 ? null : os(a.slice(l + 1))
    if (s in t) {
      let u = t[s]
      An(u) || (u = t[s] = [u]), u.push(i)
    } else t[s] = i
  }
  return t
}
function Xf(e) {
  let t = ''
  for (let n in e) {
    const o = e[n]
    if (((n = uB(n)), o == null)) {
      o !== void 0 && (t += (t.length ? '&' : '') + n)
      continue
    }
    ;(An(o) ? o.map((a) => a && hu(a)) : [o && hu(o)]).forEach((a) => {
      a !== void 0 && ((t += (t.length ? '&' : '') + n), a != null && (t += '=' + a))
    })
  }
  return t
}
function fB(e) {
  const t = {}
  for (const n in e) {
    const o = e[n]
    o !== void 0 && (t[n] = An(o) ? o.map((r) => (r == null ? null : '' + r)) : o == null ? o : '' + o)
  }
  return t
}
const Ny = Symbol(''),
  Jf = Symbol(''),
  Us = Symbol(''),
  Bc = Symbol(''),
  yu = Symbol('')
function sa() {
  let e = []
  function t(o) {
    return (
      e.push(o),
      () => {
        const r = e.indexOf(o)
        r > -1 && e.splice(r, 1)
      }
    )
  }
  function n() {
    e = []
  }
  return { add: t, list: () => e.slice(), reset: n }
}
function pB(e, t, n) {
  const o = () => {
    e[t].delete(n)
  }
  vs(o),
    Kp(o),
    Gp(() => {
      e[t].add(n)
    }),
    e[t].add(n)
}
function vB(e) {
  const t = kt(Ny, {}).value
  t && pB(t, 'updateGuards', e)
}
function Co(e, t, n, o, r) {
  const a = o && (o.enterCallbacks[r] = o.enterCallbacks[r] || [])
  return () =>
    new Promise((l, s) => {
      const i = (d) => {
          d === !1
            ? s(Ur(4, { from: n, to: t }))
            : d instanceof Error
              ? s(d)
              : DL(d)
                ? s(Ur(2, { from: t, to: d }))
                : (a && o.enterCallbacks[r] === a && typeof d == 'function' && a.push(d), l())
        },
        u = e.call(o && o.instances[r], t, n, i)
      let c = Promise.resolve(u)
      e.length < 3 && (c = c.then(i)), c.catch((d) => s(d))
    })
}
function Ti(e, t, n, o) {
  const r = []
  for (const a of e)
    for (const l in a.components) {
      let s = a.components[l]
      if (!(t !== 'beforeRouteEnter' && !a.instances[l]))
        if (gB(s)) {
          const u = (s.__vccOpts || s)[t]
          u && r.push(Co(u, n, o, a, l))
        } else {
          let i = s()
          r.push(() =>
            i.then((u) => {
              if (!u) return Promise.reject(new Error(`Couldn't resolve component "${l}" at "${a.path}"`))
              const c = zL(u) ? u.default : u
              a.components[l] = c
              const m = (c.__vccOpts || c)[t]
              return m && Co(m, n, o, a, l)()
            }),
          )
        }
    }
  return r
}
function gB(e) {
  return typeof e == 'object' || 'displayName' in e || 'props' in e || '__vccOpts' in e
}
function Qf(e) {
  const t = kt(Us),
    n = kt(Bc),
    o = p(() => t.resolve(f(e.to))),
    r = p(() => {
      const { matched: i } = o.value,
        { length: u } = i,
        c = i[u - 1],
        d = n.matched
      if (!c || !d.length) return -1
      const m = d.findIndex(Hr.bind(null, c))
      if (m > -1) return m
      const v = Zf(i[u - 2])
      return u > 1 && Zf(c) === v && d[d.length - 1].path !== v ? d.findIndex(Hr.bind(null, i[u - 2])) : m
    }),
    a = p(() => r.value > -1 && bB(n.params, o.value.params)),
    l = p(() => r.value > -1 && r.value === n.matched.length - 1 && Ty(n.params, o.value.params))
  function s(i = {}) {
    return _B(i) ? t[f(e.replace) ? 'replace' : 'push'](f(e.to)).catch(ba) : Promise.resolve()
  }
  return { route: o, href: p(() => o.value.href), isActive: a, isExactActive: l, navigate: s }
}
const hB = re({
    name: 'RouterLink',
    compatConfig: { MODE: 3 },
    props: {
      to: { type: [String, Object], required: !0 },
      replace: Boolean,
      activeClass: String,
      exactActiveClass: String,
      custom: Boolean,
      ariaCurrentValue: { type: String, default: 'page' },
    },
    useLink: Qf,
    setup(e, { slots: t }) {
      const n = on(Qf(e)),
        { options: o } = kt(Us),
        r = p(() => ({
          [ep(e.activeClass, o.linkActiveClass, 'router-link-active')]: n.isActive,
          [ep(e.exactActiveClass, o.linkExactActiveClass, 'router-link-exact-active')]: n.isExactActive,
        }))
      return () => {
        const a = t.default && t.default(n)
        return e.custom
          ? a
          : Ze(
              'a',
              {
                'aria-current': n.isExactActive ? e.ariaCurrentValue : null,
                href: n.href,
                onClick: n.navigate,
                class: r.value,
              },
              a,
            )
      }
    },
  }),
  yB = hB
function _B(e) {
  if (
    !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) &&
    !e.defaultPrevented &&
    !(e.button !== void 0 && e.button !== 0)
  ) {
    if (e.currentTarget && e.currentTarget.getAttribute) {
      const t = e.currentTarget.getAttribute('target')
      if (/\b_blank\b/i.test(t)) return
    }
    return e.preventDefault && e.preventDefault(), !0
  }
}
function bB(e, t) {
  for (const n in t) {
    const o = t[n],
      r = e[n]
    if (typeof o == 'string') {
      if (o !== r) return !1
    } else if (!An(r) || r.length !== o.length || o.some((a, l) => a !== r[l])) return !1
  }
  return !0
}
function Zf(e) {
  return e ? (e.aliasOf ? e.aliasOf.path : e.path) : ''
}
const ep = (e, t, n) => e ?? t ?? n,
  zB = re({
    name: 'RouterView',
    inheritAttrs: !1,
    props: { name: { type: String, default: 'default' }, route: Object },
    compatConfig: { MODE: 3 },
    setup(e, { attrs: t, slots: n }) {
      const o = kt(yu),
        r = p(() => e.route || o.value),
        a = kt(Jf, 0),
        l = p(() => {
          let u = f(a)
          const { matched: c } = r.value
          let d
          for (; (d = c[u]) && !d.components; ) u++
          return u
        }),
        s = p(() => r.value.matched[l.value])
      ln(
        Jf,
        p(() => l.value + 1),
      ),
        ln(Ny, s),
        ln(yu, r)
      const i = H()
      return (
        ge(
          () => [i.value, s.value, e.name],
          ([u, c, d], [m, v, g]) => {
            c &&
              ((c.instances[d] = u),
              v &&
                v !== c &&
                u &&
                u === m &&
                (c.leaveGuards.size || (c.leaveGuards = v.leaveGuards),
                c.updateGuards.size || (c.updateGuards = v.updateGuards))),
              u && c && (!v || !Hr(c, v) || !m) && (c.enterCallbacks[d] || []).forEach((h) => h(u))
          },
          { flush: 'post' },
        ),
        () => {
          const u = r.value,
            c = e.name,
            d = s.value,
            m = d && d.components[c]
          if (!m) return tp(n.default, { Component: m, route: u })
          const v = d.props[c],
            g = v ? (v === !0 ? u.params : typeof v == 'function' ? v(u) : v) : null,
            _ = Ze(
              m,
              gt({}, g, t, {
                onVnodeUnmounted: (y) => {
                  y.component.isUnmounted && (d.instances[c] = null)
                },
                ref: i,
              }),
            )
          return tp(n.default, { Component: _, route: u }) || _
        }
      )
    },
  })
function tp(e, t) {
  if (!e) return null
  const n = e(t)
  return n.length === 1 ? n[0] : n
}
const CB = zB
function SB(e) {
  const t = YL(e.routes, e),
    n = e.parseQuery || mB,
    o = e.stringifyQuery || Xf,
    r = e.history,
    a = sa(),
    l = sa(),
    s = sa(),
    i = je(go)
  let u = go
  $r && e.scrollBehavior && 'scrollRestoration' in history && (history.scrollRestoration = 'manual')
  const c = $i.bind(null, (I) => '' + I),
    d = $i.bind(null, dB),
    m = $i.bind(null, os)
  function v(I, M) {
    let ae, se
    return Py(I) ? ((ae = t.getRecordMatcher(I)), (se = M)) : (se = I), t.addRoute(se, ae)
  }
  function g(I) {
    const M = t.getRecordMatcher(I)
    M && t.removeRoute(M)
  }
  function h() {
    return t.getRoutes().map((I) => I.record)
  }
  function _(I) {
    return !!t.getRecordMatcher(I)
  }
  function y(I, M) {
    if (((M = gt({}, M || i.value)), typeof I == 'string')) {
      const E = ki(n, I, M.path),
        X = t.resolve({ path: E.path }, M),
        te = r.createHref(E.fullPath)
      return gt(E, X, { params: m(X.params), hash: os(E.hash), redirectedFrom: void 0, href: te })
    }
    let ae
    if ('path' in I) ae = gt({}, I, { path: ki(n, I.path, M.path).path })
    else {
      const E = gt({}, I.params)
      for (const X in E) E[X] == null && delete E[X]
      ;(ae = gt({}, I, { params: d(E) })), (M.params = d(M.params))
    }
    const se = t.resolve(ae, M),
      Ee = I.hash || ''
    se.params = c(m(se.params))
    const He = wL(o, gt({}, I, { hash: iB(Ee), path: se.path })),
      P = r.createHref(He)
    return gt({ fullPath: He, hash: Ee, query: o === Xf ? fB(I.query) : I.query || {} }, se, {
      redirectedFrom: void 0,
      href: P,
    })
  }
  function b(I) {
    return typeof I == 'string' ? ki(n, I, i.value.path) : gt({}, I)
  }
  function w(I, M) {
    if (u !== I) return Ur(8, { from: M, to: I })
  }
  function S(I) {
    return z(I)
  }
  function $(I) {
    return S(gt(b(I), { replace: !0 }))
  }
  function k(I) {
    const M = I.matched[I.matched.length - 1]
    if (M && M.redirect) {
      const { redirect: ae } = M
      let se = typeof ae == 'function' ? ae(I) : ae
      return (
        typeof se == 'string' &&
          ((se = se.includes('?') || se.includes('#') ? (se = b(se)) : { path: se }), (se.params = {})),
        gt({ query: I.query, hash: I.hash, params: 'path' in se ? {} : I.params }, se)
      )
    }
  }
  function z(I, M) {
    const ae = (u = y(I)),
      se = i.value,
      Ee = I.state,
      He = I.force,
      P = I.replace === !0,
      E = k(ae)
    if (E)
      return z(gt(b(E), { state: typeof E == 'object' ? gt({}, Ee, E.state) : Ee, force: He, replace: P }), M || ae)
    const X = ae
    X.redirectedFrom = M
    let te
    return (
      !He && $L(o, se, ae) && ((te = Ur(16, { to: X, from: se })), be(se, se, !0, !1)),
      (te ? Promise.resolve(te) : B(X, se))
        .catch((q) => (Wn(q) ? (Wn(q, 2) ? q : ue(q)) : x(q, X, se)))
        .then((q) => {
          if (q) {
            if (Wn(q, 2))
              return z(
                gt({ replace: P }, b(q.to), {
                  state: typeof q.to == 'object' ? gt({}, Ee, q.to.state) : Ee,
                  force: He,
                }),
                M || X,
              )
          } else q = j(X, se, !0, P, Ee)
          return K(X, se, q), q
        })
    )
  }
  function V(I, M) {
    const ae = w(I, M)
    return ae ? Promise.reject(ae) : Promise.resolve()
  }
  function T(I) {
    const M = J.values().next().value
    return M && typeof M.runWithContext == 'function' ? M.runWithContext(I) : I()
  }
  function B(I, M) {
    let ae
    const [se, Ee, He] = wB(I, M)
    ae = Ti(se.reverse(), 'beforeRouteLeave', I, M)
    for (const E of se)
      E.leaveGuards.forEach((X) => {
        ae.push(Co(X, I, M))
      })
    const P = V.bind(null, I, M)
    return (
      ae.push(P),
      Ce(ae)
        .then(() => {
          ae = []
          for (const E of a.list()) ae.push(Co(E, I, M))
          return ae.push(P), Ce(ae)
        })
        .then(() => {
          ae = Ti(Ee, 'beforeRouteUpdate', I, M)
          for (const E of Ee)
            E.updateGuards.forEach((X) => {
              ae.push(Co(X, I, M))
            })
          return ae.push(P), Ce(ae)
        })
        .then(() => {
          ae = []
          for (const E of He)
            if (E.beforeEnter)
              if (An(E.beforeEnter)) for (const X of E.beforeEnter) ae.push(Co(X, I, M))
              else ae.push(Co(E.beforeEnter, I, M))
          return ae.push(P), Ce(ae)
        })
        .then(
          () => (
            I.matched.forEach((E) => (E.enterCallbacks = {})),
            (ae = Ti(He, 'beforeRouteEnter', I, M)),
            ae.push(P),
            Ce(ae)
          ),
        )
        .then(() => {
          ae = []
          for (const E of l.list()) ae.push(Co(E, I, M))
          return ae.push(P), Ce(ae)
        })
        .catch((E) => (Wn(E, 8) ? E : Promise.reject(E)))
    )
  }
  function K(I, M, ae) {
    s.list().forEach((se) => T(() => se(I, M, ae)))
  }
  function j(I, M, ae, se, Ee) {
    const He = w(I, M)
    if (He) return He
    const P = M === go,
      E = $r ? history.state : {}
    ae && (se || P ? r.replace(I.fullPath, gt({ scroll: P && E && E.scroll }, Ee)) : r.push(I.fullPath, Ee)),
      (i.value = I),
      be(I, M, ae, P),
      ue()
  }
  let U
  function D() {
    U ||
      (U = r.listen((I, M, ae) => {
        if (!_e.listening) return
        const se = y(I),
          Ee = k(se)
        if (Ee) {
          z(gt(Ee, { replace: !0 }), se).catch(ba)
          return
        }
        u = se
        const He = i.value
        $r && xL(jf(He.fullPath, ae.delta), Hs()),
          B(se, He)
            .catch((P) =>
              Wn(P, 12)
                ? P
                : Wn(P, 2)
                  ? (z(P.to, se)
                      .then((E) => {
                        Wn(E, 20) && !ae.delta && ae.type === Ma.pop && r.go(-1, !1)
                      })
                      .catch(ba),
                    Promise.reject())
                  : (ae.delta && r.go(-ae.delta, !1), x(P, se, He)),
            )
            .then((P) => {
              ;(P = P || j(se, He, !1)),
                P && (ae.delta && !Wn(P, 8) ? r.go(-ae.delta, !1) : ae.type === Ma.pop && Wn(P, 20) && r.go(-1, !1)),
                K(se, He, P)
            })
            .catch(ba)
      }))
  }
  let O = sa(),
    R = sa(),
    N
  function x(I, M, ae) {
    ue(I)
    const se = R.list()
    return se.length ? se.forEach((Ee) => Ee(I, M, ae)) : console.error(I), Promise.reject(I)
  }
  function ce() {
    return N && i.value !== go
      ? Promise.resolve()
      : new Promise((I, M) => {
          O.add([I, M])
        })
  }
  function ue(I) {
    return N || ((N = !I), D(), O.list().forEach(([M, ae]) => (I ? ae(I) : M())), O.reset()), I
  }
  function be(I, M, ae, se) {
    const { scrollBehavior: Ee } = e
    if (!$r || !Ee) return Promise.resolve()
    const He = (!ae && OL(jf(I.fullPath, 0))) || ((se || !ae) && history.state && history.state.scroll) || null
    return dt()
      .then(() => Ee(I, M, He))
      .then((P) => P && IL(P))
      .catch((P) => x(P, I, M))
  }
  const xe = (I) => r.go(I)
  let we
  const J = new Set(),
    _e = {
      currentRoute: i,
      listening: !0,
      addRoute: v,
      removeRoute: g,
      hasRoute: _,
      getRoutes: h,
      resolve: y,
      options: e,
      push: S,
      replace: $,
      go: xe,
      back: () => xe(-1),
      forward: () => xe(1),
      beforeEach: a.add,
      beforeResolve: l.add,
      afterEach: s.add,
      onError: R.add,
      isReady: ce,
      install(I) {
        const M = this
        I.component('RouterLink', yB),
          I.component('RouterView', CB),
          (I.config.globalProperties.$router = M),
          Object.defineProperty(I.config.globalProperties, '$route', { enumerable: !0, get: () => f(i) }),
          $r && !we && i.value === go && ((we = !0), S(r.location).catch((Ee) => {}))
        const ae = {}
        for (const Ee in go) Object.defineProperty(ae, Ee, { get: () => i.value[Ee], enumerable: !0 })
        I.provide(Us, M), I.provide(Bc, us(ae)), I.provide(yu, i)
        const se = I.unmount
        J.add(I),
          (I.unmount = function () {
            J.delete(I), J.size < 1 && ((u = go), U && U(), (U = null), (i.value = go), (we = !1), (N = !1)), se()
          })
      },
    }
  function Ce(I) {
    return I.reduce((M, ae) => M.then(() => T(ae)), Promise.resolve())
  }
  return _e
}
function wB(e, t) {
  const n = [],
    o = [],
    r = [],
    a = Math.max(t.matched.length, e.matched.length)
  for (let l = 0; l < a; l++) {
    const s = t.matched[l]
    s && (e.matched.find((u) => Hr(u, s)) ? o.push(s) : n.push(s))
    const i = e.matched[l]
    i && (t.matched.find((u) => Hr(u, i)) || r.push(i))
  }
  return [n, o, r]
}
function Ry() {
  return kt(Us)
}
function Dy() {
  return kt(Bc)
}
const Cr = 'http://localhost:8081/api',
  np = {
    login: (e) =>
      fetch(`${Cr}/auth/login`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(e),
      }),
    logout: () =>
      fetch(`${Cr}/auth/logout`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${localStorage.getItem('token')}` },
      }),
    createUser: (e) =>
      fetch(`${Cr}/auth/register/admin`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${localStorage.getItem('token')}` },
        body: JSON.stringify(e),
      }),
    getUsers: () =>
      fetch(`${Cr}/auth/users`, {
        method: 'GET',
        headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${localStorage.getItem('token')}` },
      }),
    deleteUser: (e) =>
      fetch(`${Cr}/auth/users/${e}`, {
        method: 'DELETE',
        headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${localStorage.getItem('token')}` },
      }),
    updateUser: (e, t) =>
      fetch(`${Cr}/auth/users/${e}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${localStorage.getItem('token')}` },
        body: JSON.stringify(t),
      }),
  },
  My = ky('user', {
    state: () => ({
      user: null,
      token: localStorage.getItem('token'),
      isAuthenticated: !!localStorage.getItem('token'),
    }),
    actions: {
      async login(e) {
        try {
          const t = await np.login(e)
          if (!t.ok) {
            const o = await t.json()
            throw new Error(o.message || '登录失败')
          }
          const n = await t.json()
          if (!n.success) throw new Error(n.message || '登录失败')
          return (
            (this.user = {
              username: n.data.username,
              email: n.data.email || '',
              fullName: n.data.fullName,
              role: n.data.role,
            }),
            (this.token = n.data.token),
            (this.isAuthenticated = !0),
            localStorage.setItem('token', n.data.token),
            localStorage.setItem('user', JSON.stringify(this.user)),
            { success: !0, data: n.data }
          )
        } catch (t) {
          return console.error('登录错误:', t), { success: !1, message: t.message }
        }
      },
      async logout() {
        try {
          this.token && (await np.logout())
        } catch (e) {
          console.error('登出请求失败:', e)
        } finally {
          ;(this.user = null),
            (this.token = null),
            (this.isAuthenticated = !1),
            localStorage.removeItem('token'),
            localStorage.removeItem('user'),
            (window.location.href = '/auth/login')
        }
      },
      restoreAuth() {
        const e = localStorage.getItem('token'),
          t = localStorage.getItem('user')
        if (e && t)
          try {
            ;(this.token = e), (this.user = JSON.parse(t)), (this.isAuthenticated = !0)
          } catch {
            this.logout()
          }
      },
    },
  }),
  $B = ['src', 'height', 'color', 'width'],
  _u = re({
    __name: 'VueImage',
    props: { src: {}, color: {}, height: { default: 'auto' }, width: {} },
    setup(e) {
      return (t, n) => (
        C(), A('img', { src: t.src, alt: 'Vue Image', height: t.height, color: t.color, width: t.width }, null, 8, $B)
      )
    },
  }),
  kB = { class: 'h-full flex items-center justify-center mx-auto max-w-[420px]' },
  TB = { class: 'p-4' },
  VB = { class: 'h-full flex flex-row items-center justify-start mx-auto max-w-[420px]' },
  PB = { class: 'flex flex-col items-start' },
  AB = re({
    __name: 'AuthLayout',
    setup(e) {
      const t = Dg()
      return (n, o) => {
        const r = Je('RouterLink'),
          a = Je('RouterView'),
          l = Je('VaLayout')
        return f(t).lgUp
          ? (C(),
            ee(
              l,
              { key: 0, class: 'h-screen layout-with-bg bg-[var(--va-background-secondary)]' },
              {
                left: G(() => [
                  ne(
                    r,
                    {
                      class: 'frosted-glass-panel h-full flex items-center justify-center',
                      style: { width: '35vw' },
                      to: '/auth/login',
                      'aria-label': 'Visit homepage',
                    },
                    {
                      default: G(() => [
                        ne(_u, {
                          src: 'http://www.heinzmann.cn/images/logo.png',
                          alt: 'HaiMan Logo',
                          height: '18',
                          width: '220',
                        }),
                      ]),
                      _: 1,
                    },
                  ),
                ]),
                content: G(() => [Y('main', kB, [ne(a)])]),
                _: 1,
              },
            ))
          : (C(),
            ee(
              l,
              { key: 1, class: 'h-screen bg-[var(--va-background-secondary)]' },
              {
                content: G(() => [
                  Y('div', TB, [
                    Y('main', VB, [
                      Y('div', PB, [
                        ne(
                          r,
                          { class: 'py-4', to: '/', 'aria-label': 'Visit homepage' },
                          {
                            default: G(() => [
                              ne(_u, {
                                src: 'http://www.heinzmann.cn/images/logo.png',
                                alt: 'HaiMan Logo',
                                height: '18',
                                width: '220',
                              }),
                            ]),
                            _: 1,
                          },
                        ),
                        ne(a),
                      ]),
                    ]),
                  ]),
                ]),
                _: 1,
              },
            ))
      }
    },
  }),
  EB = cr(AB, [['__scopeId', 'data-v-d3dd7eb0']]),
  Nc = ky('global', {
    state: () => ({ isSidebarMinimized: !1 }),
    actions: {
      toggleSidebar() {
        this.isSidebarMinimized = !this.isSidebarMinimized
      },
    },
  }),
  IB = {
    class: 'va-icon-menu-collapsed',
    height: '24',
    viewBox: '0 0 24 24',
    width: '24',
    xmlns: 'http://www.w3.org/2000/svg',
  },
  xB = { fill: 'none', 'fill-rule': 'nonzero' },
  OB = ['fill'],
  LB = ['fill'],
  BB = ['fill'],
  NB = re({
    __name: 'VaIconMenuCollapsed',
    props: { color: { default: 'inherit' } },
    setup(e) {
      return (t, n) => (
        C(),
        A('svg', IB, [
          Y('g', xB, [
            n[0] || (n[0] = Y('path', { d: 'M0 0h24v24H0z' }, null, -1)),
            Y('rect', { fill: t.color, height: '2', rx: '1', width: '20', x: '2', y: '3' }, null, 8, OB),
            Y(
              'path',
              {
                fill: t.color,
                d: 'M3 11h10a1 1 0 0 1 0 2H3a1 1 0 0 1 0-2zM20.993 11l-2.7-2.7-1.414 1.414L18.164 11H16a1 1 0 0 0 0 2h2.179l-1.3 1.3 1.414 1.414L21.007 13A1 1 0 0 0 21 11h-.007z',
              },
              null,
              8,
              LB,
            ),
            Y('rect', { fill: t.color, height: '2', rx: '1', width: '20', x: '2', y: '19' }, null, 8, BB),
          ]),
        ])
      )
    },
  }),
  bu = {
    root: { name: '/', displayName: 'menu.home' },
    routes: [
      { name: 'users', displayName: 'menu.users', meta: { icon: 'group' } },
      { name: 'projects', displayName: 'menu.projects', meta: { icon: 'folder_shared' } },
      { name: 'testingItem', displayName: 'menu.testingItem', meta: { icon: 'folder_shared' } },
      { name: 'settings', displayName: 'menu.settings', meta: { icon: 'settings' } },
    ],
  },
  RB = { class: 'flex gap-2' },
  DB = { class: 'flex items-center' },
  MB = re({
    __name: 'AppLayoutNavigation',
    setup(e) {
      const { isSidebarMinimized: t } = Oc(Nc()),
        n = Ry(),
        o = Dy(),
        { t: r } = Lo(),
        a = (c) => {
          const d = (m) => {
            for (const v of m) {
              if (v.name === c) return v.displayName
              if (v.children) {
                const g = d(v.children)
                if (g) return g
              }
            }
            return ''
          }
          return d(bu.routes)
        },
        l = p(() => {
          const c = []
          return (
            o.matched.forEach((d) => {
              const m = a(d.name)
              m && c.push({ label: r(m), to: d.path, hasChildren: d.children && d.children.length > 0 })
            }),
            c
          )
        }),
        { getColor: s } = Re(),
        i = p(() => s('secondary')),
        u = (c) => {
          c.hasChildren || n.push(c.to)
        }
      return (c, d) => {
        const m = Je('VaBreadcrumbsItem'),
          v = Je('VaBreadcrumbs')
        return (
          C(),
          A('div', RB, [
            ne(
              NB,
              {
                class: Pe(['cursor-pointer', { 'x-flip': !f(t) }]),
                color: i.value,
                onClick: d[0] || (d[0] = (g) => (t.value = !f(t))),
              },
              null,
              8,
              ['class', 'color'],
            ),
            Y('nav', DB, [
              ne(v, null, {
                default: G(() => [
                  ne(m, { label: f(r)('menu.home'), to: { name: 'dashboard' } }, null, 8, ['label']),
                  (C(!0),
                  A(
                    Te,
                    null,
                    Ue(
                      l.value,
                      (g) => (
                        C(),
                        ee(m, { key: g.label, label: g.label, onClick: (h) => u(g) }, null, 8, ['label', 'onClick'])
                      ),
                    ),
                    128,
                  )),
                ]),
                _: 1,
              }),
            ]),
          ])
        )
      }
    },
  }),
  FB = cr(MB, [['__scopeId', 'data-v-9ff95887']]),
  jB = { class: 'profile-dropdown-wrapper' },
  HB = { class: 'profile-dropdown__anchor min-w-max' },
  UB = { key: 0, class: 'uppercase text-[var(--va-secondary)] opacity-80 font-bold text-xs px-4' },
  WB = re({
    __name: 'ProfileDropdown',
    props: {
      options: {
        default: () => [
          {
            name: 'account',
            separator: !0,
            list: [
              { name: 'settings', to: 'settings', icon: 'mso-settings' },
              { name: 'projects', to: 'projects', icon: 'mso-favorite' },
              { name: 'users', to: 'users', icon: 'mso-group' },
            ],
          },
          { name: '', separator: !1, list: [{ name: 'logout', icon: 'mso-logout' }] },
        ],
      },
    },
    setup(e) {
      const { colors: t, setHSLAColor: n } = Re(),
        o = p(() => n(t.focus, { a: 0.1 })),
        { t: r } = Lo(),
        a = Ry(),
        l = My(),
        s = p(() => {
          const d = l.user
          if (!d) return '用'
          if (d.fullName && d.fullName.trim()) {
            const m = d.fullName.trim()
            if (/[\u4e00-\u9fa5]/.test(m)) return m.charAt(0)
            const v = m.split(' ').filter((g) => g.length > 0)
            if (v.length >= 2) return (v[0].charAt(0) + v[v.length - 1].charAt(0)).toUpperCase()
            if (v.length === 1) return v[0].charAt(0).toUpperCase()
          }
          return d.username && d.username.trim() ? d.username.charAt(0).toUpperCase() : '用'
        }),
        i = H(!1),
        u = async () => {
          await l.logout(), a.push({ name: 'login' })
        },
        c = (d) =>
          d.name === 'logout'
            ? { onClick: u }
            : d.to
              ? { to: { name: d.to } }
              : d.href
                ? { href: d.href, target: '_blank' }
                : {}
      return (d, m) => {
        const v = Je('VaAvatar'),
          g = Je('VaButton'),
          h = Je('VaIcon'),
          _ = Je('VaListItem'),
          y = Je('VaListSeparator'),
          b = Je('VaList'),
          w = Je('VaDropdownContent'),
          S = Je('VaDropdown')
        return (
          C(),
          A('div', jB, [
            ne(
              S,
              {
                modelValue: i.value,
                'onUpdate:modelValue': m[0] || (m[0] = ($) => (i.value = $)),
                offset: [9, 0],
                class: 'profile-dropdown',
                'stick-to-edges': '',
              },
              {
                anchor: G(() => [
                  ne(
                    g,
                    { preset: 'secondary', color: 'textPrimary' },
                    {
                      default: G(() => [
                        Y('span', HB, [
                          L(d.$slots, 'default'),
                          ne(v, { size: 32, color: 'primary' }, { default: G(() => [Fe(Ae(s.value), 1)]), _: 1 }),
                        ]),
                      ]),
                      _: 3,
                    },
                  ),
                ]),
                default: G(() => [
                  ne(
                    w,
                    {
                      class: 'profile-dropdown__content md:w-60 px-0 py-4 w-full',
                      style: me({ '--hover-color': o.value }),
                    },
                    {
                      default: G(() => [
                        (C(!0),
                        A(
                          Te,
                          null,
                          Ue(
                            d.options,
                            ($) => (
                              C(),
                              ee(
                                b,
                                { key: $.name },
                                {
                                  default: G(() => [
                                    $.name ? (C(), A('header', UB, Ae(f(r)(`user.${$.name}`)), 1)) : W('', !0),
                                    (C(!0),
                                    A(
                                      Te,
                                      null,
                                      Ue(
                                        $.list,
                                        (k) => (
                                          C(),
                                          ee(
                                            _,
                                            le(
                                              {
                                                key: k.name,
                                                class: 'menu-item px-4 text-base cursor-pointer h-8',
                                                ref_for: !0,
                                              },
                                              c(k),
                                            ),
                                            {
                                              default: G(() => [
                                                ne(h, { name: k.icon, class: 'pr-1', color: 'secondary' }, null, 8, [
                                                  'name',
                                                ]),
                                                Fe(' ' + Ae(f(r)(`user.${k.name}`)), 1),
                                              ]),
                                              _: 2,
                                            },
                                            1040,
                                          )
                                        ),
                                      ),
                                      128,
                                    )),
                                    $.separator ? (C(), ee(y, { key: 1, class: 'mx-3 my-2' })) : W('', !0),
                                  ]),
                                  _: 2,
                                },
                                1024,
                              )
                            ),
                          ),
                          128,
                        )),
                      ]),
                      _: 1,
                    },
                    8,
                    ['style'],
                  ),
                ]),
                _: 3,
              },
              8,
              ['modelValue'],
            ),
          ])
        )
      }
    },
  }),
  GB = { viewBox: '0 0 20 20', xmlns: 'http://www.w3.org/2000/svg' },
  KB = ['fill'],
  qB = re({
    __name: 'VaIconNotification',
    props: { color: { default: 'inherit' } },
    setup(e) {
      return (t, n) => (
        C(),
        A('svg', GB, [
          Y(
            'path',
            {
              fill: t.color,
              d: 'M10 20c1.1 0 2-.9 2-2H8c0 1.1.9 2 2 2zm6-6V9c0-3.07-1.63-5.64-4.5-6.32V2c0-.83-.67-1.5-1.5-1.5S8.5 1.17 8.5 2v.68C5.64 3.36 4 5.92 4 9v5l-2 2v1h16v-1l-2-2zm-2 1H6V9c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6zM5.58 2.08L4.15.65C1.75 2.48.17 5.3.03 8.5h2a8.445 8.445 0 0 1 3.55-6.42zM17.97 8.5h2c-.15-3.2-1.73-6.02-4.12-7.85l-1.42 1.43a8.495 8.495 0 0 1 3.54 6.42z',
            },
            null,
            8,
            KB,
          ),
        ])
      )
    },
  }),
  YB = { class: 'sm:max-h-[320px] p-4 overflow-auto' },
  XB = 4,
  JB = re({
    __name: 'NotificationDropdown',
    setup(e) {
      const { t, locale: n } = Lo(),
        o = new Intl.RelativeTimeFormat(n.value, { style: 'short' }),
        r = H(!1),
        a = (c) => {
          const d = new Date()
          return d.setTime(d.getTime() + c), d
        },
        l = [
          {
            message: '4 pending requests',
            icon: 'favorite_outline',
            id: 1,
            separator: !0,
            updateTimestamp: a(-3 * 60 * 1e3),
          },
          {
            message: '3 new reports',
            icon: 'calendar_today',
            id: 2,
            separator: !0,
            updateTimestamp: a(-12 * 60 * 60 * 1e3),
          },
          {
            message: 'Whoops! Your trial period has expired.',
            icon: 'error_outline',
            id: 3,
            separator: !0,
            updateTimestamp: a(-2 * 24 * 60 * 60 * 1e3),
          },
          {
            message: 'It looks like your timezone is set incorrectly, please change it to avoid issues with Memory.',
            icon: 'schedule',
            id: 4,
            updateTimestamp: a(-2 * 7 * 24 * 60 * 60 * 1e3),
          },
          {
            message: '2 new team members added',
            icon: 'group_add',
            id: 5,
            separator: !1,
            updateTimestamp: a(-3 * 60 * 1e3),
          },
          {
            message: 'Monthly budget exceeded by 10%',
            icon: 'trending_up',
            id: 6,
            separator: !0,
            updateTimestamp: a(-3 * 24 * 60 * 60 * 1e3),
          },
          {
            message: '7 tasks are approaching their deadlines',
            icon: 'alarm',
            id: 7,
            separator: !1,
            updateTimestamp: a(-5 * 60 * 60 * 1e3),
          },
          {
            message: 'New software update available',
            icon: 'system_update',
            id: 8,
            separator: !0,
            updateTimestamp: a(-1 * 24 * 60 * 60 * 1e3),
          },
        ].sort((c, d) => new Date(d.updateTimestamp).getTime() - new Date(c.updateTimestamp).getTime()),
        s = {
          second: 1e3,
          minute: 1e3 * 60,
          hour: 1e3 * 60 * 60,
          day: 1e3 * 60 * 60 * 24,
          week: 1e3 * 60 * 60 * 24 * 7,
          month: 1e3 * 60 * 60 * 24 * 30,
          year: 1e3 * 60 * 60 * 24 * 365,
        },
        i = (c) => Object.keys(s).reduce((d, m) => (s[m] < c ? m : d), 'month'),
        u = p(() => {
          const c = r.value ? l : l.slice(0, XB)
          return c.map((d, m) => {
            const v = Math.round(new Date().getTime() - new Date(d.updateTimestamp).getTime()),
              g = i(v)
            let h = !1
            const _ = c[m + 1]
            if (_) {
              const y = Math.round(new Date().getTime() - new Date(_.updateTimestamp).getTime()),
                b = i(y)
              g !== b && (h = !0)
            }
            return { ...d, updateTimestamp: o.format(-1 * Math.round(v / s[g]), g), separator: h }
          })
        })
      return (c, d) => {
        const m = Je('VaBadge'),
          v = Je('VaButton'),
          g = Je('VaIcon'),
          h = Je('VaListItemSection'),
          _ = Je('VaListItem'),
          y = Je('VaListSeparator'),
          b = Je('VaList'),
          w = Je('VaDropdownContent'),
          S = Je('VaDropdown')
        return (
          C(),
          ee(
            S,
            { offset: [13, 0], class: 'notification-dropdown', 'stick-to-edges': '', 'close-on-content-click': !1 },
            {
              anchor: G(() => [
                ne(
                  v,
                  { preset: 'secondary', color: 'textPrimary' },
                  {
                    default: G(() => [
                      ne(
                        m,
                        { overlap: '' },
                        {
                          text: G(() => d[1] || (d[1] = [Fe(' 2+')])),
                          default: G(() => [ne(qB, { class: 'notification-dropdown__icon' })]),
                          _: 1,
                        },
                      ),
                    ]),
                    _: 1,
                  },
                ),
              ]),
              default: G(() => [
                ne(
                  w,
                  { class: 'h-full sm:max-w-[420px] sm:h-auto' },
                  {
                    default: G(() => [
                      Y('section', YB, [
                        ne(
                          b,
                          { class: 'space-y-1 mb-2' },
                          {
                            default: G(() => [
                              (C(!0),
                              A(
                                Te,
                                null,
                                Ue(
                                  u.value,
                                  ($, k) => (
                                    C(),
                                    A(
                                      Te,
                                      { key: $.id },
                                      [
                                        ne(
                                          _,
                                          { class: 'text-base' },
                                          {
                                            default: G(() => [
                                              ne(
                                                h,
                                                { icon: '', class: 'mx-0 p-0' },
                                                {
                                                  default: G(() => [
                                                    ne(g, { name: $.icon, color: 'secondary' }, null, 8, ['name']),
                                                  ]),
                                                  _: 2,
                                                },
                                                1024,
                                              ),
                                              ne(h, null, { default: G(() => [Fe(Ae($.message), 1)]), _: 2 }, 1024),
                                              ne(
                                                h,
                                                { icon: '', class: 'mx-1' },
                                                { default: G(() => [Fe(Ae($.updateTimestamp), 1)]), _: 2 },
                                                1024,
                                              ),
                                            ]),
                                            _: 2,
                                          },
                                          1024,
                                        ),
                                        $.separator && k !== u.value.length - 1
                                          ? (C(), ee(y, { key: 0, class: 'mx-3' }))
                                          : W('', !0),
                                      ],
                                      64,
                                    )
                                  ),
                                ),
                                128,
                              )),
                            ]),
                            _: 1,
                          },
                        ),
                        ne(
                          v,
                          { preset: 'primary', class: 'w-full', onClick: d[0] || (d[0] = ($) => (r.value = !r.value)) },
                          {
                            default: G(() => [
                              Fe(Ae(r.value ? f(t)('notifications.less') : f(t)('notifications.all')), 1),
                            ]),
                            _: 1,
                          },
                        ),
                      ]),
                    ]),
                    _: 1,
                  },
                ),
              ]),
              _: 1,
            },
          )
        )
      }
    },
  }),
  QB = cr(JB, [['__scopeId', 'data-v-b14a545c']]),
  ZB = { class: 'app-navbar-actions' },
  eN = re({
    __name: 'AppNavbarActions',
    props: { isMobile: { type: Boolean, default: !1 } },
    setup(e) {
      return (
        Lo(),
        (t, n) => (
          C(),
          A('div', ZB, [
            ne(QB, { class: 'app-navbar-actions__item' }),
            ne(WB, { class: 'app-navbar-actions__item app-navbar-actions__item--profile mr-1' }),
          ])
        )
      )
    },
  }),
  tN = { class: 'left' },
  nN = re({
    __name: 'AppNavbar',
    props: { isMobile: { type: Boolean, default: !1 } },
    setup(e) {
      const t = Nc(),
        { isSidebarMinimized: n } = Oc(t)
      return (o, r) => {
        const a = Je('VaIcon'),
          l = Je('RouterLink'),
          s = Je('VaNavbar')
        return (
          C(),
          ee(
            s,
            { class: 'app-layout-navbar py-2 px-0' },
            {
              left: G(() => [
                Y('div', tN, [
                  e.isMobile
                    ? (C(),
                      ee(
                        Ka,
                        { key: 0, name: 'icon-fade', mode: 'out-in' },
                        {
                          default: G(() => [
                            ne(
                              a,
                              {
                                color: 'primary',
                                name: f(n) ? 'menu' : 'close',
                                size: '24px',
                                style: { 'margin-top': '3px' },
                                onClick: r[0] || (r[0] = (i) => (n.value = !f(n))),
                              },
                              null,
                              8,
                              ['name'],
                            ),
                          ]),
                          _: 1,
                        },
                      ))
                    : W('', !0),
                  ne(
                    l,
                    { to: '/', 'aria-label': 'Visit home page' },
                    {
                      default: G(() => [
                        ne(_u, {
                          src: 'http://www.heinzmann.cn/images/logo.png',
                          alt: 'HaiMan Logo',
                          height: '18',
                          width: '180',
                        }),
                      ]),
                      _: 1,
                    },
                  ),
                ]),
              ]),
              right: G(() => [
                ne(eN, { class: 'app-navbar__actions', 'is-mobile': e.isMobile }, null, 8, ['is-mobile']),
              ]),
              _: 1,
            },
          )
        )
      }
    },
  }),
  oN = cr(nN, [['__scopeId', 'data-v-c5519f79']]),
  rN = re({
    name: 'Sidebar',
    props: { visible: { type: Boolean, default: !0 }, mobile: { type: Boolean, default: !1 } },
    emits: ['update:visible'],
    setup: (e, { emit: t }) => {
      const { getColor: n, colorToRgba: o } = Re(),
        r = Dy(),
        { t: a } = Lo(),
        l = H([]),
        s = p({ get: () => e.visible, set: (y) => t('update:visible', y) }),
        i = (y) => r.name === y.name,
        u = (y) =>
          y.children ? y.children.some(({ name: b }) => r.path.endsWith(`${b}`)) : r.path.endsWith(`${y.name}`),
        c = () => (l.value = bu.routes.map((y) => u(y))),
        d = p(() => (e.mobile ? '100vw' : '280px')),
        m = p(() => n('background-secondary')),
        v = p(() => o(n('focus'), 0.1)),
        g = (y) => (u(y) ? 'primary' : 'secondary'),
        h = (y) => (u(y) ? 'primary' : 'textPrimary'),
        _ = (y) => (y ? 'va-arrow-up' : 'va-arrow-down')
      return (
        ge(() => r.fullPath, c, { immediate: !0 }),
        {
          writableVisible: s,
          sidebarWidth: d,
          value: l,
          color: m,
          activeColor: v,
          navigationRoutes: bu,
          routeHasActiveChild: u,
          isActiveChildRoute: i,
          t: a,
          iconColor: g,
          textColor: h,
          arrowDirection: _,
        }
      )
    },
  })
function aN(e, t, n, o, r, a) {
  const l = Je('VaIcon'),
    s = Je('VaSidebarItemTitle'),
    i = Je('VaSidebarItemContent'),
    u = Je('VaSidebarItem'),
    c = Je('VaCollapse'),
    d = Je('VaAccordion'),
    m = Je('VaSidebar')
  return (
    C(),
    ee(
      m,
      {
        modelValue: e.writableVisible,
        'onUpdate:modelValue': t[1] || (t[1] = (v) => (e.writableVisible = v)),
        width: e.sidebarWidth,
        color: e.color,
        'minimized-width': '0',
      },
      {
        default: G(() => [
          ne(
            d,
            { modelValue: e.value, 'onUpdate:modelValue': t[0] || (t[0] = (v) => (e.value = v)), multiple: '' },
            {
              default: G(() => [
                (C(!0),
                A(
                  Te,
                  null,
                  Ue(
                    e.navigationRoutes.routes,
                    (v, g) => (
                      C(),
                      ee(
                        c,
                        { key: g },
                        {
                          header: G(({ value: h }) => [
                            ne(
                              u,
                              {
                                to: v.children ? void 0 : { name: v.name },
                                active: e.routeHasActiveChild(v),
                                'active-color': e.activeColor,
                                'text-color': e.textColor(v),
                                'aria-label': `${v.children ? 'Open category ' : 'Visit'} ${e.t(v.displayName)}`,
                                role: 'button',
                                'hover-opacity': '0.10',
                              },
                              {
                                default: G(() => [
                                  ne(
                                    i,
                                    { class: 'py-3 pr-2 pl-4' },
                                    {
                                      default: G(() => [
                                        v.meta.icon
                                          ? (C(),
                                            ee(
                                              l,
                                              {
                                                key: 0,
                                                'aria-hidden': 'true',
                                                name: v.meta.icon,
                                                size: '20px',
                                                color: e.iconColor(v),
                                              },
                                              null,
                                              8,
                                              ['name', 'color'],
                                            ))
                                          : W('', !0),
                                        ne(
                                          s,
                                          { class: 'flex justify-between items-center leading-5 font-semibold' },
                                          {
                                            default: G(() => [
                                              Fe(Ae(e.t(v.displayName)) + ' ', 1),
                                              v.children
                                                ? (C(),
                                                  ee(l, { key: 0, name: e.arrowDirection(h), size: '20px' }, null, 8, [
                                                    'name',
                                                  ]))
                                                : W('', !0),
                                            ]),
                                            _: 2,
                                          },
                                          1024,
                                        ),
                                      ]),
                                      _: 2,
                                    },
                                    1024,
                                  ),
                                ]),
                                _: 2,
                              },
                              1032,
                              ['to', 'active', 'active-color', 'text-color', 'aria-label'],
                            ),
                          ]),
                          body: G(() => [
                            (C(!0),
                            A(
                              Te,
                              null,
                              Ue(
                                v.children,
                                (h, _) => (
                                  C(),
                                  A('div', { key: _ }, [
                                    ne(
                                      u,
                                      {
                                        to: { name: h.name },
                                        active: e.isActiveChildRoute(h),
                                        'active-color': e.activeColor,
                                        'text-color': e.textColor(h),
                                        'aria-label': `Visit ${e.t(v.displayName)}`,
                                        'hover-opacity': '0.10',
                                      },
                                      {
                                        default: G(() => [
                                          ne(
                                            i,
                                            { class: 'py-3 pr-2 pl-11' },
                                            {
                                              default: G(() => [
                                                ne(
                                                  s,
                                                  { class: 'leading-5 font-semibold' },
                                                  { default: G(() => [Fe(Ae(e.t(h.displayName)), 1)]), _: 2 },
                                                  1024,
                                                ),
                                              ]),
                                              _: 2,
                                            },
                                            1024,
                                          ),
                                        ]),
                                        _: 2,
                                      },
                                      1032,
                                      ['to', 'active', 'active-color', 'text-color', 'aria-label'],
                                    ),
                                  ])
                                ),
                              ),
                              128,
                            )),
                          ]),
                          _: 2,
                        },
                        1024,
                      )
                    ),
                  ),
                  128,
                )),
              ]),
              _: 1,
            },
            8,
            ['modelValue'],
          ),
        ]),
        _: 1,
      },
      8,
      ['modelValue', 'width', 'color'],
    )
  )
}
const lN = cr(rN, [['render', aN]]),
  sN = { key: 0, class: 'flex justify-end' },
  iN = { class: 'p-4 pt-0' },
  uN = {
    __name: 'AppLayout',
    setup(e) {
      const t = Nc(),
        n = Dg(),
        o = H('16rem'),
        r = H(void 0),
        a = H(!1),
        l = H(!1),
        { isSidebarMinimized: s } = Oc(t),
        i = () => {
          ;(s.value = n.mdDown),
            (a.value = n.smDown),
            (l.value = n.mdDown),
            (r.value = a.value ? '0' : '4.5rem'),
            (o.value = l.value ? '100%' : '16rem')
        }
      et(() => {
        window.addEventListener('resize', i), i()
      }),
        wt(() => {
          window.removeEventListener('resize', i)
        }),
        vB(() => {
          n.mdDown && (s.value = !0)
        })
      const u = p(() => l.value && !s.value),
        c = () => {
          s.value = !0
        }
      return (d, m) => {
        const v = Je('VaButton'),
          g = Je('RouterView'),
          h = Je('VaLayout')
        return (
          C(),
          ee(
            h,
            {
              top: { fixed: !0, order: 2 },
              left: { fixed: !0, absolute: f(n).mdDown, order: 1, overlay: f(n).mdDown && !f(s) },
              onLeftOverlayClick: m[0] || (m[0] = (_) => (s.value = !0)),
            },
            {
              top: G(() => [ne(oN, { 'is-mobile': a.value }, null, 8, ['is-mobile'])]),
              left: G(() => [
                ne(lN, { minimized: f(s), animated: !a.value, mobile: a.value }, null, 8, [
                  'minimized',
                  'animated',
                  'mobile',
                ]),
              ]),
              content: G(() => [
                Y(
                  'div',
                  { class: Pe([{ minimized: f(s) }, 'app-layout__sidebar-wrapper']) },
                  [
                    u.value
                      ? (C(),
                        A('div', sN, [ne(v, { class: 'px-4 py-4', icon: 'md_close', preset: 'plain', onClick: c })]))
                      : W('', !0),
                  ],
                  2,
                ),
                a.value ? W('', !0) : (C(), ee(FB, { key: 0, class: 'p-4' })),
                Y('main', iN, [Y('article', null, [ne(g)])]),
              ]),
              _: 1,
            },
            8,
            ['left'],
          )
        )
      }
    },
  },
  cN = cr(uN, [['__scopeId', 'data-v-58ef7d30']]),
  dN = [
    { path: '/', redirect: '/auth/login' },
    {
      path: '/auth',
      component: EB,
      children: [
        {
          name: 'login',
          path: 'login',
          component: () => In(() => import('./Login-Bdo3PIOR.js'), __vite__mapDeps([0, 1, 2])),
        },
        { name: 'signup', path: 'signup', component: () => In(() => import('./Signup-pw8UUdNc.js'), []) },
        {
          name: 'recover-password',
          path: 'recover-password',
          component: () => In(() => import('./RecoverPassword-B1tPpkPu.js'), __vite__mapDeps([3, 1, 2])),
        },
        {
          name: 'recover-password-email',
          path: 'recover-password-email',
          component: () => In(() => import('./CheckTheEmail-Bhpwp8k_.js'), []),
        },
        { path: '', redirect: { name: 'login' } },
      ],
    },
    {
      name: 'admin',
      path: '/admin',
      component: cN,
      meta: { requiresAuth: !0 },
      redirect: { name: 'users' },
      children: [
        {
          name: 'dashboard',
          path: 'dashboard',
          component: () =>
            In(() => import('./Dashboard-DVRfWaeA.js').then((e) => e.j), __vite__mapDeps([4, 5, 6, 7, 8])),
        },
        { name: 'settings', path: 'settings', component: () => In(() => import('./Settings-CGAh2X1g.js'), []) },
        {
          name: 'users',
          path: 'users',
          component: () => In(() => import('./UsersPage-BM4tyEGw.js'), __vite__mapDeps([9, 5, 10, 6, 7, 1, 2, 11])),
        },
        {
          name: 'projects',
          path: 'projects',
          component: () => In(() => import('./ProjectsPage-DaFgbvAI.js'), __vite__mapDeps([12, 10, 7, 5, 1, 2, 13])),
        },
        {
          name: 'testingItem',
          path: 'testingItem',
          component: () => In(() => import('./TestingItemsPage-Co-6TqXW.js'), __vite__mapDeps([14, 5, 10, 2, 15])),
        },
      ],
    },
    { name: '404', path: '/404', component: () => In(() => import('./404-CNWArFjr.js'), []) },
    { path: '/:pathMatch(.*)*', redirect: '/404' },
  ],
  Fy = SB({
    history: RL('/'),
    scrollBehavior(e, t, n) {
      if (n) return n
      if (e.hash) return { el: e.hash, behavior: 'smooth' }
      window.scrollTo(0, 0)
    },
    routes: dN,
  })
Fy.beforeEach((e, t, n) => {
  const o = My(),
    r = o.isAuthenticated
  t.name === void 0 && !r && o.restoreAuth(),
    e.matched.some((l) => l.meta.requiresAuth) && !o.isAuthenticated
      ? n({ name: 'login' })
      : e.path.startsWith('/auth') && o.isAuthenticated
        ? n('/admin/users')
        : n()
})
const mN = [
    { name: 'angle_down', to: 'fa4-angle-down' },
    { name: 'angle_up', to: 'fa4-angle-up' },
    { name: 'bell', to: 'fa4-bell' },
    { name: 'bell_slash', to: 'fa4-bell-slash' },
    { name: 'cogs', to: 'fa4-cogs' },
    { name: 'envelope', to: 'fa4-envelope' },
    { name: 'eye', to: 'fa4-eye' },
    { name: 'gear', to: 'fa4-gear' },
    { name: 'map', to: 'fa4-map' },
    { name: 'map_marker', to: 'fa4-map-marker' },
    { name: 'music', to: 'fa4-music' },
    { name: 'print', to: 'fa4-print' },
    { name: 'refresh', to: 'fa4-refresh' },
    { name: 'search', to: 'fa4-search' },
    { name: 'mars', to: 'fa4-mars' },
    { name: 'venus', to: 'fa4-venus' },
    { name: 'volume_off', to: 'fa4-volume-off' },
    { name: 'volume_up', to: 'fa4-volume-up' },
    { name: 'github', to: 'fa4-github' },
    { name: 'md_close', to: 'ion-md-close' },
    { name: 'images', to: 'ion-md-images' },
    { name: 'list', to: 'ion-md-list' },
    { name: 'musical_notes', to: 'ion-md-musical-notes' },
    { name: 'star_outline', to: 'ion-md-star-outline' },
    { name: 'grid', to: 'ion-md-grid' },
    { name: 'help', to: 'ion-md-help' },
    { name: 'key', to: 'ion-md-key' },
  ],
  fN = fg({
    aliases: mN,
    fonts: [
      { name: 'fa4-{code}', resolve: ({ code: e }) => ({ class: `fa4 fa fa-${e}` }) },
      { name: 'ion-{font}-{code}', resolve: ({ font: e, code: t }) => ({ class: `icon ion-${e}-${t}` }) },
      { name: 'vuestic-iconset-{code}', resolve: ({ code: e }) => ({ class: `vuestic-iconset vuestic-iconset-${e}` }) },
      {
        name: 'flag-icon-{code} {size}',
        resolve: ({ code: e, size: t }) => ({ class: `fi fi-${e} fi-size-${t}`, tag: 'span' }),
      },
      {
        name: /(brandico|entypo|fa|fontelico|glyphicon|iconicstroke|maki|openwebicons)-(.*)/,
        resolveFromRegex: (e, t) => ({ class: `${e} ${e}-${t}` }),
      },
      { name: 'material-icons-{code}', resolve: ({ code: e }) => ({ to: e }) },
      { name: 'mso-{content}', class: 'material-symbols-outlined', resolve: ({ content: e }) => ({ content: e }) },
    ],
  }),
  pN = {
    presets: {
      light: {
        backgroundPrimary: '#F4F6F8',
        backgroundSecondary: '#FFFFFF',
        backgroundCardPrimary: '#F7F9F9',
        backgroundCardSecondary: '#ECFDE6',
        success: '#228200',
        info: '#158DE3',
        danger: '#E42222',
        warning: '#FFD43A',
      },
      dark: { backgroundCardPrimary: '#111827', backgroundCardSecondary: '#0f172a' },
    },
  },
  vN = jC({
    colors: pN,
    icons: fN,
    breakpoint: { enabled: !0, bodyClass: !0, thresholds: { xs: 0, sm: 320, md: 640, lg: 1024, xl: 1440 } },
    components: {
      VaIcon: { sizesConfig: { defaultSize: 19, sizes: { small: 14, medium: 19, large: 26 } } },
      VaModal: { mobileFullscreen: !1, maxHeight: 'calc(100% - 2rem)' },
      VaPagination: { activeButtonProps: { preset: 'primary' } },
      VaDataTable: { disableClientSideSorting: !0 },
      presets: {
        VaSelect: {
          small: {
            class: 'va-select--small',
            keepAnchorWidth: !1,
            placement: 'bottom-end',
            width: 'min(100%, 150px)',
            style:
              '--va-input-wrapper-min-height: 24px; --va-input-wrapper-border-radius: 2px; --va-input-wrapper-width: 100px;',
          },
        },
      },
    },
  }),
  sl = t0(l0)
sl.use(yL)
sl.use(Fy)
sl.use(DC)
sl.use(cL({ config: vN }))
sl.mount('#app')
export {
  e1 as $,
  Pe as A,
  Re as B,
  Ue as C,
  Pu as D,
  hN as E,
  Te as F,
  an as G,
  Mn as H,
  ge as I,
  bk as J,
  J$ as K,
  ek as L,
  Ut as M,
  nt as N,
  np as O,
  $e as P,
  su as Q,
  ct as R,
  gi as S,
  zp as T,
  Su as U,
  Kk as V,
  rp as W,
  je as X,
  cg as Y,
  n1 as Z,
  cr as _,
  My as a,
  Zw as a0,
  Ze as a1,
  lz as a2,
  wt as a3,
  at as a4,
  Vu as a5,
  on as b,
  Je as c,
  re as d,
  ee as e,
  Se as f,
  Y as g,
  ne as h,
  f as i,
  Fe as j,
  A as k,
  Lo as l,
  et as m,
  dt as n,
  C as o,
  p,
  me as q,
  H as r,
  ky as s,
  Ae as t,
  Ry as u,
  W as v,
  G as w,
  vn as x,
  In as y,
  L as z,
}
//# sourceMappingURL=index-0P5HgXYM.js.map
