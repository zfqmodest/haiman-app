{"version":3,"file":"useUsers-CVVRekrF.js","sources":["../../src/pages/users/widgets/UserAvatar.vue","../../src/data/pages/users.ts","../../src/stores/users.ts","../../src/pages/users/composables/useUsers.ts"],"sourcesContent":["<script setup lang=\"ts\">\nimport { type PropType } from 'vue'\nimport { type User } from '../types'\n\nconst avatarColor = (userName: string) => {\n  const colors = ['primary', '#FFD43A', '#ADFF00', '#262824', 'danger']\n  const index = userName.charCodeAt(0) % colors.length\n  return colors[index]\n}\n\ndefineProps({\n  user: {\n    type: Object as PropType<User>,\n    required: true,\n  },\n  size: {\n    type: String,\n    default: 'medium',\n  },\n})\n\nconst fallback = (fullname: string) => {\n  try {\n    const [firstName, lastName] = fullname.split(' ')\n    return `${firstName[0]}${lastName[0]}`\n  } catch {\n    return fullname[0]\n  }\n}\n</script>\n\n<template>\n  <VaAvatar :size=\"size\" :fallback-text=\"fallback(user.fullname)\" :color=\"avatarColor(user.fullname)\" />\n</template>\n","import { User } from '../../pages/users/types'\nimport { authApi } from '../../services/api'\n\nexport type Pagination = {\n  page: number\n  perPage: number\n  total: number\n}\n\nexport type Sorting = {\n  sortBy: keyof User | undefined\n  sortingOrder: 'asc' | 'desc' | null\n}\n\nexport type Filters = {\n  search: string\n}\n\nexport const getUsers = async (filters: Partial<Filters & Pagination & Sorting>) => {\n  try {\n    // 从后端API获取用户数据\n    const response = await authApi.getUsers()\n\n    if (!response.ok) {\n      throw new Error('获取用户数据失败')\n    }\n\n    const data = await response.json()\n\n    if (!data.success) {\n      throw new Error(data.message || '获取用户数据失败')\n    }\n\n    const users = data.data // 用户数组直接在 data.data 中\n    // 应用前端过滤（在真实应用中，这些应该在后端完成）\n    let filteredUsers = users\n\n    if (filters.search) {\n      const searchLower = filters.search.toLowerCase()\n      filteredUsers = filteredUsers.filter(\n        (user: User) =>\n          user.fullname.toLowerCase().includes(searchLower) ||\n          user.username.toLowerCase().includes(searchLower) ||\n          (user.phone && user.phone.includes(searchLower)),\n      )\n    }\n\n    // 应用排序\n    if (filters.sortBy && filters.sortingOrder) {\n      filteredUsers.sort((a: User, b: User) => {\n        const aValue = a[filters.sortBy as keyof User]\n        const bValue = b[filters.sortBy as keyof User]\n\n        if (aValue && bValue && aValue < bValue) return filters.sortingOrder === 'asc' ? -1 : 1\n        if (aValue && bValue && aValue > bValue) return filters.sortingOrder === 'asc' ? 1 : -1\n        return 0\n      })\n    }\n\n    // 应用分页\n    const startIndex = ((filters.page || 1) - 1) * (filters.perPage || 10)\n    const endIndex = startIndex + (filters.perPage || 10)\n    const paginatedUsers = filteredUsers.slice(startIndex, endIndex)\n\n    return {\n      data: paginatedUsers,\n      pagination: {\n        page: filters.page || 1,\n        perPage: filters.perPage || 10,\n        total: filteredUsers.length,\n      },\n    }\n  } catch (error) {\n    console.error('获取用户数据时出错:', error)\n    return {\n      data: [],\n      pagination: {\n        page: 1,\n        perPage: 10,\n        total: 0,\n      },\n    }\n  }\n}\n\nexport const addUser = async (user: User) => {\n  // 此方法已被替换为 authApi.createUser，这里保留以避免破坏现有调用\n  throw new Error('请使用 authApi.createUser 方法')\n}\n\nexport const updateUser = async (user: User) => {\n  try {\n    const response = await authApi.updateUser(Number(user.id), {\n      fullName: user.fullname,\n      email: user.email,\n      phone: user.phone,\n      password: user.password,\n      role: user.role,\n      active: user.active,\n    })\n\n    if (!response.ok) {\n      if (response.status === 403) {\n        throw new Error('没有权限更新用户')\n      }\n\n      const errorData = await response.json()\n      throw new Error(errorData.message || `更新用户失败 (状态码: ${response.status})`)\n    }\n\n    const result = await response.json()\n    if (!result.success) {\n      throw new Error(result.message || 'Failed to update user')\n    }\n\n    return result.data\n  } catch (error) {\n    console.error('Error updating user:', error)\n    throw error\n  }\n}\n\nexport const uploadAvatar = async (body: FormData) => {\n  // TODO: 实现头像上传功能\n  throw new Error('头像上传功能待实现')\n}\n","import { defineStore } from 'pinia'\nimport { type Filters, getUsers, Pagination, Sorting, updateUser, uploadAvatar } from '../data/pages/users'\nimport { User } from '../pages/users/types'\nimport { authApi } from '../services/api'\n\nexport const useUsersStore = defineStore('users', {\n  state: () => {\n    return {\n      items: [] as User[],\n      pagination: { page: 1, perPage: 10, total: 0 },\n    }\n  },\n\n  actions: {\n    async getAll(options: { pagination?: Pagination; sorting?: Sorting; filters?: Partial<Filters> }) {\n      const { data, pagination } = await getUsers({\n        ...options.filters,\n        ...options.sorting,\n        ...options.pagination,\n      })\n      this.items = data\n      this.pagination = pagination\n    },\n\n    async add(user: User) {\n      try {\n        // 使用新的管理员创建用户API\n        const response = await authApi.createUser({\n          username: user.username,\n          password: user.password || '',\n          fullName: user.fullname,\n          email: user.email || '',\n          phone: user.phone || '',\n          role: user.role,\n        })\n\n        if (!response.ok) {\n          const errorData = await response.json()\n          throw new Error(errorData.message || 'Failed to create user')\n        }\n\n        const newUser = await response.json()\n        return newUser\n      } catch (error) {\n        console.error('Error creating user:', error)\n        throw error\n      }\n    },\n    async update(user: User) {\n      const updatedUser = await updateUser(user)\n      return updatedUser\n    },\n    async remove(user: User) {\n      try {\n        // 调用后端API删除用户\n        const response = await authApi.deleteUser(Number(user.id))\n\n        if (!response.ok) {\n          // 对于非JSON响应（如403），创建错误消息\n          if (response.status === 403) {\n            throw new Error('没有权限删除用户')\n          }\n          try {\n            const errorData = await response.json()\n            throw new Error(errorData.message || `删除用户失败 (状态码: ${response.status})`)\n          } catch (jsonError) {\n            throw new Error(`删除用户失败 (状态码: ${response.status})`)\n          }\n        }\n\n        const result = await response.json()\n        if (!result.success) {\n          throw new Error(result.message || 'Failed to delete user')\n        }\n\n        return true\n      } catch (error) {\n        console.error('Error deleting user:', error)\n        throw error\n      }\n    },\n\n    async uploadAvatar(formData: FormData) {\n      return uploadAvatar(formData)\n    },\n  },\n})\n","import { Ref, ref, unref, watch, computed } from 'vue'\nimport { v4 as uuid } from 'uuid'\nimport type { Filters, Pagination, Sorting } from '../../../data/pages/users'\nimport { User } from '../types'\nimport { useUsersStore } from '../../../stores/users'\n\nconst makePaginationRef = () => ref<Pagination>({ page: 1, perPage: 10, total: 0 })\nconst makeSortingRef = () => ref<Sorting>({ sortBy: 'fullname', sortingOrder: null })\nconst makeFiltersRef = () => ref<Partial<Filters>>({ search: '' })\n\nexport const useUsers = (options?: {\n  pagination?: Ref<Pagination>\n  sorting?: Ref<Sorting>\n  filters?: Ref<Partial<Filters>>\n}) => {\n  const isLoading = ref(false)\n  const error = ref()\n  const usersStore = useUsersStore()\n\n  const { filters = makeFiltersRef(), sorting = makeSortingRef(), pagination = makePaginationRef() } = options || {}\n\n  const fetch = async () => {\n    isLoading.value = true\n    try {\n      await usersStore.getAll({\n        filters: unref(filters),\n        sorting: unref(sorting),\n        pagination: unref(pagination),\n      })\n      pagination.value = usersStore.pagination\n    } finally {\n      isLoading.value = false\n    }\n  }\n\n  watch(\n    filters,\n    () => {\n      // Reset pagination to first page when filters changed\n      pagination.value.page = 1\n      fetch()\n    },\n    { deep: true },\n  )\n\n  fetch()\n  const users = computed(() => {\n    const getSortItem = (obj: any, sortBy: string) => {\n      return obj[sortBy]\n    }\n\n    const paginated = usersStore.items.slice(\n      (pagination.value.page - 1) * pagination.value.perPage,\n      pagination.value.page * pagination.value.perPage,\n    )\n\n    if (sorting.value.sortBy && sorting.value.sortingOrder) {\n      paginated.sort((a, b) => {\n        const first = getSortItem(a, sorting.value.sortBy!)\n        const second = getSortItem(b, sorting.value.sortBy!)\n        if (first > second) {\n          return sorting.value.sortingOrder === 'asc' ? 1 : -1\n        }\n        if (first < second) {\n          return sorting.value.sortingOrder === 'asc' ? -1 : 1\n        }\n        return 0\n      })\n    }\n    return paginated\n  })\n\n  return {\n    error,\n    isLoading,\n    filters,\n    sorting,\n    pagination,\n\n    users,\n\n    fetch,\n    async add(user: User) {\n      isLoading.value = true\n      try {\n        const result = await usersStore.add(user)\n        // 添加成功后重新获取数据\n        await fetch()\n        return result\n      } catch (e) {\n        error.value = e\n      } finally {\n        isLoading.value = false\n      }\n    },\n    async update(user: User) {\n      isLoading.value = true\n      try {\n        const result = await usersStore.update(user)\n        // 更新成功后重新获取数据\n        await fetch()\n        return result\n      } catch (e) {\n        error.value = e\n      } finally {\n        isLoading.value = false\n      }\n    },\n    async remove(user: User) {\n      isLoading.value = true\n      try {\n        const result = await usersStore.remove(user)\n        // 删除成功后重新获取数据\n        await fetch()\n        return result\n      } catch (e) {\n        error.value = e\n      } finally {\n        isLoading.value = false\n      }\n    },\n\n    async uploadAvatar(avatar: Blob) {\n      const formData = new FormData()\n      formData.append('avatar', avatar)\n      formData.append('id', uuid())\n\n      return usersStore.uploadAvatar(formData)\n    },\n  }\n}\n"],"names":["avatarColor","userName","colors","index","fallback","fullname","firstName","lastName","getUsers","filters","response","authApi","data","filteredUsers","searchLower","user","a","b","aValue","bValue","startIndex","endIndex","error","updateUser","errorData","result","uploadAvatar","body","useUsersStore","defineStore","options","pagination","formData","makePaginationRef","ref","makeSortingRef","makeFiltersRef","useUsers","isLoading","usersStore","sorting","fetch","unref","watch","users","computed","getSortItem","obj","sortBy","paginated","first","second","e","avatar","uuid"],"mappings":"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"}